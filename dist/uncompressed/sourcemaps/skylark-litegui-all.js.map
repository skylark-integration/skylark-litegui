{"version":3,"sources":["skylark-litegui-all.js"],"names":[],"mappingsfile":"../skylark-litegui-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\n\r\n/**\r\n* Core namespace of LiteGUI library, it holds some useful functions\r\n*\r\n* @class LiteGUI\r\n* @constructor\r\n*/\r\n\r\ndefine('skylark-litegui/litegui',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n\r\n\tvar LiteGUI = {\r\n\t\troot: null,\r\n\t\tcontent: null,\r\n\r\n\t\tpanels: {},\r\n\t\twindows: [], //windows opened by the GUI (we need to know about them to close them once the app closes)\r\n\r\n\t\t//undo\r\n\t\tundo_steps: [],\r\n\r\n\t\t//used for blacken when a modal dialog is shown\r\n\t\tmodalbg_div: null,\r\n\r\n\t\t//the top menu\r\n\t\tmainmenu: null,\r\n\r\n\t\t/**\r\n\t\t* initializes the lib, must be called\r\n\t\t* @method init\r\n\t\t* @param {object} options some options are container, menubar, \r\n\t\t*/\r\n\t\tinit: function(options)\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\r\n\t\t\tif(options.width && options.height)\r\n\t\t\t\tthis.setWindowSize(options.width,options.height);\r\n\r\n\t\t\t//choose main container\r\n\t\t\tthis.container = null;\r\n\t\t\tif( options.container )\r\n\t\t\t\tthis.container = document.getElementById(options.container);\r\n\t\t\tif(!this.container )\r\n\t\t\t\tthis.container = document.body;\r\n\r\n\t\t\tif( options.wrapped )\r\n\t\t\t{\r\n\t\t\t\t//create litegui root element\r\n\t\t\t\tvar root = document.createElement(\"div\");\r\n\t\t\t\troot.style.position = \"relative\";\r\n\t\t\t\troot.style.overflow = \"hidden\";\r\n\t\t\t\tthis.root = root;\r\n\t\t\t\tthis.container.appendChild( root );\r\n\r\n\t\t\t\t//content: the main container for everything\r\n\t\t\t\tvar content = document.createElement(\"div\");\r\n\t\t\t\tthis.content = content;\r\n\t\t\t\tthis.root.appendChild(content);\r\n\r\n\t\t\t\t//maximize\r\n\t\t\t\tif( this.root.classList.contains(\"fullscreen\") )\r\n\t\t\t\t{\r\n\t\t\t\t\twindow.addEventListener(\"resize\", function(e) { \r\n\t\t\t\t\t\tLiteGUI.maximizeWindow();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tthis.root = this.content = this.container;\r\n\r\n\t\t\tthis.root.className = \"litegui-wrap fullscreen\";\r\n\t\t\tthis.content.className = \"litegui-maincontent\";\r\n\r\n\t\t\t//create modal dialogs container\r\n\t\t\tvar modalbg = this.modalbg_div = document.createElement(\"div\");\r\n\t\t\tthis.modalbg_div.className = \"litemodalbg\";\r\n\t\t\tthis.root.appendChild(this.modalbg_div);\r\n\t\t\tmodalbg.style.display = \"none\";\r\n\r\n\t\t\t//create menubar\r\n\t\t\tif(options.menubar)\r\n\t\t\t\tthis.createMenubar();\r\n\r\n\t\t\t//called before anything\r\n\t\t\tif(options.gui_callback)\r\n\t\t\t\toptions.gui_callback();\r\n\r\n\t\t\t//external windows\r\n\t\t\twindow.addEventListener(\"beforeunload\", function(e) {\r\n\t\t\t\tfor(var i in LiteGUI.windows)\r\n\t\t\t\t\tLiteGUI.windows[i].close();\r\n\t\t\t\tLiteGUI.windows = [];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Triggers a simple event in an object (similar to jQuery.trigger)\r\n\t\t* @method trigger\r\n\t\t* @param {Object} element could be an HTMLEntity or a regular object\r\n\t\t* @param {String} event_name the type of the event\r\n\t\t* @param {*} params it will be stored in e.detail\r\n\t\t* @param {*} origin it will be stored in e.srcElement\r\n\t\t*/\r\n\t\ttrigger: function(element, event_name, params, origin)\r\n\t\t{\r\n\t\t\tvar evt = document.createEvent( 'CustomEvent' );\r\n\t\t\tevt.initCustomEvent( event_name, true,true, params ); //canBubble, cancelable, detail\r\n\t\t\tevt.srcElement = origin;\r\n\t\t\tif( element.dispatchEvent )\r\n\t\t\t\telement.dispatchEvent( evt );\r\n\t\t\telse if( element.__events )\r\n\t\t\t\telement.__events.dispatchEvent( evt );\r\n\t\t\t//else nothing seems binded here so nothing to do\r\n\t\t\treturn evt;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Binds an event in an object (similar to jQuery.bind)\r\n\t\t* If the element is not an HTML entity a new one is created, attached to the object (as non-enumerable, called __events) and used\r\n\t\t* @method trigger\r\n\t\t* @param {Object} element could be an HTMLEntity, a regular object, a query string or a regular Array of entities\r\n\t\t* @param {String} event the string defining the event\r\n\t\t* @param {Function} callback where to call\r\n\t\t*/\r\n\t\tbind: function( element, event, callback )\r\n\t\t{\r\n\t\t\tif(!element)\r\n\t\t\t\tthrow(\"Cannot bind to null\");\r\n\t\t\tif(!event)\r\n\t\t\t\tthrow(\"Event bind missing\");\r\n\t\t\tif(!callback)\r\n\t\t\t\tthrow(\"Bind callback missing\");\r\n\r\n\t\t\tif(element.constructor === String)\r\n\t\t\t\telement = document.querySelectorAll( element );\r\n\t\t\t\t\r\n\t\t\tif(element.constructor === NodeList || element.constructor === Array)\r\n\t\t\t{\r\n\t\t\t\tfor(var i = 0; i < element.length; ++i)\r\n\t\t\t\t\tinner( element[i] );\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tinner( element );\r\n\r\n\t\t\tfunction inner( element )\r\n\t\t\t{\r\n\t\t\t\tif(element.addEventListener)\r\n\t\t\t\t\telement.addEventListener(event, callback);\r\n\t\t\t\telse if(element.__events)\r\n\t\t\t\t\telement.__events.addEventListener( event, callback );\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t//create a dummy HTMLentity so we can use it to bind HTML events\r\n\t\t\t\t\tvar dummy = document.createElement(\"span\");\r\n\t\t\t\t\tdummy.widget = element; //double link\r\n\t\t\t\t\tObject.defineProperty( element, \"__events\", {\r\n\t\t\t\t\t\tenumerable: false,\r\n\t\t\t\t\t\tconfigurable: false,\r\n\t\t\t\t\t\twritable: false,\r\n\t\t\t\t\t\tvalue: dummy\r\n\t\t\t\t\t});\r\n\t\t\t\t\telement.__events.addEventListener( event, callback );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Unbinds an event in an object (similar to jQuery.unbind)\r\n\t\t* @method unbind\r\n\t\t* @param {Object} element could be an HTMLEntity or a regular object\r\n\t\t* @param {String} event the string defining the event\r\n\t\t* @param {Function} callback where to call\r\n\t\t*/\r\n\t\tunbind: function(element, event, callback)\r\n\t\t{\r\n\t\t\tif( element.removeEventListener )\r\n\t\t\t\telement.removeEventListener( event, callback );\r\n\t\t\telse if( element.__events && element.__events.removeEventListener )\r\n\t\t\t\telement.__events.removeEventListener( event, callback );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* removes a class \r\n\t\t* @method removeClass\r\n\t\t* @param {HTMLElement} root\r\n\t\t* @param {String} selector\r\n\t\t* @param {String} class_name\r\n\t\t*/\r\n\t\tremoveClass: function( elem, selector, class_name ){\r\n\t\t\tif(!class_name)\r\n\t\t\t{\r\n\t\t\t\tclass_name = selector;\r\n\t\t\t\tselector = \".\" + selector;\r\n\t\t\t}\r\n\t\t\tvar list = (elem || document).querySelectorAll( selector );\r\n\t\t\tfor(var i = 0; i < list.length; ++i)\r\n\t\t\t\tlist[i].classList.remove(class_name);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Appends litegui widget to the global interface\r\n\t\t* @method add\r\n\t\t* @param {Object} litegui_element\r\n\t\t*/\r\n\t\tadd: function( litegui_element )\r\n\t\t{\r\n\t\t\tthis.content.appendChild( litegui_element.root || litegui_element );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Remove from the interface, it is is an HTML element it is removed from its parent, if it is a widget the same.\r\n\t\t* @method remove\r\n\t\t* @param {Object} litegui_element it also supports HTMLentity, selector string or Array of elements\r\n\t\t*/\r\n\t\tremove: function( element )\r\n\t\t{\r\n\t\t\tif(!element)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif( element.constructor === String ) //selector\r\n\t\t\t{\r\n\t\t\t\tvar elements = document.querySelectorAll( element );\r\n\t\t\t\tfor(var i = 0; i < elements.length; ++i)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar element = elements[i];\r\n\t\t\t\t\tif(element && element.parentNode)\r\n\t\t\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( element.constructor === Array || element.constructor === NodeList ) \r\n\t\t\t{\r\n\t\t\t\tfor(var i = 0; i < element.length; ++i)\r\n\t\t\t\t\tLiteGUI.remove( element[i] );\r\n\t\t\t}\r\n\t\t\telse if( element.root && element.root.parentNode ) //ltiegui widget\r\n\t\t\t\telement.root.parentNode.removeChild( element.root );\r\n\t\t\telse if( element.parentNode ) //regular HTML entity\r\n\t\t\t\telement.parentNode.removeChild( element );\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* wrapper of document.getElementById\r\n\t\t* @method getById\r\n\t\t* @param {String} id\r\n\t\t* return {HTMLEntity}\r\n\t\t**/\r\n\t\tgetById: function(id)\r\n\t\t{\r\n\t\t\treturn document.getElementById(id);\r\n\t\t},\r\n\r\n\t\tcreateMenubar: function()\r\n\t\t{\r\n\t\t\tthis.menubar = new LiteGUI.Menubar(\"mainmenubar\");\r\n\t\t\tthis.add( this.menubar );\r\n\t\t},\r\n\r\n\t\tsetWindowSize: function(w,h)\r\n\t\t{\r\n\t\t\tvar style = this.root.style;\r\n\r\n\t\t\tif(w && h)\r\n\t\t\t{\r\n\t\t\t\tstyle.width = w+\"px\";\r\n\t\t\t\tstyle.height = h + \"px\";\r\n\t\t\t\tstyle.boxShadow = \"0 0 4px black\"\r\n\t\t\t\tthis.root.classList.remove(\"fullscreen\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif( this.root.classList.contains(\"fullscreen\") )\r\n\t\t\t\t\treturn;\r\n\t\t\t\tthis.root.classList.add(\"fullscreen\");\r\n\t\t\t\tstyle.width = \"100%\";\r\n\t\t\t\tstyle.height = \"100%\";\r\n\t\t\t\tstyle.boxShadow = \"0 0 0\";\r\n\t\t\t}\r\n\t\t\tLiteGUI.trigger( LiteGUI, \"resized\");\r\n\t\t},\r\n\r\n\t\tmaximizeWindow: function()\r\n\t\t{\r\n\t\t\tthis.setWindowSize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Change cursor\r\n\t\t* @method setCursor\r\n\t\t* @param {String} cursor\r\n\t\t**/\r\n\t\tsetCursor: function( name )\r\n\t\t{\r\n\t\t\tthis.root.style.cursor = name;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Test if the cursor is inside an element\r\n\t\t* @method setCursor\r\n\t\t* @param {String} cursor\r\n\t\t**/\r\n\t\tisCursorOverElement: function( event, element )\r\n\t\t{\r\n\t\t\tvar left = event.pageX;\r\n\t\t\tvar top = event.pageY;\r\n\t\t\tvar rect = element.getBoundingClientRect();\r\n\t\t\tif(!rect)\r\n\t\t\t\treturn false;\r\n\t\t\tif(top > rect.top && top < (rect.top + rect.height) &&\r\n\t\t\t\tleft > rect.left && left < (rect.left + rect.width) )\r\n\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tgetRect: function(element)\r\n\t\t{\r\n\t\t\treturn element.getBoundingClientRect();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Copy a string to the clipboard (it needs to be invoqued from a click event)\r\n\t\t* @method toClipboard\r\n\t\t* @param {String} data\r\n\t\t* @param {Boolean} force_local force to store the data in the browser clipboard (this one can be read back)\r\n\t\t**/\r\n\t\ttoClipboard: function( object, force_local )\r\n\t\t{\r\n\t\t\tif(object && object.constructor !== String )\r\n\t\t\t\tobject = JSON.stringify( object );\r\n\r\n\t\t\tvar input = null;\r\n\t\t\tvar in_clipboard = false;\r\n\t\t\tif( !force_local )\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tvar copySupported = document.queryCommandSupported('copy');\r\n\t\t\t\tinput = document.createElement(\"input\");\r\n\t\t\t\tinput.type = \"text\";\r\n\t\t\t\tinput.style.opacity = 0;\r\n\t\t\t\tinput.value = object;\r\n\t\t\t\tdocument.body.appendChild( input );\r\n\t\t\t\tinput.select();\r\n\t\t\t\tin_clipboard = document.execCommand('copy');\r\n\t\t\t\tconsole.log( in_clipboard ? \"saved to clipboard\" : \"problem saving to clipboard\");\r\n\t\t\t\tdocument.body.removeChild( input );\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif(input)\r\n\t\t\t\t\tdocument.body.removeChild( input );\r\n\t\t\t\tconsole.warn('Oops, unable to copy using the true clipboard');\r\n\t\t\t}\r\n\r\n\t\t\t//old system\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tthis._safe_cliboard = null;\r\n\t\t\t\tlocalStorage.setItem(\"litegui_clipboard\", object );\r\n\t\t\t}\r\n\t\t\tcatch (err)\r\n\t\t\t{\r\n\t\t\t\tthis._safe_cliboard = object;\r\n\t\t\t\tconsole.warn(\"cliboard quota excedeed\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Reads from the secondary clipboard (only can read if the data was stored using the toClipboard)\r\n\t\t* @method getLocalClipboard\r\n\t\t* @return {String} clipboard\r\n\t\t**/\r\n\t\tgetLocalClipboard: function()\r\n\t\t{\r\n\t\t\tvar data = localStorage.getItem(\"litegui_clipboard\");\r\n\t\t\tif(!data && this._safe_cliboard)\r\n\t\t\t\tdata = this._safe_cliboard;\r\n\t\t\tif(!data) \r\n\t\t\t\treturn null;\r\n\t\t\tif(data[0] == \"{\")\r\n\t\t\t\treturn JSON.parse( data );\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Insert some CSS code to the website\r\n\t\t* @method addCSS\r\n\t\t* @param {String|Object} code it could be a string with CSS rules, or an object with the style syntax.\r\n\t\t**/\r\n\t\taddCSS: function(code)\r\n\t\t{\r\n\t\t\tif(!code)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(code.constructor === String)\r\n\t\t\t{\r\n\t\t\t\tvar style = document.createElement('style');\r\n\t\t\t\tstyle.type = 'text/css';\r\n\t\t\t\tstyle.innerHTML = code;\r\n\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(var i in code)\r\n\t\t\t\tdocument.body.style[i] = code[i];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Requires a new CSS\r\n\t\t* @method requireCSS\r\n\t\t* @param {String} url string with url or an array with several urls\r\n\t\t* @param {Function} on_complete\r\n\t\t**/\r\n\t\trequireCSS: function(url, on_complete)\r\n\t\t{\r\n\t\t\tif(typeof(url)==\"string\")\r\n\t\t\t\turl = [url];\r\n\r\n\t\t\twhile(url.length)\r\n\t\t\t{\r\n\t\t\t\tvar link  = document.createElement('link');\r\n\t\t\t\t//link.id   = cssId;\r\n\t\t\t\tlink.rel  = 'stylesheet';\r\n\t\t\t\tlink.type = 'text/css';\r\n\t\t\t\tlink.href = url.shift(1);\r\n\t\t\t\tlink.media = 'all';\r\n\t\t\t\tvar head = document.getElementsByTagName('head')[0];\r\n\t\t\t\thead.appendChild(link);\r\n\t\t\t\tif(url.length == 0)\r\n\t\t\t\t\tlink.onload = on_complete;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Request file from url (it could be a binary, text, etc.). If you want a simplied version use \r\n\t\t* @method request\r\n\t\t* @param {Object} request object with all the parameters like data (for sending forms), dataType, success, error\r\n\t\t* @param {Function} on_complete\r\n\t\t**/\r\n\t\trequest: function(request)\r\n\t\t{\r\n\t\t\tvar dataType = request.dataType || \"text\";\r\n\t\t\tif(dataType == \"json\") //parse it locally\r\n\t\t\t\tdataType = \"text\";\r\n\t\t\telse if(dataType == \"xml\") //parse it locally\r\n\t\t\t\tdataType = \"text\";\r\n\t\t\telse if (dataType == \"binary\")\r\n\t\t\t{\r\n\t\t\t\t//request.mimeType = \"text/plain; charset=x-user-defined\";\r\n\t\t\t\tdataType = \"arraybuffer\";\r\n\t\t\t\trequest.mimeType = \"application/octet-stream\";\r\n\t\t\t}\t\r\n\r\n\t\t\t//regular case, use AJAX call\r\n\t        var xhr = new XMLHttpRequest();\r\n\t        xhr.open( request.data ? 'POST' : 'GET', request.url, true);\r\n\t        if(dataType)\r\n\t            xhr.responseType = dataType;\r\n\t        if (request.mimeType)\r\n\t            xhr.overrideMimeType( request.mimeType );\r\n\t\t\tif( request.nocache )\r\n\t\t\t\txhr.setRequestHeader('Cache-Control', 'no-cache');\r\n\r\n\t        xhr.onload = function(load)\r\n\t\t\t{\r\n\t\t\t\tvar response = this.response;\r\n\t\t\t\tif(this.status != 200)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar err = \"Error \" + this.status;\r\n\t\t\t\t\tif(request.error)\r\n\t\t\t\t\t\trequest.error(err);\r\n\t\t\t\t\tLEvent.trigger(xhr,\"fail\", this.status);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(request.dataType == \"json\") //chrome doesnt support json format\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresponse = JSON.parse(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(request.error)\r\n\t\t\t\t\t\t\trequest.error(err);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthrow err;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(request.dataType == \"xml\")\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar xmlparser = new DOMParser();\r\n\t\t\t\t\t\tresponse = xmlparser.parseFromString(response,\"text/xml\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(request.error)\r\n\t\t\t\t\t\t\trequest.error(err);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthrow err;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(request.success)\r\n\t\t\t\t\trequest.success.call(this, response, this);\r\n\t\t\t};\r\n\t        xhr.onerror = function(err) {\r\n\t\t\t\tif(request.error)\r\n\t\t\t\t\trequest.error(err);\r\n\t\t\t}\r\n\r\n\t\t\tvar data = new FormData();\r\n\t\t\tif( request.data )\r\n\t\t\t{\r\n\t\t\t\tfor(var i in request.data)\r\n\t\t\t\t\tdata.append(i,request.data[i]);\r\n\t\t\t}\r\n\r\n\t        xhr.send( data );\r\n\t\t\treturn xhr;\r\n\t\t},\t\r\n\r\n\t\t/**\r\n\t\t* Request file from url\r\n\t\t* @method requestText\r\n\t\t* @param {String} url\r\n\t\t* @param {Function} on_complete\r\n\t\t* @param {Function} on_error\r\n\t\t**/\r\n\t\trequestText: function(url, on_complete, on_error )\r\n\t\t{\r\n\t\t\treturn this.request({ url: url, dataType:\"text\", success: on_complete, error: on_error });\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Request file from url\r\n\t\t* @method requestJSON\r\n\t\t* @param {String} url\r\n\t\t* @param {Function} on_complete\r\n\t\t* @param {Function} on_error\r\n\t\t**/\r\n\t\trequestJSON: function(url, on_complete, on_error )\r\n\t\t{\r\n\t\t\treturn this.request({ url: url, dataType:\"json\", success: on_complete, error: on_error });\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Request binary file from url\r\n\t\t* @method requestBinary\r\n\t\t* @param {String} url\r\n\t\t* @param {Function} on_complete\r\n\t\t* @param {Function} on_error\r\n\t\t**/\r\n\t\trequestBinary: function(url, on_complete, on_error )\r\n\t\t{\r\n\t\t\treturn this.request({ url: url, dataType:\"binary\", success: on_complete, error: on_error });\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t* Request script and inserts it in the DOM\r\n\t\t* @method requireScript\r\n\t\t* @param {String|Array} url the url of the script or an array containing several urls\r\n\t\t* @param {Function} on_complete\r\n\t\t* @param {Function} on_error\r\n\t\t* @param {Function} on_progress (if several files are required, on_progress is called after every file is added to the DOM)\r\n\t\t**/\r\n\t\trequireScript: function(url, on_complete, on_error, on_progress, version )\r\n\t\t{\r\n\t\t\tif(!url)\r\n\t\t\t\tthrow(\"invalid URL\");\r\n\r\n\t\t\tif( url.constructor === String )\r\n\t\t\t\turl = [url];\r\n\r\n\t\t\tvar total = url.length;\r\n\t\t\tvar size = total;\r\n\t\t\tvar loaded_scripts = [];\r\n\r\n\t\t\tfor(var i in url)\r\n\t\t\t{\r\n\t\t\t\tvar script = document.createElement('script');\r\n\t\t\t\tscript.num = i;\r\n\t\t\t\tscript.type = 'text/javascript';\r\n\t\t\t\tscript.src = url[i] + ( version ? \"?version=\" + version : \"\" );\r\n\t\t\t\tscript.original_src = url[i];\r\n\t\t\t\tscript.async = false;\r\n\t\t\t\tscript.onload = function(e) { \r\n\t\t\t\t\ttotal--;\r\n\t\t\t\t\tloaded_scripts.push(this);\r\n\t\t\t\t\tif(total)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(on_progress)\r\n\t\t\t\t\t\t\ton_progress(this.original_src, this.num);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(on_complete)\r\n\t\t\t\t\t\ton_complete( loaded_scripts );\r\n\t\t\t\t};\r\n\t\t\t\tif(on_error)\r\n\t\t\t\t\tscript.onerror = function(err) { \r\n\t\t\t\t\t\ton_error(err, this.original_src, this.num );\r\n\t\t\t\t\t}\r\n\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t//old version, it loads one by one, so it is slower\r\n\t\trequireScriptSerial: function(url, on_complete, on_progress )\r\n\t\t{\r\n\t\t\tif(typeof(url)==\"string\")\r\n\t\t\t\turl = [url];\r\n\r\n\t\t\tvar loaded_scripts = [];\r\n\t\t\tfunction addScript()\r\n\t\t\t{\r\n\t\t\t\tvar script = document.createElement('script');\r\n\t\t\t\tscript.type = 'text/javascript';\r\n\t\t\t\tscript.src = url.shift(1);\r\n\t\t\t\tscript.onload = function(e) { \r\n\t\t\t\t\tif(url.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(on_progress)\r\n\t\t\t\t\t\t\ton_progress(url[0], url.length);\r\n\r\n\t\t\t\t\t\taddScript();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tloaded_scripts.push(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(on_complete)\r\n\t\t\t\t\t\ton_complete( loaded_scripts );\r\n\t\t\t\t};\r\n\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\r\n\t\t\t}\r\n\r\n\t\t\taddScript();\r\n\t\t},\r\n\r\n\t\tnewDiv: function(id, code)\r\n\t\t{\r\n\t\t\treturn this.createElement(\"div\",id,code);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Request script and inserts it in the DOM\r\n\t\t* @method createElement\r\n\t\t* @param {String} tag\r\n\t\t* @param {String} id_class string containing id and classes, example: \"myid .someclass .anotherclass\"\r\n\t\t* @param {String} content\r\n\t\t* @param {Object} style\r\n\t\t**/\r\n\t\tcreateElement: function(tag, id_class, content, style, events)\r\n\t\t{\r\n\t\t\tvar elem = document.createElement( tag );\r\n\t\t\tif(id_class)\r\n\t\t\t{\r\n\t\t\t\tvar t = id_class.split(\" \");\r\n\t\t\t\tfor(var i = 0; i < t.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(t[i][0] == \".\")\r\n\t\t\t\t\t\telem.classList.add( t[i].substr(1) );\r\n\t\t\t\t\telse if(t[i][0] == \"#\")\r\n\t\t\t\t\t\telem.id = t[i].substr(1);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telem.id = t[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telem.root = elem;\r\n\t\t\tif(content)\r\n\t\t\t\telem.innerHTML = content;\r\n\t\t\telem.add = function(v) { this.appendChild( v.root || v ); };\r\n\r\n\t\t\tif(style)\r\n\t\t\t{\r\n\t\t\t\tif(style.constructor === String)\r\n\t\t\t\t\telem.setAttribute(\"style\",style);\r\n\t\t\t\telse\r\n\t\t\t\t\tfor(var i in style)\r\n\t\t\t\t\t\telem.style[i] = style[i];\r\n\t\t\t}\r\n\r\n\t\t\tif(events)\r\n\t\t\t{\r\n\t\t\t\tfor(var i in events)\r\n\t\t\t\t\telem.addEventListener(i, events[i]);\r\n\t\t\t}\r\n\t\t\treturn elem;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Useful to create elements from a text like '<div><span class=\"title\"></span></div>' and an object like { \".title\":\"mytitle\" }\r\n\t\t* @method createListItem\r\n\t\t* @param {String} code\r\n\t\t* @param {Object} values it will use innerText in the elements that matches that selector\r\n\t\t* @param {Object} style\r\n\t\t* @return {HTMLElement} \r\n\t\t**/\r\n\t\tcreateListItem: function( code, values, style )\r\n\t\t{\r\n\t\t\tvar elem = document.createElement(\"span\");\r\n\t\t\telem.innerHTML = code;\r\n\t\t\telem = elem.childNodes[0]; //to get the node\r\n\t\t\tif(values)\r\n\t\t\tfor(var i in values)\r\n\t\t\t{\r\n\t\t\t\tvar subelem = elem.querySelector(i);\r\n\t\t\t\tif(subelem)\r\n\t\t\t\t\tsubelem.innerText = values[i];\r\n\t\t\t}\r\n\t\t\tif(style)\r\n\t\t\tfor(var i in style)\r\n\t\t\t\telem.style[i] = style[i];\r\n\t\t\treturn elem;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Request script and inserts it in the DOM\r\n\t\t* @method createButton\r\n\t\t* @param {String} id\r\n\t\t* @param {String} content\r\n\t\t* @param {Function} callback when the button is pressed\r\n\t\t* @param {Object|String} style\r\n\t\t**/\r\n\t\tcreateButton: function( id_class, content, callback, style )\r\n\t\t{\r\n\t\t\tvar elem = document.createElement(\"button\");\r\n\t\t\telem.className = \"litegui litebutton button\";\r\n\t\t\tif(id_class)\r\n\t\t\t{\r\n\t\t\t\tvar t = id_class.split(\" \");\r\n\t\t\t\tfor(var i = 0; i < t.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(t[i][0] == \".\")\r\n\t\t\t\t\t\telem.classList.add( t[i].substr(1) );\r\n\t\t\t\t\telse if(t[i][0] == \"#\")\r\n\t\t\t\t\t\telem.id = t[i].substr(1);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telem.id = t[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telem.root = elem;\r\n\t\t\tif(content !== undefined)\r\n\t\t\t\telem.innerHTML = content;\r\n\t\t\tif(callback)\r\n\t\t\t\telem.addEventListener(\"click\", callback );\r\n\t\t\tif(style)\r\n\t\t\t{\r\n\t\t\t\tif(style.constructor === String)\r\n\t\t\t\t\telem.setAttribute(\"style\",style);\r\n\t\t\t\telse\r\n\t\t\t\t\tfor(var i in style)\r\n\t\t\t\t\t\telem.style[i] = style[i];\r\n\t\t\t}\r\n\t\t\treturn elem;\r\n\t\t},\r\n\r\n\t\tgetParents: function(element)\r\n\t\t{\r\n\t\t\tvar elements = [];\r\n\t\t\twhile ((element = element.parentElement) !== null) {\r\n\t\t\t\tif (element.nodeType !== Node.ELEMENT_NODE)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\telements.push(elem);\r\n\t\t\t}\r\n\t\t\treturn elements;\r\n\t\t},\r\n\r\n\t\t//used to create a window that retains all the CSS info or the scripts.\r\n\t\tnewWindow: function(title, width, height, options)\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\t\t\tvar new_window = window.open(\"\",\"\",\"width=\"+width+\", height=\"+height+\", location=no, status=no, menubar=no, titlebar=no, fullscreen=yes\");\r\n\t\t\tnew_window.document.write( \"<html><head><title>\"+title+\"</title>\" );\r\n\r\n\t\t\t//transfer style\r\n\t\t\tvar styles = document.querySelectorAll(\"link[rel='stylesheet'],style\");\r\n\t\t\tfor(var i = 0; i < styles.length; i++)\r\n\t\t\t\tnew_window.document.write( styles[i].outerHTML );\r\n\r\n\t\t\t//transfer scripts (optional because it can produce some errors)\r\n\t\t\tif(options.scripts)\r\n\t\t\t{\r\n\t\t\t\tvar scripts = document.querySelectorAll(\"script\");\r\n\t\t\t\tfor(var i = 0; i < scripts.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(scripts[i].src) //avoid inline scripts, otherwise a cloned website would be created\r\n\t\t\t\t\t\tnew_window.document.write( scripts[i].outerHTML );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar content = options.content || \"\";\r\n\t\t\tnew_window.document.write( \"</head><body>\"+content+\"</body></html>\" );\r\n\t\t\tnew_window.document.close();\r\n\t\t\treturn new_window;\r\n\t\t},\r\n\r\n\t\t//* DIALOGS *******************\r\n\t\tshowModalBackground: function(v)\r\n\t\t{\r\n\t\t\tif(LiteGUI.modalbg_div)\r\n\t\t\t\tLiteGUI.modalbg_div.style.display = v ? \"block\" : \"none\";\r\n\t\t},\r\n\r\n\t\tshowMessage: function(content, options)\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\t\t\t\r\n\t\t\toptions.title = options.title || \"Attention\";\r\n\t\t\toptions.content = content;\r\n\t\t\toptions.close = 'fade';\r\n\t\t\tvar dialog = new LiteGUI.Dialog( options );\r\n\t\t\tif(!options.noclose)\r\n\t\t\t\tdialog.addButton(\"Close\",{ close: true });\r\n\t\t\tdialog.makeModal('fade');\r\n\t\t\treturn dialog;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Shows a dialog with a message\r\n\t\t* @method popup\r\n\t\t* @param {String} content\r\n\t\t* @param {Object} options ( min_height, content, noclose )\r\n\t\t**/\r\n\t\tpopup: function( content, options )\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\r\n\t\t\toptions.min_height = 140;\r\n\t\t\tif (typeof(content) == \"string\")\r\n\t\t\t\tcontent = \"<p>\" + content + \"</p>\";\r\n\r\n\t\t\toptions.content = content;\r\n\t\t\toptions.close = 'fade';\r\n\r\n\t\t\tvar dialog = new LiteGUI.Dialog(options);\r\n\t\t\tif(!options.noclose)\r\n\t\t\t\tdialog.addButton(\"Close\",{ close: true });\r\n\t\t\tdialog.show();\r\n\t\t\treturn dialog;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t* Shows an alert dialog with a message\r\n\t\t* @method alert\r\n\t\t* @param {String} content\r\n\t\t* @param {Object} options ( title, width, height, content, noclose )\r\n\t\t**/\r\n\t\talert: function( content, options )\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\r\n\t\t\t\r\n\t\t\toptions.className = \"alert\";\r\n\t\t\toptions.title = options.title || \"Alert\";\r\n\t\t\toptions.width = options.width || 280;\r\n\t\t\toptions.height = options.height || 140;\r\n\t\t\tif (typeof(content) == \"string\")\r\n\t\t\t\tcontent = \"<p>\" + content + \"</p>\";\r\n\t\t\tLiteGUI.remove(\".litepanel.alert\"); //kill other panels\r\n\t\t\treturn LiteGUI.showMessage(content,options);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Shows a confirm dialog with a message\r\n\t\t* @method confirm\r\n\t\t* @param {String} content\r\n\t\t* @param {Function} callback\r\n\t\t* @param {Object} options ( title, width, height, content, noclose )\r\n\t\t**/\r\n\t\tconfirm: function( content, callback, options )\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\t\t\toptions.className = \"alert\";\r\n\t\t\toptions.title = options.title || \"Confirm\";\r\n\t\t\toptions.width = options.width || 280;\r\n\t\t\t//options.height = 100;\r\n\t\t\tif (typeof(content) == \"string\")\r\n\t\t\t\tcontent = \"<p>\" + content + \"</p>\";\r\n\r\n\t\t\tcontent +=\"<button class='litebutton' data-value='yes' style='width:45%; margin-left: 10px'>Yes</button><button class='litebutton' data-value='no' style='width:45%'>No</button>\";\r\n\t\t\toptions.noclose = true;\r\n\r\n\t\t\tvar dialog = this.showMessage(content,options);\r\n\t\t\tdialog.content.style.paddingBottom = \"10px\";\r\n\t\t\tvar buttons = dialog.content.querySelectorAll(\"button\");\r\n\t\t\tfor(var i = 0; i < buttons.length; i++)\r\n\t\t\t\tbuttons[i].addEventListener(\"click\", inner);\r\n\t\t\tbuttons[0].focus();\r\n\r\n\t\t\tfunction inner(v) {\r\n\t\t\t\tvar v = this.dataset[\"value\"] == \"yes\";\r\n\t\t\t\tdialog.close(); //close before callback\r\n\t\t\t\tif(callback) \r\n\t\t\t\t\tcallback(v);\r\n\t\t\t}\r\n\r\n\t\t\treturn dialog;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Shows a prompt dialog with a message\r\n\t\t* @method prompt\r\n\t\t* @param {String} content\r\n\t\t* @param {Function} callback\r\n\t\t* @param {Object} options ( title, width, height, content, noclose )\r\n\t\t**/\r\n\t\tprompt: function( content, callback, options )\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\t\t\toptions.className = \"alert\";\r\n\t\t\toptions.title = options.title || \"Prompt\";\r\n\t\t\toptions.width = options.width || 280;\r\n\r\n\t\t\t//options.height = 140 + (options.textarea ? 40 : 0);\r\n\t\t\tif (typeof(content) == \"string\")\r\n\t\t\t\tcontent = \"<p>\" + content + \"</p>\";\r\n\r\n\t\t\tvar value = options.value || \"\";\r\n\t\t\tvar textinput = \"<input type='text' value='\"+value+\"'/>\";\r\n\t\t\tif (options.textarea)\r\n\t\t\t\ttextinput = \"<textarea class='textfield' style='width:95%'>\"+value+\"</textarea>\";\r\n\r\n\t\t\tcontent +=\"<p>\"+textinput+\"</p><button class='litebutton' data-value='accept' style='width:45%; margin-left: 10px; margin-bottom: 10px'>Accept</button><button class='litebutton' data-value='cancel' style='width:45%'>Cancel</button>\";\r\n\t\t\toptions.noclose = true;\r\n\t\t\tvar dialog = this.showMessage( content, options );\r\n\r\n\t\t\tvar buttons = dialog.content.querySelectorAll(\"button\");\r\n\t\t\tfor(var i = 0; i < buttons.length; i++)\r\n\t\t\t\tbuttons[i].addEventListener(\"click\", inner);\r\n\r\n\t\t\tvar input = dialog.content.querySelector(\"input,textarea\");\r\n\t\t\tinput.addEventListener(\"keydown\", inner_key, true);\r\n\r\n\t\t\tfunction inner() {\r\n\t\t\t\tvar value = input.value;\r\n\t\t\t\tif(this.dataset && this.dataset[\"value\"] == \"cancel\")\r\n\t\t\t\t\tvalue = null;\r\n\t\t\t\tdialog.close(); //close before callback\r\n\t\t\t\tif(callback)\r\n\t\t\t\t\tcallback( value );\r\n\t\t\t};\r\n\r\n\t\t\tfunction inner_key(e)\r\n\t\t\t{\r\n\t\t\t\tif (!e)\r\n\t\t\t\t\te = window.event;\r\n\t\t\t\tvar keyCode = e.keyCode || e.which;\r\n\t\t\t\tif (keyCode == '13'){\r\n\t\t\t\t\tinner();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\r\n\t\t\t\tif (keyCode == '29')\r\n\t\t\t\t\tdialog.close();\r\n\t\t\t};\r\n\r\n\t\t\tinput.focus();\r\n\t\t\treturn dialog;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Shows a choice dialog with a message\r\n\t\t* @method choice\r\n\t\t* @param {String} content\r\n\t\t* @param {Function} callback\r\n\t\t* @param {Object} options ( title, width, height, content, noclose )\r\n\t\t**/\r\n\t\tchoice: function( content, choices, callback, options )\r\n\t\t{\r\n\t\t\toptions = options || {};\r\n\t\t\toptions.className = \"alert\";\r\n\t\t\toptions.title = options.title || \"Select one option\";\r\n\t\t\toptions.width = options.width || 280;\r\n\t\t\t//options.height = 100;\r\n\t\t\tif (typeof(content) == \"string\")\r\n\t\t\t\tcontent = \"<p>\" + content + \"</p>\";\r\n\r\n\t\t\tfor(var i in choices)\r\n\t\t\t{\r\n\t\t\t\tcontent +=\"<button class='litebutton' data-value='\"+i+\"' style='width:45%; margin-left: 10px'>\"+(choices[i].content || choices[i])+\"</button>\";\r\n\t\t\t}\r\n\t\t\toptions.noclose = true;\r\n\r\n\t\t\tvar dialog = this.showMessage(content,options);\r\n\t\t\tdialog.content.style.paddingBottom = \"10px\";\r\n\t\t\tvar buttons = dialog.content.querySelectorAll(\"button\");\r\n\t\t\tfor(var i = 0; i < buttons.length; i++)\r\n\t\t\t\tbuttons[i].addEventListener(\"click\", inner);\r\n\r\n\t\t\tfunction inner(v) {\r\n\t\t\t\tvar v = choices[ this.dataset[\"value\"] ];\r\n\t\t\t\tdialog.close(); //close before callback\r\n\t\t\t\tif(callback) \r\n\t\t\t\t\tcallback(v);\r\n\t\t\t}\r\n\r\n\t\t\treturn dialog;\r\n\t\t},\r\n\r\n\t\tdownloadURL: function( url, filename )\r\n\t\t{\r\n\t\t\tvar link = document.createElement('a');\r\n\t\t\tlink.href = url;\r\n\t\t\tlink.download = filename;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t},\r\n\r\n\t\tdownloadFile: function( filename, data, dataType )\r\n\t\t{\r\n\t\t\tif(!data)\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(\"No file provided to download\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(!dataType)\r\n\t\t\t{\r\n\t\t\t\tif(data.constructor === String )\r\n\t\t\t\t\tdataType = 'text/plain';\r\n\t\t\t\telse\r\n\t\t\t\t\tdataType = 'application/octet-stream';\r\n\t\t\t}\r\n\r\n\t\t\tvar file = null;\r\n\t\t\tif(data.constructor !== File && data.constructor !== Blob)\r\n\t\t\t\tfile = new Blob( [ data ], {type : dataType});\r\n\t\t\telse\r\n\t\t\t\tfile = data;\r\n\r\n\t\t\tvar url = URL.createObjectURL( file );\r\n\t\t\tvar element = document.createElement(\"a\");\r\n\t\t\telement.setAttribute('href', url);\r\n\t\t\telement.setAttribute('download', filename );\r\n\t\t\telement.style.display = 'none';\r\n\t\t\tdocument.body.appendChild(element);\r\n\t\t\telement.click();\r\n\t\t\tdocument.body.removeChild(element);\r\n\t\t\tsetTimeout( function(){ URL.revokeObjectURL( url ); }, 1000*60 ); //wait one minute to revoke url\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Returns the URL vars ( ?foo=faa&foo2=etc )\r\n\t\t* @method getUrlVars\r\n\t\t**/\r\n\t\tgetUrlVars: function(){\r\n\t\t\tvar vars = [], hash;\r\n\t\t\tvar hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\r\n\t\t\tfor(var i = 0; i < hashes.length; i++)\r\n\t\t\t{\r\n\t\t\t  hash = hashes[i].split('=');\r\n\t\t\t  vars.push(hash[0]);\r\n\t\t\t  vars[hash[0]] = hash[1];\r\n\t\t\t}\r\n\t\t\treturn vars;\r\n\t\t},\r\n\r\n\t\tgetUrlVar: function(name) {\r\n\t\t\treturn LiteGUI.getUrlVars()[name];\r\n\t\t},\r\n\r\n\t\tfocus: function( element )\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t},\r\n\r\n\t\tblur: function( element )\r\n\t\t{\r\n\t\t\telement.blur();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Makes one element draggable\r\n\t\t* @method draggable\r\n\t\t* @param {HTMLEntity} container the element that will be dragged\r\n\t\t* @param {HTMLEntity} dragger the area to start the dragging\r\n\t\t**/\r\n\t\tdraggable: function( container, dragger, on_start, on_finish, on_is_draggable )\r\n\t\t{\r\n\t\t\tdragger = dragger || container;\r\n\t\t\tdragger.addEventListener(\"mousedown\", inner_mouse);\r\n\t\t\tdragger.style.cursor = \"move\";\r\n\t\t\tvar prev_x = 0;\r\n\t\t\tvar prev_y = 0;\r\n\r\n\t\t\tvar rect = container.getClientRects()[0];\r\n\t\t\tvar x = rect ? rect.left : 0;\r\n\t\t\tvar y = rect ? rect.top : 0;\r\n\r\n\t\t\tcontainer.style.position = \"absolute\";\r\n\t\t\tcontainer.style.left = x + \"px\";\r\n\t\t\tcontainer.style.top = y + \"px\";\r\n\r\n\t\t\tfunction inner_mouse(e)\r\n\t\t\t{\r\n\t\t\t\tif(e.type == \"mousedown\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!rect)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trect = container.getClientRects()[0];\r\n\t\t\t\t\t\tx = rect ? rect.left : 0;\r\n\t\t\t\t\t\ty = rect ? rect.top : 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(on_is_draggable && on_is_draggable(container,e) == false )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprev_x = e.clientX;\r\n\t\t\t\t\tprev_y = e.clientY;\r\n\t\t\t\t\tdocument.addEventListener(\"mousemove\",inner_mouse);\r\n\t\t\t\t\tdocument.addEventListener(\"mouseup\",inner_mouse);\r\n\t\t\t\t\tif(on_start)\r\n\t\t\t\t\t\ton_start( container, e );\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(e.type == \"mouseup\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdocument.removeEventListener(\"mousemove\",inner_mouse);\r\n\t\t\t\t\tdocument.removeEventListener(\"mouseup\",inner_mouse);\r\n\r\n\t\t\t\t\tif( on_finish )\r\n\t\t\t\t\t\ton_finish( container, e );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(e.type == \"mousemove\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar deltax = e.clientX - prev_x;\r\n\t\t\t\t\tvar deltay = e.clientY - prev_y;\r\n\t\t\t\t\tprev_x = e.clientX;\r\n\t\t\t\t\tprev_y = e.clientY;\r\n\t\t\t\t\tx += deltax;\r\n\t\t\t\t\ty += deltay;\r\n\t\t\t\t\tcontainer.style.left = x + \"px\";\r\n\t\t\t\t\tcontainer.style.top = y + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Clones object content\r\n\t\t* @method cloneObject\r\n\t\t* @param {Object} object\r\n\t\t* @param {Object} target\r\n\t\t**/\r\n\t\tcloneObject: function(object, target)\r\n\t\t{\r\n\t\t\tvar o = target || {};\r\n\t\t\tfor(var i in object)\r\n\t\t\t{\r\n\t\t\t\tif(i[0] == \"_\" || i.substr(0,6) == \"jQuery\") //skip vars with _ (they are private)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar v = object[i];\r\n\t\t\t\tif(v == null)\r\n\t\t\t\t\to[i] = null;\t\t\t\r\n\t\t\t\telse if ( isFunction(v) )\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\telse if (typeof(v) == \"number\" || typeof(v) == \"string\")\r\n\t\t\t\t\to[i] = v;\r\n\t\t\t\telse if( v.constructor == Float32Array ) //typed arrays are ugly when serialized\r\n\t\t\t\t\to[i] = Array.apply( [], v ); //clone\r\n\t\t\t\telse if ( isArray(v) )\r\n\t\t\t\t{\r\n\t\t\t\t\tif( o[i] && o[i].constructor == Float32Array ) //reuse old container\r\n\t\t\t\t\t\to[i].set(v);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\to[i] = JSON.parse( JSON.stringify(v) ); //v.slice(0); //not safe using slice because it doesnt clone content, only container\r\n\t\t\t\t}\r\n\t\t\t\telse //slow but safe\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//prevent circular recursions\r\n\t\t\t\t\t\to[i] = JSON.parse( JSON.stringify(v) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn o;\r\n\t\t},\r\n\r\n\t\tsafeName: function( str )\r\n\t\t{\r\n\t\t\treturn String(str).replace(/[\\s\\.]/g, '');\r\n\t\t},\r\n\r\n\t\t//those useful HTML unicode codes that I never remeber but I always need\r\n\t\tspecial_codes: {\r\n\t\t\tclose: \"&#10005;\",\r\n\t\t\tnavicon: \"&#9776;\",\r\n\t\t\trefresh: \"&#8634;\",\r\n\t\t\tgear: \"&#9881;\",\r\n\t\t\topen_folder: \"&#128194;\",\r\n\t\t\tdownload: \"&#11123;\",\r\n\t\t\ttick: \"&#10003;\",\r\n\t\t\ttrash: \"&#128465;\"\r\n\t\t},\r\n\t\t\r\n\t\t//given a html entity string it returns the equivalent unicode character\r\n\t\thtmlEncode: function( html_code )\r\n\t\t{\r\n\t\t\tvar e = document.createElement(\"div\");\r\n\t\t\te.innerHTML = html_code;\r\n\t\t\treturn e.innerText;\r\n\t\t},\r\n\r\n\t\t//given a unicode character it returns the equivalent html encoded string\r\n\t\thtmlDecode: function( unicode_character )\r\n\t\t{\r\n\t\t\tvar e = document.createElement(\"div\");\r\n\t\t\te.innerText = unicode_character;\r\n\t\t\treturn e.innerHTML;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Convert sizes in any format to a valid CSS format (number to string, negative number to calc( 100% - number px )\r\n\t\t* @method sizeToCSS\r\n\t\t* @param {String||Number} size\r\n\t\t* @return {String} valid css size string\r\n\t\t**/\r\n\t\tsizeToCSS: function( v )\r\n\t\t{\r\n\t\t\tif( v ===  undefined || v === null )\r\n\t\t\t\treturn null;\r\n\t\t\tif(v.constructor === String )\r\n\t\t\t\treturn v;\r\n\t\t\tif(v >= 0 )\r\n\t\t\t\treturn (v|0) + \"px\";\r\n\t\t\treturn \"calc( 100% - \" + Math.abs(v|0) + \"px )\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Returns the window where this element is attached (used in multi window applications)\r\n\t\t* @method getElementWindow\r\n\t\t* @param {HTMLElement} v\r\n\t\t* @return {Window} the window element\r\n\t\t**/\r\n\t\tgetElementWindow: function(v)\r\n\t\t{\r\n\t        var doc = v.ownerDocument;\r\n\t        return doc.defaultView || doc.parentWindow;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Helper, makes drag and drop easier by enabling drag and drop in a given element\r\n\t\t* @method createDropArea\r\n\t\t* @param {HTMLElement} element the element where users could drop items\r\n\t\t* @param {Function} callback_drop function to call when the user drops the item\r\n\t\t* @param {Function} callback_enter [optional] function to call when the user drags something inside\r\n\t\t**/\r\n\t\tcreateDropArea: function( element, callback_drop, callback_enter, callback_exit )\r\n\t\t{\r\n\t\t\telement.addEventListener(\"dragenter\", onDragEvent);\r\n\r\n\t\t\tfunction onDragEvent(evt)\r\n\t\t\t{\r\n\t\t\t\telement.addEventListener(\"dragexit\", onDragEvent);\r\n\t\t\t\telement.addEventListener(\"dragover\", onDragEvent);\r\n\t\t\t\telement.addEventListener(\"drop\", onDrop);\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t\tif(evt.type == \"dragenter\" && callback_enter)\r\n\t\t\t\t\tcallback_enter(evt, this);\r\n\t\t\t\tif(evt.type == \"dragexit\" && callback_exit)\r\n\t\t\t\t\tcallback_exit(evt, this);\r\n\t\t\t}\r\n\r\n\t\t\tfunction onDrop(evt)\r\n\t\t\t{\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t\tevt.preventDefault();\r\n\r\n\t\t\t\telement.removeEventListener(\"dragexit\", onDragEvent);\r\n\t\t\t\telement.removeEventListener(\"dragover\", onDragEvent);\r\n\t\t\t\telement.removeEventListener(\"drop\", onDrop);\r\n\r\n\t\t\t\tvar r = undefined;\r\n\t\t\t\tif(callback_drop)\r\n\t\t\t\t\tr = callback_drop(evt);\r\n\t\t\t\tif(r)\r\n\t\t\t\t{\r\n\t\t\t\t\tevt.stopPropagation();\r\n\t\t\t\t\tevt.stopImmediatePropagation();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t//low quality templating system\r\n\tObject.defineProperty( String.prototype, \"template\", {\r\n\t\tvalue: function( data, eval_code )\r\n\t\t{\r\n\t\t\tvar tpl = this;\r\n\t\t\tvar re = /{{([^}}]+)?}}/g, match;\r\n\t\t    while(match = re.exec(tpl)) {\r\n\t\t\t\tvar str = eval_code ? (new Function(\"with(this) { try { return \" + match[1] +\"} catch(e) { return 'error';} }\")).call(data) : data[match[1]];\r\n\t\t\t    tpl = tpl.replace(match[0], str);\r\n\t\t    }\r\n\t\t    return tpl;\t\t\r\n\t\t},\r\n\t\tenumerable: false\r\n\t});\r\n\r\n\r\n\tfunction purgeElement(d, skip) {\r\n\t    var a = d.attributes, i, l, n;\r\n\r\n\t    if (a) {\r\n\t        for (i = a.length - 1; i >= 0; i -= 1) {\r\n\t            n = a[i].name;\r\n\t            if (typeof d[n] === 'function') {\r\n\t                d[n] = null;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    a = d.childNodes;\r\n\t    if (a) {\r\n\t        l = a.length;\r\n\t        for (i = 0; i < l; i += 1) {\r\n\t            purgeElement(d.childNodes[i]);\r\n\t        }\r\n\t    }\r\n\t}\r\n\r\n\t//useful functions\r\n\r\n\t//from stackoverflow http://stackoverflow.com/questions/1354064/how-to-convert-characters-to-html-entities-using-plain-javascript\r\n\r\n\tif(typeof escapeHtmlEntities == 'undefined') {\r\n\t        escapeHtmlEntities = function (text) {\r\n\t            return text.replace(/[\\u00A0-\\u2666<>\\&]/g, function(c) {\r\n\t                return '&' + \r\n\t                (escapeHtmlEntities.entityTable[c.charCodeAt(0)] || '#'+c.charCodeAt(0)) + ';';\r\n\t            });\r\n\t        };\r\n\r\n\t        // all HTML4 entities as defined here: http://www.w3.org/TR/html4/sgml/entities.html\r\n\t        // added: amp, lt, gt, quot and apos\r\n\t        escapeHtmlEntities.entityTable = {\r\n\t            34 : 'quot', \r\n\t            38 : 'amp', \r\n\t            39 : 'apos', \r\n\t            60 : 'lt', \r\n\t            62 : 'gt', \r\n\t            160 : 'nbsp', \r\n\t            161 : 'iexcl', \r\n\t            162 : 'cent', \r\n\t            163 : 'pound', \r\n\t            164 : 'curren', \r\n\t            165 : 'yen', \r\n\t            166 : 'brvbar', \r\n\t            167 : 'sect', \r\n\t            168 : 'uml', \r\n\t            169 : 'copy', \r\n\t            170 : 'ordf', \r\n\t            171 : 'laquo', \r\n\t            172 : 'not', \r\n\t            173 : 'shy', \r\n\t            174 : 'reg', \r\n\t            175 : 'macr', \r\n\t            176 : 'deg', \r\n\t            177 : 'plusmn', \r\n\t            178 : 'sup2', \r\n\t            179 : 'sup3', \r\n\t            180 : 'acute', \r\n\t            181 : 'micro', \r\n\t            182 : 'para', \r\n\t            183 : 'middot', \r\n\t            184 : 'cedil', \r\n\t            185 : 'sup1', \r\n\t            186 : 'ordm', \r\n\t            187 : 'raquo', \r\n\t            188 : 'frac14', \r\n\t            189 : 'frac12', \r\n\t            190 : 'frac34', \r\n\t            191 : 'iquest', \r\n\t            192 : 'Agrave', \r\n\t            193 : 'Aacute', \r\n\t            194 : 'Acirc', \r\n\t            195 : 'Atilde', \r\n\t            196 : 'Auml', \r\n\t            197 : 'Aring', \r\n\t            198 : 'AElig', \r\n\t            199 : 'Ccedil', \r\n\t            200 : 'Egrave', \r\n\t            201 : 'Eacute', \r\n\t            202 : 'Ecirc', \r\n\t            203 : 'Euml', \r\n\t            204 : 'Igrave', \r\n\t            205 : 'Iacute', \r\n\t            206 : 'Icirc', \r\n\t            207 : 'Iuml', \r\n\t            208 : 'ETH', \r\n\t            209 : 'Ntilde', \r\n\t            210 : 'Ograve', \r\n\t            211 : 'Oacute', \r\n\t            212 : 'Ocirc', \r\n\t            213 : 'Otilde', \r\n\t            214 : 'Ouml', \r\n\t            215 : 'times', \r\n\t            216 : 'Oslash', \r\n\t            217 : 'Ugrave', \r\n\t            218 : 'Uacute', \r\n\t            219 : 'Ucirc', \r\n\t            220 : 'Uuml', \r\n\t            221 : 'Yacute', \r\n\t            222 : 'THORN', \r\n\t            223 : 'szlig', \r\n\t            224 : 'agrave', \r\n\t            225 : 'aacute', \r\n\t            226 : 'acirc', \r\n\t            227 : 'atilde', \r\n\t            228 : 'auml', \r\n\t            229 : 'aring', \r\n\t            230 : 'aelig', \r\n\t            231 : 'ccedil', \r\n\t            232 : 'egrave', \r\n\t            233 : 'eacute', \r\n\t            234 : 'ecirc', \r\n\t            235 : 'euml', \r\n\t            236 : 'igrave', \r\n\t            237 : 'iacute', \r\n\t            238 : 'icirc', \r\n\t            239 : 'iuml', \r\n\t            240 : 'eth', \r\n\t            241 : 'ntilde', \r\n\t            242 : 'ograve', \r\n\t            243 : 'oacute', \r\n\t            244 : 'ocirc', \r\n\t            245 : 'otilde', \r\n\t            246 : 'ouml', \r\n\t            247 : 'divide', \r\n\t            248 : 'oslash', \r\n\t            249 : 'ugrave', \r\n\t            250 : 'uacute', \r\n\t            251 : 'ucirc', \r\n\t            252 : 'uuml', \r\n\t            253 : 'yacute', \r\n\t            254 : 'thorn', \r\n\t            255 : 'yuml', \r\n\t            402 : 'fnof', \r\n\t            913 : 'Alpha', \r\n\t            914 : 'Beta', \r\n\t            915 : 'Gamma', \r\n\t            916 : 'Delta', \r\n\t            917 : 'Epsilon', \r\n\t            918 : 'Zeta', \r\n\t            919 : 'Eta', \r\n\t            920 : 'Theta', \r\n\t            921 : 'Iota', \r\n\t            922 : 'Kappa', \r\n\t            923 : 'Lambda', \r\n\t            924 : 'Mu', \r\n\t            925 : 'Nu', \r\n\t            926 : 'Xi', \r\n\t            927 : 'Omicron', \r\n\t            928 : 'Pi', \r\n\t            929 : 'Rho', \r\n\t            931 : 'Sigma', \r\n\t            932 : 'Tau', \r\n\t            933 : 'Upsilon', \r\n\t            934 : 'Phi', \r\n\t            935 : 'Chi', \r\n\t            936 : 'Psi', \r\n\t            937 : 'Omega', \r\n\t            945 : 'alpha', \r\n\t            946 : 'beta', \r\n\t            947 : 'gamma', \r\n\t            948 : 'delta', \r\n\t            949 : 'epsilon', \r\n\t            950 : 'zeta', \r\n\t            951 : 'eta', \r\n\t            952 : 'theta', \r\n\t            953 : 'iota', \r\n\t            954 : 'kappa', \r\n\t            955 : 'lambda', \r\n\t            956 : 'mu', \r\n\t            957 : 'nu', \r\n\t            958 : 'xi', \r\n\t            959 : 'omicron', \r\n\t            960 : 'pi', \r\n\t            961 : 'rho', \r\n\t            962 : 'sigmaf', \r\n\t            963 : 'sigma', \r\n\t            964 : 'tau', \r\n\t            965 : 'upsilon', \r\n\t            966 : 'phi', \r\n\t            967 : 'chi', \r\n\t            968 : 'psi', \r\n\t            969 : 'omega', \r\n\t            977 : 'thetasym', \r\n\t            978 : 'upsih', \r\n\t            982 : 'piv', \r\n\t            8226 : 'bull', \r\n\t            8230 : 'hellip', \r\n\t            8242 : 'prime', \r\n\t            8243 : 'Prime', \r\n\t            8254 : 'oline', \r\n\t            8260 : 'frasl', \r\n\t            8472 : 'weierp', \r\n\t            8465 : 'image', \r\n\t            8476 : 'real', \r\n\t            8482 : 'trade', \r\n\t            8501 : 'alefsym', \r\n\t            8592 : 'larr', \r\n\t            8593 : 'uarr', \r\n\t            8594 : 'rarr', \r\n\t            8595 : 'darr', \r\n\t            8596 : 'harr', \r\n\t            8629 : 'crarr', \r\n\t            8656 : 'lArr', \r\n\t            8657 : 'uArr', \r\n\t            8658 : 'rArr', \r\n\t            8659 : 'dArr', \r\n\t            8660 : 'hArr', \r\n\t            8704 : 'forall', \r\n\t            8706 : 'part', \r\n\t            8707 : 'exist', \r\n\t            8709 : 'empty', \r\n\t            8711 : 'nabla', \r\n\t            8712 : 'isin', \r\n\t            8713 : 'notin', \r\n\t            8715 : 'ni', \r\n\t            8719 : 'prod', \r\n\t            8721 : 'sum', \r\n\t            8722 : 'minus', \r\n\t            8727 : 'lowast', \r\n\t            8730 : 'radic', \r\n\t            8733 : 'prop', \r\n\t            8734 : 'infin', \r\n\t            8736 : 'ang', \r\n\t            8743 : 'and', \r\n\t            8744 : 'or', \r\n\t            8745 : 'cap', \r\n\t            8746 : 'cup', \r\n\t            8747 : 'int', \r\n\t            8756 : 'there4', \r\n\t            8764 : 'sim', \r\n\t            8773 : 'cong', \r\n\t            8776 : 'asymp', \r\n\t            8800 : 'ne', \r\n\t            8801 : 'equiv', \r\n\t            8804 : 'le', \r\n\t            8805 : 'ge', \r\n\t            8834 : 'sub', \r\n\t            8835 : 'sup', \r\n\t            8836 : 'nsub', \r\n\t            8838 : 'sube', \r\n\t            8839 : 'supe', \r\n\t            8853 : 'oplus', \r\n\t            8855 : 'otimes', \r\n\t            8869 : 'perp', \r\n\t            8901 : 'sdot', \r\n\t            8968 : 'lceil', \r\n\t            8969 : 'rceil', \r\n\t            8970 : 'lfloor', \r\n\t            8971 : 'rfloor', \r\n\t            9001 : 'lang', \r\n\t            9002 : 'rang', \r\n\t            9674 : 'loz', \r\n\t            9824 : 'spades', \r\n\t            9827 : 'clubs', \r\n\t            9829 : 'hearts', \r\n\t            9830 : 'diams', \r\n\t            338 : 'OElig', \r\n\t            339 : 'oelig', \r\n\t            352 : 'Scaron', \r\n\t            353 : 'scaron', \r\n\t            376 : 'Yuml', \r\n\t            710 : 'circ', \r\n\t            732 : 'tilde', \r\n\t            8194 : 'ensp', \r\n\t            8195 : 'emsp', \r\n\t            8201 : 'thinsp', \r\n\t            8204 : 'zwnj', \r\n\t            8205 : 'zwj', \r\n\t            8206 : 'lrm', \r\n\t            8207 : 'rlm', \r\n\t            8211 : 'ndash', \r\n\t            8212 : 'mdash', \r\n\t            8216 : 'lsquo', \r\n\t            8217 : 'rsquo', \r\n\t            8218 : 'sbquo', \r\n\t            8220 : 'ldquo', \r\n\t            8221 : 'rdquo', \r\n\t            8222 : 'bdquo', \r\n\t            8224 : 'dagger', \r\n\t            8225 : 'Dagger', \r\n\t            8240 : 'permil', \r\n\t            8249 : 'lsaquo', \r\n\t            8250 : 'rsaquo', \r\n\t            8364 : 'euro'\r\n\t        };\r\n\t    }\r\n\r\n\tfunction beautifyCode( code, reserved, skip_css )\r\n\t{\r\n\t\treserved = reserved || [\"abstract\", \"else\", \"instanceof\", \"super\", \"boolean\", \"enum\", \"int\", \"switch\", \"break\", \"export\", \"interface\", \"synchronized\", \"byte\", \"extends\", \"let\", \"this\", \"case\", \"false\", \"long\", \"throw\", \"catch\", \"final\", \"native\", \"throws\", \"char\", \"finally\", \"new\", \"transient\", \"class\", \"float\", \"null\", \"true\", \"const\", \"for\", \"package\", \"try\", \"continue\", \"function\", \"private\", \"typeof\", \"debugger\", \"goto\", \"protected\", \"var\", \"default\", \"if\", \"public\", \"void\", \"delete\", \"implements\", \"return\", \"volatile\", \"do\", \"import\", \"short\", \"while\", \"double\", \"in\", \"static\", \"with\"];\r\n\r\n\t\t//reserved words\r\n\t\tcode = code.replace(/\\b(\\w+)\\b/g, function(v) {\r\n\t\t\tif(reserved.indexOf(v) != -1)\r\n\t\t\t\treturn \"<span class='rsv'>\" + v + \"</span>\";\r\n\t\t\treturn v;\r\n\t\t});\r\n\r\n\t\t//numbers\r\n\t\tcode = code.replace(/\\b([0-9]+)\\b/g, function(v) {\r\n\t\t\treturn \"<span class='num'>\" + v + \"</span>\";\r\n\t\t});\r\n\r\n\t\t//obj.method\r\n\t\tcode = code.replace(/(\\w+\\.\\w+)/g, function(v) {\r\n\t\t\tvar t = v.split(\".\");\r\n\t\t\treturn \"<span class='obj'>\" + t[0] + \"</span>.<span class='prop'>\" + t[1] + \"</span>\";\r\n\t\t});\r\n\r\n\t\t//function\r\n\t\tcode = code.replace(/(\\w+)\\(/g, function(v) {\r\n\t\t\treturn \"<span class='prop'>\" + v.substr(0, v.length - 1) + \"</span>(\";\r\n\t\t});\r\n\r\n\t\t//strings\r\n\t\tcode = code.replace(/(\\\"(\\\\.|[^\\\"])*\\\")/g, function(v) {\r\n\t\t\treturn \"<span class='str'>\" + v + \"</span>\";\r\n\t\t});\r\n\r\n\t\t//comments \r\n\t\tcode = code.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, function(v) { ///(\\/\\/[a-zA-Z0-9\\?\\!\\(\\)_ ]*)/g\r\n\t\t\treturn \"<span class='cmnt'>\" + v.replace(/<[^>]*>/g, \"\") + \"</span>\";\r\n\t\t});\r\n\r\n\r\n\t\tif(!skip_css)\r\n\t\t\tcode = \"<style>.obj { color: #79B; } .prop { color: #B97; }\t.str,.num { color: #A79; } .cmnt { color: #798; } .rsv { color: #9AB; } </style>\" + code;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tfunction beautifyJSON( code, skip_css )\r\n\t{\r\n\t\tif(typeof(code) == \"object\")\r\n\t\t\tcode = JSON.stringify(code);\r\n\r\n\t\tvar reserved = [\"false\", \"true\", \"null\"];\r\n\r\n\t\t//reserved words\r\n\t\tcode = code.replace(/(\\w+)/g, function(v) {\r\n\t\t\tif(reserved.indexOf(v) != -1)\r\n\t\t\t\treturn \"<span class='rsv'>\" + v + \"</span>\";\r\n\t\t\treturn v;\r\n\t\t});\r\n\r\n\r\n\t\t//numbers\r\n\t\tcode = code.replace(/([0-9]+)/g, function(v) {\r\n\t\t\treturn \"<span class='num'>\" + v + \"</span>\";\r\n\t\t});\r\n\r\n\t\t//obj.method\r\n\t\tcode = code.replace(/(\\w+\\.\\w+)/g, function(v) {\r\n\t\t\tvar t = v.split(\".\");\r\n\t\t\treturn \"<span class='obj'>\" + t[0] + \"</span>.<span class='prop'>\" + t[1] + \"</span>\";\r\n\t\t});\r\n\r\n\t\t//strings\r\n\t\tcode = code.replace(/(\\\"(\\\\.|[^\\\"])*\\\")/g, function(v) {\r\n\t\t\treturn \"<span class='str'>\" + v + \"</span>\";\r\n\t\t});\r\n\r\n\t\t//comments\r\n\t\tcode = code.replace(/(\\/\\/[a-zA-Z0-9\\?\\!\\(\\)_ ]*)/g, function(v) {\r\n\t\t\treturn \"<span class='cmnt'>\" + v + \"</span>\";\r\n\t\t});\r\n\r\n\t\tif(!skip_css)\r\n\t\t\tcode = \"<style>.obj { color: #79B; } .prop { color: #B97; }\t.str { color: #A79; } .num { color: #B97; } .cmnt { color: #798; } .rsv { color: #9AB; } </style>\" + code;\r\n\r\n\t\treturn code;\r\n\t}\r\n\r\n\tfunction dataURItoBlob( dataURI ) {\r\n\t\tvar pos = dataURI.indexOf(\",\");\r\n\t\t//convert to binary\r\n\t    var byteString = atob( dataURI.substr(pos+1) ); \r\n\t\t//copy from string to array\r\n\t    var ab = new ArrayBuffer( byteString.length ); \r\n\t    var ia = new Uint8Array(ab);\r\n\t\tvar l = byteString.length;\r\n\t    for (var i = 0; i < l; i++) {\r\n\t        ia[i] = byteString.charCodeAt(i);\r\n\t    }\r\n\r\n\t\tvar mime = dataURI.substr(5,pos-5);\r\n\t\tmime = mime.substr(0, mime.length - 7); //strip \";base64\"\r\n\t    return new Blob([ab], { type: mime });\r\n\t}\r\n\r\n\treturn skylark.attach(\"intg.litegui\",LiteGUI);\r\n});\n//enclose in a scope\r\n\r\ndefine('skylark-litegui/Area',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\t\r\n\t/****************** AREA **************/\r\n\t/** An Area is am streched container.\r\n\t* Areas can be split several times horizontally or vertically to fit different colums or rows\r\n\t*\r\n\t* @class Area\r\n\t* @constructor\r\n\t* @param {Object} options\r\n\t*/\r\n\tfunction Area( options, legacy )\r\n\t{\r\n\t\t//for legacy code\r\n\t\tif( (options && options.constructor === String) || legacy )\r\n\t\t{\r\n\t\t\tvar id = options;\r\n\t\t\toptions = legacy || {};\r\n\t\t\toptions.id = id;\r\n\t\t\tconsole.warn(\"LiteGUI.Area legacy parameter, use options as first parameter instead of id.\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\t/* the root element containing all sections */\r\n\t\tvar root = document.createElement(\"div\");\r\n\t\troot.className = \"litearea\";\r\n\t\tif(options.id)\r\n\t\t\troot.id = options.id;\r\n\t\tif(options.className)\r\n\t\t\troot.className +=  \" \" + options.className;\r\n\r\n\t\tthis.root = root;\r\n\t\tthis.root.litearea = this; //dbl link\r\n\r\n\t\tvar width = options.width || \"100%\";\r\n\t\tvar height = options.height || \"100%\";\r\n\r\n\t\tif( width < 0 )\r\n\t\t\twidth = 'calc( 100% - '+Math.abs(width)+'px)';\r\n\t\tif( height < 0 )\r\n\t\t\theight = 'calc( 100% - '+ Math.abs(height)+'px)';\r\n\r\n\t\troot.style.width = width;\r\n\t\troot.style.height = height;\r\n\r\n\t\tthis.options = options;\r\n\r\n\t\tvar that = this;\r\n\t\tthis._computed_size = [ this.root.offsetWidth, this.root.offserHeight ];\r\n\r\n\t\tvar content = document.createElement(\"div\");\r\n\t\tif(options.content_id)\r\n\t\t\tcontent.id = options.content_id;\r\n\t\tcontent.className = \"liteareacontent\";\r\n\t\tcontent.style.width = \"100%\";\r\n\t\tcontent.style.height = \"100%\";\r\n\t\tthis.root.appendChild( content );\r\n\t\tthis.content = content;\r\n\r\n\t\tthis.split_direction = \"none\";\r\n\t\tthis.sections = [];\r\n\r\n\t\tif(options.autoresize)\r\n\t\t\tLiteGUI.bind( LiteGUI, \"resized\", function() { \r\n\t\t\t\tthat.onResize(); \r\n\t\t\t});\r\n\t}\r\n\r\n\tArea.VERTICAL = \"vertical\";\r\n\tArea.HORIZONTAL = \"horizontal\";\r\n\r\n\tArea.splitbar_size = 4;\r\n\r\n\t/* get container of the section */\r\n\tArea.prototype.getSection = function(num)\r\n\t{\r\n\t\tnum = num || 0;\r\n\t\tif(this.sections.length > num)\r\n\t\t\treturn this.sections[num];\r\n\t\treturn null;\r\n\t}\r\n\r\n\tArea.prototype.onResize = function(e)\r\n\t{\r\n\t\tvar computed_size = [ this.root.offsetWidth, this.root.offsetHeight ];\r\n\t\tif( e && this._computed_size && computed_size[0] == this._computed_size[0] && computed_size[1] == this._computed_size[1])\r\n\t\t\treturn;\r\n\r\n\t\tthis.sendResizeEvent(e);\r\n\t}\r\n\r\n\t//sends the resize event to all the sections\r\n\tArea.prototype.sendResizeEvent = function(e)\r\n\t{\r\n\t\tif(this.sections.length)\r\n\t\t\tfor(var i in this.sections)\r\n\t\t\t{\r\n\t\t\t\tvar section = this.sections[i];\r\n\t\t\t\tsection.onResize(e);\r\n\t\t\t}\r\n\t\telse //send it to the children\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < this.root.childNodes.length; j++)\r\n\t\t\t{\r\n\t\t\t\tvar element = this.root.childNodes[j];\r\n\t\t\t\tif(element.litearea)\r\n\t\t\t\t\telement.litearea.onResize();\r\n\t\t\t\telse\r\n\t\t\t\t\tLiteGUI.trigger( element, \"resize\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//inner callback\r\n\t\tif( this.onresize )\r\n\t\t\tthis.onresize();\r\n\t}\r\n\r\n\tArea.prototype.getWidth = function()\r\n\t{\r\n\t\treturn this.root.offsetWidth;\r\n\t}\r\n\r\n\tArea.prototype.getHeight = function()\r\n\t{\r\n\t\treturn this.root.offsetHeight;\r\n\t}\r\n\r\n\tArea.prototype.isVisible = function()\r\n\t{\r\n\t\treturn this.root.style.display != \"none\";\t\r\n\t}\r\n\r\n\tArea.prototype.adjustHeight = function()\r\n\t{\r\n\t\tif(!this.root.parentNode)\r\n\t\t{\r\n\t\t\tconsole.error(\"Cannot adjust height of LiteGUI.Area without parent\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//check parent height\r\n\t\tvar h = this.root.parentNode.offsetHeight;\r\n\r\n\t\t//check position\r\n\t\tvar y = this.root.getClientRects()[0].top;\r\n\r\n\t\t//adjust height\r\n\t\tthis.root.style.height = \"calc( 100% - \" + y + \"px )\";\r\n\t}\r\n\r\n\tArea.prototype.split = function( direction, sizes, editable )\r\n\t{\r\n\t\tif( !direction || direction.constructor !== String )\r\n\t\t\tthrow (\"First parameter must be a string: 'vertical' or 'horizontal'\");\r\n\r\n\t\tif( !sizes )\r\n\t\t\tsizes = [\"50%\",null];\r\n\r\n\t\tif( direction != \"vertical\" && direction != \"horizontal\" )\r\n\t\t\tthrow (\"First parameter must be a string: 'vertical' or 'horizontal'\");\r\n\r\n\t\tif(this.sections.length)\r\n\t\t\tthrow \"cannot split twice\";\r\n\r\n\t\t//create areas\r\n\t\tvar area1 = new LiteGUI.Area({ content_id: this.content.id });\r\n\t\tarea1.root.style.display = \"inline-block\";\r\n\t\tvar area2 = new LiteGUI.Area();\r\n\t\tarea2.root.style.display = \"inline-block\";\r\n\r\n\t\tvar splitinfo = \"\";\r\n\t\tvar splitbar = null;\r\n\t\tvar dynamic_section = null;\r\n\t\tif(editable)\r\n\t\t{\r\n\t\t\tsplitinfo = \" - \" + (Area.splitbar_size + 2) +\"px\"; //2 px margin �?\r\n\t\t\tsplitbar = document.createElement(\"div\");\r\n\t\t\tsplitbar.className = \"litesplitbar \" + direction;\r\n\t\t\tif(direction == \"vertical\")\r\n\t\t\t\tsplitbar.style.height = Area.splitbar_size + \"px\";\r\n\t\t\telse\r\n\t\t\t\tsplitbar.style.width = Area.splitbar_size + \"px\";\r\n\t\t\tthis.splitbar = splitbar;\r\n\t\t\tsplitbar.addEventListener(\"mousedown\", inner_mousedown);\r\n\t\t}\r\n\r\n\t\tsizes = sizes || [\"50%\",null];\r\n\r\n\t\tif(direction == \"vertical\")\r\n\t\t{\r\n\t\t\tarea1.root.style.width = \"100%\";\r\n\t\t\tarea2.root.style.width = \"100%\";\r\n\r\n\t\t\tif(sizes[0] == null)\r\n\t\t\t{\r\n\t\t\t\tvar h = sizes[1];\r\n\t\t\t\tif(typeof(h) == \"number\")\r\n\t\t\t\t\th = sizes[1] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.height = \"-moz-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"-webkit-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = h;\r\n\t\t\t\tarea2.size = h;\r\n\t\t\t\tdynamic_section = area1;\r\n\t\t\t}\r\n\t\t\telse if(sizes[1] == null)\r\n\t\t\t{\r\n\t\t\t\tvar h = sizes[0];\r\n\t\t\t\tif(typeof(h) == \"number\")\r\n\t\t\t\t\th = sizes[0] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.height = h;\r\n\t\t\t\tarea1.size = h;\r\n\t\t\t\tarea2.root.style.height = \"-moz-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"-webkit-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tdynamic_section = area2;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar h1 = sizes[0];\r\n\t\t\t\tif(typeof(h1) == \"number\")\r\n\t\t\t\t\th1 = sizes[0] + \"px\";\r\n\t\t\t\tvar h2 = sizes[1];\r\n\t\t\t\tif(typeof(h2) == \"number\")\r\n\t\t\t\t\th2 = sizes[1] + \"px\";\r\n\t\t\t\tarea1.root.style.height = h1;\r\n\t\t\t\tarea1.size = h1;\r\n\t\t\t\tarea2.root.style.height = h2;\r\n\t\t\t\tarea2.size = h2;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse //horizontal\r\n\t\t{\r\n\t\t\tarea1.root.style.height = \"100%\";\r\n\t\t\tarea2.root.style.height = \"100%\";\r\n\r\n\t\t\tif(sizes[0] == null)\r\n\t\t\t{\r\n\t\t\t\tvar w = sizes[1];\r\n\t\t\t\tif(typeof(w) == \"number\")\r\n\t\t\t\t\tw = sizes[1] + \"px\";\r\n\t\t\t\tarea1.root.style.width = \"-moz-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"-webkit-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = w;\r\n\t\t\t\tarea2.size = sizes[1];\r\n\t\t\t\tdynamic_section = area1;\r\n\t\t\t}\r\n\t\t\telse if(sizes[1] == null)\r\n\t\t\t{\r\n\t\t\t\tvar w = sizes[0];\r\n\t\t\t\tif(typeof(w) == \"number\")\r\n\t\t\t\t\tw = sizes[0] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.width = w;\r\n\t\t\t\tarea1.size = w;\r\n\t\t\t\tarea2.root.style.width = \"-moz-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"-webkit-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tdynamic_section = area2;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar w1 = sizes[0];\r\n\t\t\t\tif(typeof(w1) == \"number\")\r\n\t\t\t\t\tw1 = sizes[0] + \"px\";\r\n\t\t\t\tvar w2 = sizes[1];\r\n\t\t\t\tif(typeof(w2) == \"number\")\r\n\t\t\t\t\tw2 = sizes[1] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.width = w1;\r\n\t\t\t\tarea1.size = w1;\r\n\t\t\t\tarea2.root.style.width = w2;\r\n\t\t\t\tarea2.size = w2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tarea1.root.removeChild( area1.content );\r\n\t\tarea1.root.appendChild( this.content );\r\n\t\tarea1.content = this.content;\r\n\r\n\t\tthis.root.appendChild( area1.root );\r\n\t\tif(splitbar)\r\n\t\t\tthis.root.appendChild( splitbar );\r\n\t\tthis.root.appendChild( area2.root );\r\n\r\n\t\tthis.sections = [area1, area2];\r\n\t\tthis.dynamic_section = dynamic_section;\r\n\t\tthis.direction = direction;\r\n\r\n\t\t//SPLITTER DRAGGER INTERACTION\r\n\t\tvar that = this;\r\n\t\tvar last_pos = [0,0];\r\n\t\tfunction inner_mousedown(e)\r\n\t\t{\r\n\t\t\tvar doc = that.root.ownerDocument;\r\n\t\t\tdoc.addEventListener(\"mousemove\",inner_mousemove);\r\n\t\t\tdoc.addEventListener(\"mouseup\",inner_mouseup);\r\n\t\t\tlast_pos[0] = e.pageX;\r\n\t\t\tlast_pos[1] = e.pageY;\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\tfunction inner_mousemove(e)\r\n\t\t{\r\n\t\t\tif(direction == \"horizontal\")\r\n\t\t\t{\r\n\t\t\t\tif (last_pos[0] != e.pageX)\r\n\t\t\t\t\tthat.moveSplit(last_pos[0] - e.pageX);\r\n\t\t\t}\r\n\t\t\telse if(direction == \"vertical\")\r\n\t\t\t{\r\n\t\t\t\tif (last_pos[1] != e.pageY)\r\n\t\t\t\t\tthat.moveSplit(e.pageY - last_pos[1]);\r\n\t\t\t}\r\n\r\n\t\t\tlast_pos[0] = e.pageX;\r\n\t\t\tlast_pos[1] = e.pageY;\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tif(that.options.immediateResize || that.options.inmediateResize) //inmediate is for legacy...\r\n\t\t\t\tthat.onResize();\r\n\t\t}\r\n\r\n\t\tfunction inner_mouseup(e)\r\n\t\t{\r\n\t\t\tvar doc = that.root.ownerDocument;\r\n\t\t\tdoc.removeEventListener(\"mousemove\",inner_mousemove);\r\n\t\t\tdoc.removeEventListener(\"mouseup\",inner_mouseup);\r\n\t\t\tthat.onResize();\r\n\t\t}\r\n\t}\r\n\r\n\tArea.prototype.hide = function()\r\n\t{\r\n\t\tthis.root.style.display = \"none\";\r\n\t}\r\n\r\n\tArea.prototype.show = function()\r\n\t{\r\n\t\tthis.root.style.display = \"block\";\r\n\t}\r\n\r\n\tArea.prototype.showSection = function(num)\r\n\t{\r\n\t\tvar section = this.sections[num];\r\n\t\tvar size = 0;\r\n\r\n\t\tif( section && section.root.style.display != \"none\" )\r\n\t\t\treturn; //already visible\r\n\t\t\r\n\t\tif(this.direction == \"horizontal\")\r\n\t\t\tsize = section.root.style.width;\r\n\t\telse\r\n\t\t\tsize = section.root.style.height;\r\n\r\n\t\tif(size.indexOf(\"calc\") != -1)\r\n\t\t\tsize = \"50%\";\r\n\r\n\t\tfor(var i in this.sections)\r\n\t\t{\r\n\t\t\tvar section = this.sections[i];\r\n\r\n\t\t\tif(i == num)\r\n\t\t\t\tsection.root.style.display = \"inline-block\";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(this.direction == \"horizontal\")\r\n\t\t\t\t\tsection.root.style.width = \"calc( 100% - \" + size + \" - 5px)\";\r\n\t\t\t\telse\r\n\t\t\t\t\tsection.root.style.height = \"calc( 100% - \" + size + \" - 5px)\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.splitbar)\r\n\t\t\tthis.splitbar.style.display = \"inline-block\";\r\n\r\n\t\tthis.sendResizeEvent();\r\n\t}\r\n\r\n\tArea.prototype.hideSection = function(num)\r\n\t{\r\n\t\tfor(var i in this.sections)\r\n\t\t{\r\n\t\t\tvar section = this.sections[i];\r\n\r\n\t\t\tif(i == num)\r\n\t\t\t\tsection.root.style.display = \"none\";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(this.direction == \"horizontal\")\r\n\t\t\t\t\tsection.root.style.width = \"100%\";\r\n\t\t\t\telse\r\n\t\t\t\t\tsection.root.style.height = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.splitbar)\r\n\t\t\tthis.splitbar.style.display = \"none\";\r\n\r\n\t\tthis.sendResizeEvent();\r\n\t}\r\n\r\n\tArea.prototype.moveSplit = function(delta)\r\n\t{\r\n\t\tif(!this.sections) return;\r\n\r\n\t\tvar area1 = this.sections[0];\r\n\t\tvar area2 = this.sections[1];\r\n\t\tvar splitinfo = \" - \"+ Area.splitbar_size +\"px\";\r\n\r\n\t\tvar min_size = this.options.minSplitSize || 10;\r\n\r\n\t\tif(this.direction == \"horizontal\")\r\n\t\t{\r\n\r\n\t\t\tif (this.dynamic_section == area1)\r\n\t\t\t{\r\n\t\t\t\tvar size = (area2.root.offsetWidth + delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea1.root.style.width = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar size = (area1.root.offsetWidth - delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea2.root.style.width = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.direction == \"vertical\")\r\n\t\t{\r\n\t\t\tif (this.dynamic_section == area1)\r\n\t\t\t{\r\n\t\t\t\tvar size = (area2.root.offsetHeight - delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea1.root.style.height = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar size = (area1.root.offsetHeight + delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea2.root.style.height = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tLiteGUI.trigger( this.root, \"split_moved\");\r\n\t\t//trigger split_moved event in all areas inside this area\r\n\t\tvar areas = this.root.querySelectorAll(\".litearea\");\r\n\t\tfor(var i = 0; i < areas.length; ++i)\r\n\t\t\tLiteGUI.trigger( areas[i], \"split_moved\" );\r\n\t}\r\n\r\n\tArea.prototype.addEventListener = function(a,b,c,d)\r\n\t{\r\n\t\treturn this.root.addEventListener(a,b,c,d);\r\n\t}\r\n\r\n\tArea.prototype.setAreaSize = function(area,size)\r\n\t{\r\n\t\tvar element = this.sections[1];\r\n\r\n\t\tvar splitinfo = \" - \"+Area.splitbar_size+\"px\";\r\n\t\telement.root.style.width = \"-moz-calc( 100% - \" + size + splitinfo + \" )\";\r\n\t\telement.root.style.width = \"-webkit-calc( 100% - \" + size + splitinfo + \" )\";\r\n\t\telement.root.style.width = \"calc( 100% - \" + size + splitinfo + \" )\";\r\n\t}\r\n\r\n\tArea.prototype.merge = function(main_section)\r\n\t{\r\n\t\tif(this.sections.length == 0) throw \"not splitted\";\r\n\r\n\t\tvar main = this.sections[main_section || 0];\r\n\r\n\t\tthis.root.appendChild( main.content );\r\n\t\tthis.content = main.content;\r\n\r\n\t\tthis.root.removeChild( this.sections[0].root );\r\n\t\tthis.root.removeChild( this.sections[1].root );\r\n\r\n\t\t/*\r\n\t\twhile(main.childNodes.length > 0)\r\n\t\t{\r\n\t\t\tvar e = main.childNodes[0];\r\n\t\t\tthis.root.appendChild(e);\r\n\t\t}\r\n\r\n\t\tthis.root.removeChild( this.sections[0].root );\r\n\t\tthis.root.removeChild( this.sections[1].root );\r\n\t\t*/\r\n\r\n\t\tthis.sections = [];\r\n\t\tthis._computed_size = null;\r\n\t\tthis.onResize();\r\n\t}\r\n\r\n\tArea.prototype.add = function(v)\r\n\t{\r\n\t\tif(typeof(v) == \"string\")\r\n\t\t{\r\n\t\t\tvar element = document.createElement(\"div\");\r\n\t\t\telement.innerHTML = v;\r\n\t\t\tv = element;\r\n\t\t}\r\n\r\n\t\tthis.content.appendChild( v.root || v );\r\n\t}\r\n\r\n\tArea.prototype.query = function(v)\r\n\t{\r\n\t\treturn this.root.querySelector(v);\r\n\t}\r\n\r\n\treturn LiteGUI.Area = Area;\r\n});\n//enclose in a scope\r\ndefine('skylark-litegui/Console',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\tfunction Console( options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tthis.root = document.createElement(\"div\");\r\n\t\tthis.root.className = \"liteconsole\";\r\n\t\tthis.root.innerHTML = \"<div class='log'></div><div class='foot'><input type='text'/></div>\";\r\n\r\n\t\tthis.log_element = this.root.querySelector('.log');\r\n\t\tthis.input = this.root.querySelector('input');\r\n\r\n\t\tthis.input.addEventListener(\"keydown\", this.processKeyDown.bind(this) );\r\n\t\tthis._prompt = options.prompt || \"]\";\r\n\r\n\t\tthis.onAutocomplete = null; //receives string, must return final string\r\n\t\tthis.onProcessCommand = null; //receives input value\r\n\r\n\t\tthis.history = [];\r\n\t\tthis._history_offset = 0;\r\n\t}\r\n\r\n\tConsole.prototype.processKeyDown = function(e)\r\n\t{\r\n\t\tif(this._input_blocked)\r\n\t\t\treturn;\r\n\r\n\t\tif(e.keyCode == 13) //return and exec\r\n\t\t{\r\n\t\t\tvar value = this.input.value;\r\n\t\t\tvar cmd = value.trim();\r\n\t\t\tthis.addMessage( this._prompt + cmd, \"me\",true);\r\n\t\t\tthis.input.value = \"\";\r\n\t\t\tthis.history.push(cmd);\r\n\t\t\tif(this.history.length > 10)\r\n\t\t\t\tthis.history.shift();\r\n\t\t\tif( this.onProcessCommand )\r\n\t\t\t\tthis.onProcessCommand( cmd );\r\n\t\t\tthis._history_offset = 0;\r\n\t\t}\r\n\t\telse if(e.keyCode == 38 || e.keyCode == 40) //up & down history\r\n\t\t{\r\n\t\t\tthis._history_offset += (e.keyCode == 38 ? -1 : 1);\r\n\t\t\tif(this._history_offset > 0)\r\n\t\t\t\tthis._history_offset = 0;\r\n\t\t\telse if(this._history_offset < -this.history.length)\r\n\t\t\t\tthis._history_offset = -this.history.length;\r\n\t\t\tvar pos = this.history.length + this._history_offset;\r\n\t\t\tif(pos < 0)\r\n\t\t\t\treturn;\r\n\t\t\tif( pos >= this.history.length)\r\n\t\t\t\tthis.input.value = \"\";\r\n\t\t\telse\r\n\t\t\t\tthis.input.value = this.history[ pos ];\r\n\t\t}\r\n\t\telse if(e.keyCode == 9) //tab autocompletion\r\n\t\t{\r\n\t\t\tif(this.onAutocomplete)\r\n\t\t\t\tthis.input.value = this.onAutocomplete( this.input.value );\r\n\t\t\telse\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\tConsole.prototype.addMessage = function(text,className,as_text)\r\n\t{\r\n\t\tvar content = this.log_element;\r\n\t\tvar element = null; //contains the last message sent\r\n\r\n\t\tif(text && text.constructor === Array)\r\n\t\t{\r\n\t\t\tfor( var i = 0; i < text.length; ++i )\r\n\t\t\t\tadd( text[i] );\r\n\t\t}\r\n\t\telse if(text && text.constructor === Object)\r\n\t\t{\r\n\t\t\tadd( JSON.stringify(text,null,\"\"), this );\r\n\t\t}\r\n\t\telse\r\n\t\t\tadd( text, this );\r\n\r\n\t\tfunction add(txt, con)\r\n\t\t{\r\n\t\t\telement = document.createElement(\"pre\");\r\n\t\t\tif(as_text)\r\n\t\t\t\telement.innerText = txt;\r\n\t\t\telse\r\n\t\t\t\telement.innerHTML = txt;\r\n\t\t\telement.className = \"msg\";\r\n\t\t\tif(className)\r\n\t\t\t\telement.className += \" \" + className;\r\n\t\t\tcontent.appendChild(element);\r\n\t\t\tif( content.children.length > 1000 )\r\n\t\t\t\tcontent.removeChild( content.children[0] );\r\n\t\t}\r\n\r\n\t\tthis.log_element.scrollTop = 1000000;\r\n\t\telement.update = function(v)\r\n\t\t{\r\n\t\t\tthis.innerHTML = v;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tConsole.prototype.log = function()\r\n\t{\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\tvar d = args.join(\",\");\r\n\t\treturn this.addMessage( d, \"msglog\" );\r\n\t}\r\n\r\n\tConsole.prototype.warn = function()\r\n\t{\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\tvar d = args.join(\",\");\r\n\t\treturn this.addMessage( d, \"msgwarn\" );\r\n\t}\r\n\r\n\tConsole.prototype.error = function()\r\n\t{\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\tvar d = args.join(\",\");\r\n\t\treturn this.addMessage( d, \"msgerror\" );\r\n\t}\r\n\r\n\tConsole.prototype.clear = function()\r\n\t{\r\n\t\tthis.log_element.innerHTML = \"\";\r\n\t}\r\n\r\n\treturn LiteGUI.Console = Console;\r\n\r\n});\ndefine('skylark-litegui/Dialog',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\t/****************** DIALOG **********************/\r\n\t/**\r\n\t* Dialog\r\n\t*\r\n\t* @class Dialog\r\n\t* @param {Object} options useful options are { title, width, height, closable, on_close, scroll }\r\n\t* @constructor\r\n\t*/\r\n\tfunction Dialog( options, legacy )\r\n\t{\r\n\t\tif( legacy || (options && options.constructor === String) )\r\n\t\t{\r\n\t\t\tvar id = options;\r\n\t\t\toptions = legacy || {};\r\n\t\t\toptions.id = id;\r\n\t\t\tconsole.warn(\"LiteGUI.Dialog legacy parameter, use options as first parameter instead of id.\");\r\n\t\t}\r\n\r\n\t\tthis._ctor( options );\r\n\t}\r\n\r\n\tDialog.MINIMIZED_WIDTH = 200;\r\n\tDialog.title_height = \"20px\";\r\n\r\n\tDialog.getDialog = function( id )\r\n\t{\r\n\t\tvar element = document.getElementById( id );\t\t\r\n\t\tif(!element)\r\n\t\t\treturn null;\r\n\t\treturn element.dialog;\r\n\t}\r\n\r\n\tDialog.prototype._ctor = function( options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tvar that = this;\r\n\t\tthis.width = options.width;\r\n\t\tthis.height = options.height;\r\n\t\tthis.minWidth = options.minWidth || 150;\r\n\t\tthis.minHeight = options.minHeight || 100;\r\n\t\tthis.content = options.content || \"\";\r\n\r\n\t\tvar panel = document.createElement(\"div\");\r\n\t\tif(options.id)\r\n\t\t\tpanel.id = options.id;\r\n\r\n\t\tpanel.className = \"litedialog \" + (options.className || \"\");\r\n\t\tpanel.data = this;\r\n\t\tpanel.dialog = this;\r\n\r\n\t\tvar code = \"\";\r\n\t\tif(options.title)\r\n\t\t{\r\n\t\t\tcode += \"<div class='panel-header'>\"+options.title+\"</div><div class='buttons'>\";\r\n\t\t\tif(options.minimize){\r\n\t\t\t\tcode += \"<button class='litebutton mini-button minimize-button'>-</button>\";\r\n\t\t\t\tcode += \"<button class='litebutton mini-button maximize-button' style='display:none'></button>\";\r\n\t\t\t}\r\n\t\t\tif(options.hide)\r\n\t\t\t\tcode += \"<button class='litebutton mini-button hide-button'></button>\";\r\n\t\t\tif(options.detachable)\r\n\t\t\t\tcode += \"<button class='litebutton mini-button detach-button'></button>\";\r\n\t\t\t\r\n\t\t\tif(options.close || options.closable)\r\n\t\t\t\tcode += \"<button class='litebutton mini-button close-button'>\"+ LiteGUI.special_codes.close +\"</button>\";\r\n\t\t\tcode += \"</div>\";\r\n\t\t}\r\n\r\n\t\tcode += \"<div class='content'>\"+this.content+\"</div>\";\r\n\t\tcode += \"<div class='panel-footer'></div>\";\r\n\t\tpanel.innerHTML = code;\r\n\r\n\t\tthis.root = panel;\r\n\t\tthis.content = panel.querySelector(\".content\");\r\n\t\tthis.footer = panel.querySelector(\".panel-footer\");\r\n\r\n\t\tif(options.fullcontent)\r\n\t\t{\r\n\t\t\tthis.content.style.width = \"100%\";\t\t\r\n\t\t\tthis.content.style.height = options.title ? \"calc( 100% - \"+Dialog.title_height+\" )\" : \"100%\";\r\n\t\t}\r\n\r\n\t\tif(options.buttons)\r\n\t\t{\r\n\t\t\tfor(var i in options.buttons)\r\n\t\t\t\tthis.addButton(options.buttons[i].name, options.buttons[i]);\r\n\t\t}\r\n\r\n\t\t//if(options.scroll == false)\tthis.content.style.overflow = \"hidden\";\r\n\t\tif(options.scroll == true)\r\n\t\t\tthis.content.style.overflow = \"auto\";\r\n\r\n\t\t//buttons *********************************\r\n\t\tvar close_button = panel.querySelector(\".close-button\");\r\n\t\tif(close_button)\r\n\t\t\tclose_button.addEventListener(\"click\", this.close.bind(this) );\r\n\r\n\t\tvar maximize_button = panel.querySelector(\".maximize-button\");\r\n\t\tif(maximize_button)\r\n\t\t\tmaximize_button.addEventListener(\"click\", this.maximize.bind(this) );\r\n\r\n\t\tvar minimize_button = panel.querySelector(\".minimize-button\");\r\n\t\tif(minimize_button)\r\n\t\t\tminimize_button.addEventListener(\"click\", this.minimize.bind(this) );\r\n\r\n\t\tvar hide_button = panel.querySelector(\".hide-button\");\r\n\t\tif(hide_button)\r\n\t\t\thide_button.addEventListener(\"click\", this.hide.bind(this) );\r\n\r\n\t\tvar detach_button = panel.querySelector(\".detach-button\");\r\n\t\tif(detach_button)\r\n\t\t\tdetach_button.addEventListener(\"click\", function() { that.detachWindow(); });\r\n\r\n\t\t//size, draggable, resizable, etc\r\n\t\tthis.enableProperties(options);\r\n\r\n\t\tthis.root.addEventListener(\"DOMNodeInsertedIntoDocument\", function(){ \r\n\t\t\tif( that.on_attached_to_DOM )\r\n\t\t\t\tthat.on_attached_to_DOM();\r\n\t\t\tif( that.on_resize )\r\n\t\t\t\tthat.on_resize();\r\n\t\t});\r\n\t\tthis.root.addEventListener(\"DOMNodeRemovedFromDocument\", function(){ \r\n\t\t\tif( that.on_detached_from_DOM )\r\n\t\t\t\tthat.on_detached_from_DOM();\r\n\t\t});\r\n\r\n\r\n\t\t//attach\r\n\t\tif(options.attach || options.parent)\r\n\t\t{\r\n\t\t\tvar parent = null;\r\n\t\t\tif(options.parent)\r\n\t\t\t\tparent = typeof(options.parent) == \"string\" ? document.querySelector(options.parent) : options.parent;\r\n\t\t\tif(!parent)\r\n\t\t\t\tparent = LiteGUI.root;\r\n\t\t\tparent.appendChild( this.root );\r\n\t\t\tthis.center();\r\n\t\t}\r\n\r\n\t\t//if(options.position) //not docked\r\n\t\t//\tthis.setPosition( options.position[0], options.position[1] );\r\n\t}\r\n\r\n\t/**\r\n\t* add widget or html to the content of the dialog\r\n\t* @method add\r\n\t*/\r\n\tDialog.prototype.add = function( litegui_item )\r\n\t{\r\n\t\tthis.content.appendChild( litegui_item.root || litegui_item );\r\n\t}\r\n\r\n\t//takes the info from the parent to \r\n\tDialog.prototype.enableProperties = function(options)\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tvar that = this;\r\n\r\n\t\tvar panel = this.root;\r\n\t\tpanel.style.position = \"absolute\";\r\n\t\t//panel.style.display = \"none\";\r\n\r\n\t\tpanel.style.minWidth = this.minWidth + \"px\";\r\n\t\tpanel.style.minHeight = this.minHeight + \"px\";\r\n\r\n\t\tif(this.width)\r\n\t\t\tpanel.style.width = this.width + \"px\";\r\n\r\n\t\tif(this.height)\r\n\t\t{\r\n\t\t\tif(typeof(this.height) == \"number\")\r\n\t\t\t{\r\n\t\t\t\tpanel.style.height = this.height + \"px\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(this.height.indexOf(\"%\") != -1)\r\n\t\t\t\t\tpanel.style.height = this.height;\r\n\t\t\t}\r\n\r\n\t\t\tthis.content.style.height = \"calc( \" + this.height + \"px - 24px )\";\r\n\t\t}\r\n\r\n\t\tpanel.style.boxShadow = \"0 0 3px black\";\r\n\r\n\t\tif(options.draggable)\r\n\t\t{\r\n\t\t\tthis.draggable = true;\r\n\t\t\tLiteGUI.draggable( panel, panel.querySelector(\".panel-header\"), function(){\r\n\t\t\t\tthat.bringToFront();\r\n\t\t\t},null, function(){\r\n\t\t\t\treturn !that.minimized;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(options.resizable)\r\n\t\t\tthis.setResizable();\r\n\t}\r\n\r\n\tDialog.prototype.setResizable = function()\r\n\t{\r\n\t\tif(this.resizable)\r\n\t\t\treturn;\r\n\r\n\t\tvar root = this.root;\r\n\t\tthis.resizable = true;\r\n\t\tvar footer = this.footer;\r\n\t\tfooter.style.minHeight = \"4px\";\r\n\t\tfooter.classList.add(\"resizable\");\r\n\r\n\t\tvar corner = document.createElement(\"div\");\r\n\t\tcorner.className = \"resizable-corner\";\r\n\t\tthis.root.appendChild( corner );\r\n\r\n\t\tfooter.addEventListener(\"mousedown\", inner_mouse);\r\n\t\tcorner.addEventListener(\"mousedown\", inner_mouse, true);\r\n\r\n\t\tvar mouse = [0,0];\r\n\t\tvar that = this;\r\n\r\n\t\tvar is_corner = false;\r\n\r\n\t\tfunction inner_mouse(e)\r\n\t\t{\r\n\t\t\t//console.log( getTime(), is_corner );\r\n\r\n\t\t\tif(e.type == \"mousedown\")\r\n\t\t\t{\r\n\t\t\t\tdocument.body.addEventListener(\"mousemove\", inner_mouse);\r\n\t\t\t\tdocument.body.addEventListener(\"mouseup\", inner_mouse);\r\n\t\t\t\tis_corner = this == corner;\r\n\t\t\t\tmouse[0] = e.pageX;\r\n\t\t\t\tmouse[1] = e.pageY;\r\n\t\t\t}\r\n\t\t\telse if(e.type == \"mousemove\")\r\n\t\t\t{\r\n\t\t\t\tvar rect = LiteGUI.getRect( root );\r\n\t\t\t\tvar w = rect.width;\r\n\t\t\t\tvar neww = w - (mouse[0] - e.pageX);\r\n\t\r\n\t\t\t\tvar h = rect.height;\r\n\t\t\t\tvar newh = h - (mouse[1] - e.pageY);\r\n\r\n\t\t\t\tif(is_corner)\r\n\t\t\t\t\troot.style.width = neww + \"px\";\r\n\t\t\t\troot.style.height = newh + \"px\";\r\n\r\n\t\t\t\tmouse[0] = e.pageX;\r\n\t\t\t\tmouse[1] = e.pageY;\r\n\t\t\t\tthat.content.style.height = \"calc( 100% - 24px )\";\r\n\r\n\t\t\t\tif(that.on_resize && (w != neww || h != newh) )\r\n\t\t\t\t\tthat.on_resize(e,neww,newh);\r\n\t\t\t}\r\n\t\t\telse if(e.type == \"mouseup\")\r\n\t\t\t{\r\n\t\t\t\tdocument.body.removeEventListener(\"mousemove\", inner_mouse);\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", inner_mouse);\r\n\t\t\t\tis_corner = false;\r\n\t\t\t}\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tDialog.prototype.dockTo = function( parent, dock_type )\r\n\t{\r\n\t\tif(!parent) return;\r\n\t\tvar panel = this.root;\r\n\r\n\t\tdock_type = dock_type || \"full\";\r\n\t\tparent = parent.content || parent;\r\n\r\n\t\tpanel.style.top = 0;\r\n\t\tpanel.style.left = 0;\r\n\r\n\t\tpanel.style.boxShadow = \"0 0 0\";\r\n\r\n\t\tif(dock_type == \"full\")\r\n\t\t{\r\n\t\t\tpanel.style.position = \"relative\";\r\n\t\t\tpanel.style.width = \"100%\";\r\n\t\t\tpanel.style.height = \"100%\";\r\n\t\t\tthis.content.style.width = \"100%\";\r\n\t\t\tthis.content.style.height = \"calc(100% - \"+ LiteGUI.Panel.title_height +\")\"; //title offset: 20px\r\n\t\t\tthis.content.style.overflow = \"auto\";\r\n\t\t}\r\n\t\telse if(dock_type == 'left' || dock_type == 'right')\r\n\t\t{\r\n\t\t\tpanel.style.position = \"absolute\";\r\n\t\t\tpanel.style.top = 0;\r\n\t\t\tpanel.style[dock_type] = 0;\r\n\r\n\t\t\tpanel.style.width = this.width + \"px\";\r\n\t\t\tpanel.style.height = \"100%\";\r\n\t\t\tthis.content.style.height = \"calc(100% - \"+ LiteGUI.Panel.title_height +\")\";\r\n\t\t\tthis.content.style.overflow = \"auto\";\r\n\r\n\t\t\tif(dock_type == 'right')\r\n\t\t\t{\r\n\t\t\t\tpanel.style.left = \"auto\";\r\n\t\t\t\tpanel.style.right = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(dock_type == 'bottom' || dock_type == 'top')\r\n\t\t{\r\n\t\t\tpanel.style.width = \"100%\";\r\n\t\t\tpanel.style.height = this.height + \"px\";\r\n\t\t\tif(dock_type == 'bottom')\r\n\t\t\t{\r\n\t\t\t\tpanel.style.bottom = 0;\r\n\t\t\t\tpanel.style.top = \"auto\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.draggable)\r\n\t\t{\r\n\t\t\tLiteGUI.draggable(panel);\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif(parent.content)\r\n\t\t\tparent.content.appendChild(panel);\r\n\t\telse if( typeof(parent) == \"string\")\r\n\t\t{\r\n\t\t\tparent = document.querySelector( parent );\r\n\t\t\tif(parent)\r\n\t\t\t\tparent.appendChild( panel )\r\n\t\t}\r\n\t\telse\r\n\t\t\tparent.appendChild( panel ); \r\n\t}\r\n\r\n\tDialog.prototype.addButton = function(name,options)\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tif( options.constructor === Function )\r\n\t\t\toptions = { callback: options };\r\n\r\n\t\tvar that = this;\r\n\t\tvar button = document.createElement(\"button\");\r\n\t\tbutton.className = \"litebutton\";\r\n\r\n\t\tbutton.innerHTML = name;\r\n\t\tif(options.className)\r\n\t\t\tbutton.className += \" \" + options.className;\r\n\r\n\t\tthis.root.querySelector(\".panel-footer\").appendChild( button );\r\n\r\n\t\tbutton.addEventListener(\"click\", function(e) { \r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback(this);\r\n\r\n\t\t\tif(options.close)\r\n\t\t\t\tthat.close();\r\n\t\t});\r\n\r\n\t\treturn button;\r\n\t}\r\n\r\n\t/**\r\n\t* destroys the dialog\r\n\t* @method close\r\n\t*/\r\n\tDialog.prototype.close = function() {\r\n\t\tLiteGUI.remove( this.root );\r\n\t\tLiteGUI.trigger( this, \"closed\", this);\r\n\t\tif(this.on_close)\r\n\t\t\tthis.on_close();\r\n\t\tif(this.onclose)\r\n\t\t\tconsole.warn(\"Dialog: Do not use onclose, use on_close instead\");\r\n\t\tif(this.dialog_window)\r\n\t\t{\r\n\t\t\tthis.dialog_window.close();\r\n\t\t\tthis.dialog_window = null;\r\n\t\t}\r\n\t}\r\n\r\n\tDialog.prototype.highlight = function(time)\r\n\t{\r\n\t\ttime = time || 100;\r\n\t\tthis.root.style.outline = \"1px solid white\";\r\n\t\tvar doc = this.root.ownerDocument;\r\n\t\tvar w = doc.defaultView || doc.parentWindow;\r\n\t\tw.focus();\r\n\t\tsetTimeout( (function(){\r\n\t\t\tthis.root.style.outline = null;\r\n\t\t}).bind(this), time );\r\n\t}\r\n\r\n\tDialog.minimized = [];\r\n\r\n\tDialog.prototype.minimize = function() {\r\n\t\tif(this.minimized)\r\n\t\t\treturn;\r\n\r\n\t\tthis.minimized = true;\r\n\t\tthis.old_box = this.root.getBoundingClientRect();\r\n\r\n\t\tthis.root.querySelector(\".content\").style.display = \"none\";\r\n\t\t\r\n\t\tvar minimize_button = this.root.querySelector(\".minimize-button\");\r\n\t\tif(minimize_button)\t\r\n\t\t\tminimize_button.style.display = \"none\";\r\n\r\n\t\tvar maximize_button = this.root.querySelector(\".maximize-button\");\r\n\t\tif(maximize_button)\r\n\t\t\tmaximize_button.style.display = \"\";\r\n\r\n\t\tthis.root.style.width = LiteGUI.Dialog.MINIMIZED_WIDTH + \"px\";\r\n\r\n\t\tLiteGUI.bind( this, \"closed\", function() {\r\n\t\t\tLiteGUI.Dialog.minimized.splice( LiteGUI.Dialog.minimized.indexOf( this ), 1);\r\n\t\t\tLiteGUI.Dialog.arrangeMinimized();\r\n\t\t});\r\n\r\n\t\tLiteGUI.Dialog.minimized.push( this );\r\n\t\tLiteGUI.Dialog.arrangeMinimized();\r\n\r\n\t\tLiteGUI.trigger( this,\"minimizing\" );\r\n\t}\r\n\r\n\tDialog.arrangeMinimized = function()\r\n\t{\r\n\t\tfor(var i in LiteGUI.Dialog.minimized)\r\n\t\t{\r\n\t\t\tvar dialog = LiteGUI.Dialog.minimized[i];\r\n\t\t\tvar parent = dialog.root.parentNode;\r\n\t\t\tvar pos = parent.getBoundingClientRect().height - 20;\r\n\t\t\tdialog.root.style.left = LiteGUI.Dialog.MINIMIZED_WIDTH * i;\r\n\t\t\tdialog.root.style.top = pos + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\tDialog.prototype.maximize = function() {\r\n\t\tif(!this.minimized)\r\n\t\t\treturn;\r\n\t\tthis.minimized = false;\r\n\r\n\t\tthis.root.querySelector(\".content\").style.display = \"\";\r\n\t\tLiteGUI.draggable(this.root);\r\n\t\tthis.root.style.left = this.old_box.left+\"px\";\r\n\t\tthis.root.style.top = this.old_box.top + \"px\";\r\n\t\tthis.root.style.width = this.old_box.width + \"px\";\r\n\t\tthis.root.style.height = this.old_box.height + \"px\";\r\n\r\n\t\tvar minimize_button = this.root.querySelector(\".minimize-button\");\r\n\t\tif(minimize_button)\r\n\t\t\tminimize_button.style.display = \"\";\r\n\r\n\t\tvar maximize_button = this.root.querySelector(\".maximize-button\");\r\n\t\tif(maximize_button)\r\n\t\t\tmaximize_button.style.display = \"none\";\r\n\r\n\t\tLiteGUI.Dialog.minimized.splice( LiteGUI.Dialog.minimized.indexOf( this ), 1);\r\n\t\tLiteGUI.Dialog.arrangeMinimized();\r\n\t\tLiteGUI.trigger( this, \"maximizing\" );\r\n\t}\r\n\r\n\tDialog.prototype.makeModal = function()\r\n\t{\r\n\t\tLiteGUI.showModalBackground(true);\r\n\t\tLiteGUI.modalbg_div.appendChild( this.root ); //add panel\r\n\t\tthis.show();\r\n\t\tthis.center();\r\n\r\n\t\tLiteGUI.bind( this, \"closed\", inner );\r\n\r\n\t\tfunction inner(e)\r\n\t\t{\r\n\t\t\tLiteGUI.showModalBackground(false);\r\n\t\t}\r\n\t}\r\n\r\n\tDialog.prototype.bringToFront = function()\r\n\t{\r\n\t\tvar parent = this.root.parentNode;\r\n\t\tparent.removeChild(this.root);\r\n\t\tparent.appendChild(this.root);\r\n\t}\r\n\r\n\t/**\r\n\t* shows a hidden dialog\r\n\t* @method show\r\n\t*/\r\n\tDialog.prototype.show = function( v, reference_element )\r\n\t{\r\n\t\tif(!this.root.parentNode)\r\n\t\t{\r\n\t\t\tif(!reference_element)\r\n\t\t\t\tLiteGUI.add( this );\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar doc = reference_element.ownerDocument;\r\n\t\t\t\tvar parent = doc.querySelector(\".litegui-wrap\") || doc.body;\r\n\t\t\t\tparent.appendChild( this.root );\r\n\t\t\t\tvar w = doc.defaultView || doc.parentWindow;\r\n\t\t\t\tw.focus();\r\n\t\t\t}\r\n\t\t\tthis.center();\r\n\t\t}\r\n\r\n\t\tif(!this.detach_window)\r\n\t\t{\r\n\t\t\tthis.root.style.display = \"\";\r\n\t\t\tLiteGUI.trigger( this, \"shown\" );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* hides the dialog\r\n\t* @method hide\r\n\t*/\r\n\tDialog.prototype.hide = function( v )\r\n\t{\r\n\t\tthis.root.style.display = \"none\";\r\n\t\tLiteGUI.trigger(this, \"hidden\");\r\n\t}\r\n\r\n\tDialog.prototype.fadeIn = function(time)\r\n\t{\r\n\t\ttime = time || 1000;\r\n\t\tthis.root.style.display = \"\";\r\n\t\tthis.root.style.opacity = 0;\r\n\t\tvar that = this;\r\n\t\tsetTimeout(function(){\r\n\t\t\tthat.root.style.transition = \"opacity \"+time+\"ms\";\r\n\t\t\tthat.root.style.opacity = 1;\r\n\t\t},100);\r\n\t}\r\n\r\n\tDialog.prototype.setPosition = function(x,y)\r\n\t{\r\n\t\tif(!this.root.parentNode)\r\n\t\t\tconsole.warn(\"LiteGUI.Dialog: Cannot set position of dialog if it is not in the DOM\");\r\n\t\tthis.root.position = \"absolute\";\r\n\t\tthis.root.style.left = x + \"px\";\r\n\t\tthis.root.style.top = y + \"px\";\r\n\t}\r\n\r\n\tDialog.prototype.setSize = function( w, h )\r\n\t{\r\n\t\tthis.root.style.width = typeof(w) == \"number\" ? w + \"px\" : w;\r\n\t\tthis.root.style.height = typeof(h) == \"number\" ? h + \"px\" : h;\r\n\t}\r\n\r\n\tDialog.prototype.setTitle = function(text)\r\n\t{\r\n\t\tif(!this.header)\r\n\t\t\treturn;\r\n\t\tthis.header.innerHTML = text;\r\n\t}\r\n\r\n\tDialog.prototype.center = function()\r\n\t{\r\n\t\tif(!this.root.parentNode)\r\n\t\t\treturn;\r\n\r\n\t\tthis.root.position = \"absolute\";\r\n\t\tvar width = this.root.offsetWidth;\r\n\t\tvar height = this.root.offsetHeight;\r\n\t\tvar parent_width = this.root.parentNode.offsetWidth;\r\n\t\tvar parent_height = this.root.parentNode.offsetHeight;\r\n\t\tthis.root.style.left = Math.floor(( parent_width - width ) * 0.5) + \"px\";\r\n\t\tthis.root.style.top = Math.floor(( parent_height - height ) * 0.5) + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t* Adjust the size of the dialog to the size of the content\r\n\t* @method adjustSize\r\n\t* @param {number} margin\r\n\t*/\r\n\tDialog.prototype.adjustSize = function( margin, skip_timeout )\r\n\t{\r\n\t\tmargin = margin || 0;\r\n\t\tthis.content.style.height = \"auto\";\r\n\r\n\t\tif(this.content.offsetHeight == 0 && !skip_timeout) //happens sometimes if the dialog is not yet visible\r\n\t\t{\r\n\t\t\tvar that = this;\r\n\t\t\tsetTimeout( function(){ that.adjustSize( margin, true ); }, 1 );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar extra = 0;\r\n\t\tvar footer = this.root.querySelector(\".panel-footer\");\r\n\t\tif(footer)\r\n\t\t\textra += footer.offsetHeight;\r\n\r\n\t\tvar width = this.content.offsetWidth;\r\n\t\tvar height = this.content.offsetHeight + 20 + margin + extra;\r\n\r\n\t\tthis.setSize( width, height );\r\n\t}\r\n\r\n\tDialog.prototype.clear = function()\r\n\t{\r\n\t\tthis.content.innerHTML = \"\";\r\n\t}\r\n\r\n\tDialog.prototype.detachWindow = function( on_complete, on_close )\r\n\t{\r\n\t\tif(this.dialog_window)\r\n\t\t\treturn;\r\n\r\n\t\t//create window\r\n\t\tvar rect = this.root.getClientRects()[0];\r\n\t\tvar w = rect.width;\r\n\t\tvar h = rect.height;\r\n\t\tvar title = \"Window\";\r\n\t\tvar header = this.root.querySelector(\".panel-header\");\r\n\t\tif(header)\r\n\t\t\ttitle = header.textContent;\r\n\r\n\t\tvar dialog_window = window.open(\"\",\"\",\"width=\"+w+\", height=\"+h+\", location=no, status=no, menubar=no, titlebar=no, fullscreen=yes\");\r\n\t\tdialog_window.document.write( \"<head><title>\"+title+\"</title>\" );\r\n\t\tthis.dialog_window = dialog_window;\r\n\r\n\t\t//transfer style\r\n\t\tvar styles = document.querySelectorAll(\"link[rel='stylesheet'],style\");\r\n\t\tfor(var i = 0; i < styles.length; i++)\r\n\t\t\tdialog_window.document.write( styles[i].outerHTML );\r\n\t\tdialog_window.document.write( \"</head><body></body>\" );\r\n\t\tdialog_window.document.close();\r\n\r\n\t\tvar that = this;\r\n\r\n\t\t//closing event\r\n\t\tdialog_window.onbeforeunload = function(){\r\n\t\t\tvar index = LiteGUI.windows.indexOf( dialog_window );\r\n\t\t\tif(index != -1)\r\n\t\t\t\tLiteGUI.windows.splice( index, 1 );\r\n\t\t\tif(on_close)\r\n\t\t\t\ton_close();\r\n\t\t}\r\n\r\n\t\t//move the content there\r\n\t\tdialog_window.document.body.appendChild( this.content );\r\n\t\tthis.root.style.display = \"none\"; //hide\r\n\t\tthis._old_height = this.content.style.height;\r\n\t\tthis.content.style.height = \"100%\";\r\n\r\n\t\tLiteGUI.windows.push( dialog_window );\r\n\r\n\t\tif(on_complete)\r\n\t\t\ton_complete();\r\n\r\n\t\treturn dialog_window;\t\t\r\n\t}\r\n\r\n\tDialog.prototype.reattachWindow = function( on_complete )\r\n\t{\r\n\t\tif(!this.dialog_window)\r\n\t\t\treturn;\r\n\r\n\t\tthis.root.appendChild( this.content );\r\n\t\tthis.root.style.display = \"\"; //show\r\n\t\tthis.content.style.height = this._old_height;\r\n\t\tdelete this._old_height;\r\n\t\tthis.dialog_window.close();\r\n\t\tvar index = LiteGUI.windows.indexOf( this.dialog_window );\r\n\t\tif(index != -1)\r\n\t\t\tLiteGUI.windows.splice( index, 1 );\r\n\t\tthis.dialog_window = null;\r\n\t}\r\n\r\n\r\n\t//*********************************************\r\n\r\n\tDialog.showAll = function()\r\n\t{\r\n\t\tvar dialogs = document.body.querySelectorAll(\"litedialog\");\r\n\t\tfor(var i = 0; i < dialogs.length; i++)\r\n\t\t{\r\n\t\t\tvar dialog = dialogs[i];\r\n\t\t\tdialog.dialog.show();\r\n\t\t}\r\n\t}\r\n\r\n\tDialog.hideAll = function()\r\n\t{\r\n\t\tvar dialogs = document.body.querySelectorAll(\"litedialog\");\r\n\t\tfor(var i = 0; i < dialogs.length; i++)\r\n\t\t{\r\n\t\t\tvar dialog = dialogs[i];\r\n\t\t\tdialog.dialog.hide();\r\n\t\t}\r\n\t}\r\n\r\n\tDialog.closeAll = function()\r\n\t{\r\n\t\tvar dialogs = document.body.querySelectorAll(\"litedialog\");\r\n\t\tfor(var i = 0; i < dialogs.length; i++)\r\n\t\t{\r\n\t\t\tvar dialog = dialogs[i];\r\n\t\t\tdialog.dialog.close();\r\n\t\t}\r\n\t}\r\n\r\n\treturn LiteGUI.Dialog = Dialog;\r\n});\ndefine('skylark-litegui/Dragger',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\t/***** DRAGGER **********/\r\n\tfunction Dragger(value, options)\r\n\t{\r\n\t\tif(value === null || value === undefined)\r\n\t\t\tvalue = 0;\r\n\t\telse if(value.constructor === String)\r\n\t\t\tvalue = parseFloat(value);\r\n\t\telse if(value.constructor !== Number)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis.value = value;\r\n\t\tvar that = this;\r\n\t\tvar precision = options.precision != undefined ? options.precision : 3; //num decimals\r\n\r\n\t\tthis.options = options || {};\r\n\t\tvar element = document.createElement(\"div\");\r\n\t\telement.className = \"dragger \" + (options.extraclass ? options.extraclass : \"\");\r\n\t\tthis.root = element;\r\n\r\n\t\tvar wrap = document.createElement(\"span\");\r\n\t\twrap.className = \"inputfield \" + (options.extraclass ? options.extraclass : \"\") + (options.full ? \" full\" : \"\");\r\n\t\tif(options.disabled)\r\n\t\twrap.className += \" disabled\";\r\n\t\telement.appendChild(wrap);\r\n\r\n\t\tvar dragger_class = options.dragger_class || \"full\";\r\n\r\n\t\tvar input = document.createElement(\"input\");\r\n\t\tinput.className = \"text number \" + (dragger_class ? dragger_class : \"\");\r\n\t\tinput.value = value.toFixed( precision ) + (options.units ? options.units : \"\");\r\n\t\tinput.tabIndex = options.tab_index;\r\n\t\tthis.input = input;\r\n\t\telement.input = input;\r\n\r\n\t\tif(options.disabled)\r\n\t\t\tinput.disabled = true;\r\n\t\tif(options.tab_index)\r\n\t\t\tinput.tabIndex = options.tab_index;\r\n\t\twrap.appendChild(input);\r\n\r\n\t\tinput.addEventListener(\"keydown\",function(e) {\r\n\t\t\tif(e.keyCode == 38)\r\n\t\t\t\tinner_inc(1,e);\r\n\t\t\telse if(e.keyCode == 40)\r\n\t\t\t\tinner_inc(-1,e);\r\n\t\t\telse\r\n\t\t\t\treturn;\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tvar dragger = document.createElement(\"div\");\r\n\t\tdragger.className = \"drag_widget\";\r\n\t\tif(options.disabled)\r\n\t\t\tdragger.className += \" disabled\";\r\n\r\n\t\twrap.appendChild(dragger);\r\n\t\telement.dragger = dragger;\r\n\r\n\t\tdragger.addEventListener(\"mousedown\",inner_down);\r\n\t\tinput.addEventListener(\"wheel\",inner_wheel,false);\r\n\t\tinput.addEventListener(\"mousewheel\",inner_wheel,false);\r\n\r\n\t\tvar doc_binded = null;\r\n\r\n\t\tfunction inner_down(e)\r\n\t\t{\r\n\t\t\tdoc_binded = input.ownerDocument;\r\n\r\n\t\t\tdoc_binded.removeEventListener(\"mousemove\", inner_move);\r\n\t\t\tdoc_binded.removeEventListener(\"mouseup\", inner_up);\r\n\r\n\t\t\tif(!options.disabled)\r\n\t\t\t{\r\n\t\t\t\tif(element.requestPointerLock)\r\n\t\t\t\t\telement.requestPointerLock();\r\n\t\t\t\tdoc_binded.addEventListener(\"mousemove\", inner_move);\r\n\t\t\t\tdoc_binded.addEventListener(\"mouseup\", inner_up);\r\n\r\n\t\t\t\tdragger.data = [e.screenX, e.screenY];\r\n\r\n\t\t\t\tLiteGUI.trigger( element,\"start_dragging\");\r\n\t\t\t}\r\n\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\tfunction inner_move(e)\r\n\t\t{\r\n\t\t\tvar deltax = e.screenX - dragger.data[0];\r\n\t\t\tvar deltay = dragger.data[1] - e.screenY;\r\n\t\t\tvar diff = [ deltax, deltay ];\r\n\t\t\tif(e.movementX !== undefined)\r\n\t\t\t\tdiff = [e.movementX, -e.movementY]\r\n\t\t\t//console.log(e);\r\n\t\t\tdragger.data = [e.screenX, e.screenY];\r\n\t\t\tvar axis = options.horizontal ? 0 : 1;\r\n\t\t\tinner_inc( diff[axis], e );\r\n\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tfunction inner_wheel(e)\r\n\t\t{\r\n\t\t\t//console.log(\"wheel!\");\r\n\t\t\tif(document.activeElement !== this)\r\n\t\t\t\treturn;\r\n\t\t\tvar delta = e.wheelDelta !== undefined ? e.wheelDelta : (e.deltaY ? -e.deltaY/3 : 0);\r\n\t\t\tinner_inc( delta > 0 ? 1 : -1, e );\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\tfunction inner_up(e)\r\n\t\t{\r\n\t\t\tLiteGUI.trigger(element, \"stop_dragging\");\r\n\t\t\tvar doc = doc_binded || document;\r\n\t\t\tdoc_binded = null;\r\n\t\t\tdoc.removeEventListener(\"mousemove\", inner_move);\r\n\t\t\tdoc.removeEventListener(\"mouseup\", inner_up);\r\n\t\t\tif(doc.exitPointerLock)\r\n\t\t\t\tdoc.exitPointerLock();\r\n\t\t\tLiteGUI.trigger(dragger,\"blur\");\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tfunction inner_inc(v,e)\r\n\t\t{\r\n\t\t\tif(!options.linear)\r\n\t\t\t\tv = v > 0 ? Math.pow(v,1.2) : Math.pow( Math.abs(v), 1.2) * -1;\r\n\t\t\tvar scale = (options.step ? options.step : 1.0);\r\n\t\t\tif(e && e.shiftKey)\r\n\t\t\t\tscale *= 10;\r\n\t\t\telse if(e && e.ctrlKey)\r\n\t\t\t\tscale *= 0.1;\r\n\t\t\tvar value = parseFloat( input.value ) + v * scale;\r\n\t\t\tif(options.max != null && value > options.max)\r\n\t\t\t\tvalue = options.max;\r\n\t\t\tif(options.min != null && value < options.min)\r\n\t\t\t\tvalue = options.min;\r\n\r\n\t\t\tinput.value = value.toFixed( precision );\r\n\t\t\t//input.value = ((value * 1000)<<0) / 1000; //remove ugly decimals\r\n\t\t\tif(options.units)\r\n\t\t\t\tinput.value += options.units;\r\n\t\t\tLiteGUI.trigger(input,\"change\");\r\n\t\t}\r\n\t}\r\n\r\n\tDragger.prototype.setRange = function(min,max)\r\n\t{\r\n\t\tthis.options.min = min;\r\n\t\tthis.options.max = max;\r\n\t}\r\n\r\n\tDragger.prototype.setValue = function(v, skip_event) { \r\n\t\tv = parseFloat(v);\r\n\t\tthis.value = v;\r\n\t\tif(this.options.precision)\r\n\t\t\tv = v.toFixed(this.options.precision);\r\n\t\tif(this.options.units)\r\n\t\t\tv += this.options.units;\r\n\t\tthis.input.value = v;\r\n\t\tif(!skip_event)\r\n\t\t\tLiteGUI.trigger( this.input, \"change\" );\r\n\t}\r\n\r\n\tDragger.prototype.getValue = function()\r\n\t{\r\n\t\treturn this.value;\r\n\t}\r\n\r\n\treturn LiteGUI.Dragger = Dragger;\r\n});\ndefine('skylark-litegui/Inspector',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\t/**\r\n\t* Inspector allows to create a list of widgets easily, it also provides methods to create the widgets automatically.<br/>\r\n\t* Every widget is created calling the function add followed by the widget name, p.e. addSlider or addVector3 or addNumber.<br/>\r\n\t* Widgets always receive three parameters:<br/>\r\n\t* - name: String that defines the name at that it will be shown in the left side of the widget.<br/>\r\n\t* - value: the value that will be displayed in the widget.<br/>\r\n\t* - options: Object containing all the values .<br/>\r\n\t*\r\n\t* @class Inspector\r\n\t* @param {Object} options object with a set of options { <br/>\r\n\t\twidth: total width <br/>\r\n\t\theight: total height <br/>\r\n\t\twidgets_width: width of every widget (used mostly in horizontal inspectors) <br/>\r\n\t\tname_width: width of the name part of widgets <br/>\r\n\t\tfull: set to true if you want the inspector to use all the parent width and height <br/>\r\n\t\twidgets_per_row: number of widgets per row, default is 1 but you can change it if you want to pack several widgets in a row (useful for small widgets like checkboxes) <br/>\r\n\t\tone_line: widgets are place one next to the other horizontaly <br/>\r\n\t\tonchange: callback to call when something changes <br/>\r\n\t   } <br/>\r\n\r\n\t\tDependencies: \r\n\t\t\t- jscolor.js\r\n\r\n\t* @constructor\r\n\t*/\r\n\r\n\tfunction Inspector( options )\r\n\t{\r\n\t\t//for legacy code\r\n\t\tif(options && options.constructor === String)\r\n\t\t{\r\n\t\t\tvar id = options;\r\n\t\t\toptions = arguments[1] || {};\r\n\t\t\toptions.id = id;\r\n\t\t\tconsole.warn(\"LiteGUI.Inspector legacy parameter, use options as first parameter instead of id.\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\tthis.root = document.createElement(\"DIV\");\r\n\t\tthis.root.className = \"inspector \" + ( options.full ? \"full\" : \"\") + (options.className || \"\");\r\n\t\tif(options.one_line)\r\n\t\t{\r\n\t\t\tthis.one_line = true;\r\n\t\t\tthis.root.className += \" one_line\";\r\n\t\t}\r\n\r\n\t\tif(options.id)\r\n\t\t\tthis.root.id = options.id;\r\n\r\n\t\tthis.sections = [];\r\n\t\tthis.values = {};\r\n\t\tthis.widgets = [];\r\n\t\tthis.widgets_by_name = {};\r\n\t\tthis.row_number = 0; //used to detect if element is even (cannot use CSS, special cases everywhere)\r\n\r\n\t\tthis.addContainer(); //add empty container\r\n\t\tthis.tab_index = Math.floor(Math.random() * 10000);\r\n\r\n\t\tif(options.width)\r\n\t\t\tthis.root.style.width = LiteGUI.sizeToCSS( options.width );\r\n\t\tif(options.height)\r\n\t\t{\r\n\t\t\tthis.root.style.height = LiteGUI.sizeToCSS( options.height );\r\n\t\t\tif(!options.one_line)\r\n\t\t\t\tthis.root.style.overflow = \"auto\";\r\n\t\t}\r\n\r\n\t\tif(options.name_width)\r\n\t\t\tthis.name_width = options.name_width;\r\n\t\tif(options.widgets_width)\r\n\t\t\tthis.widgets_width = options.widgets_width;\r\n\r\n\t\tif(options.noscroll)\r\n\t\t\tthis.root.style.overflow = \"hidden\";\r\n\r\n\t\tif(options.onchange)\r\n\t\t\tthis.onchange = options.onchange;\r\n\r\n\t\tif(options.parent)\r\n\t\t\tthis.appendTo(options.parent);\r\n\r\n\t\tthis.className = this.root.className;\r\n\r\n\t\tthis.widgets_per_row = options.widgets_per_row || 1;\r\n\t}\r\n\r\n\tInspector.prototype.getValues = function()\r\n\t{\r\n\t\tvar r = {};\r\n\t\tfor(var i in this.widgets_by_name)\r\n\t\t\tr[i] = this.widgets_by_name[i].getValue();\r\n\t\treturn r;\r\n\t}\r\n\r\n\tInspector.prototype.setValues = function(v)\r\n\t{\r\n\t\tfor(var i in v)\r\n\t\t\tif( this.widgets_by_name[i] )\r\n\t\t\t\tthis.widgets_by_name[i].setValue( v[i] );\r\n\t}\r\n\r\n\t//append the inspector to a parent\r\n\tInspector.prototype.appendTo = function( parent, at_front )\r\n\t{\r\n\t\tif(!parent)\r\n\t\t\treturn;\r\n\t\tif(parent.constructor === String)\r\n\t\t\tparent = document.querySelector(parent);\r\n\t\tif(!parent)\r\n\t\t\treturn;\r\n\t\tif( at_front )\r\n\t\t\tparent.insertBefore( this.root, parent.firstChild );\r\n\t\telse\r\n\t\t\tparent.appendChild( this.root );\r\n\t}\r\n\r\n\t/**\r\n\t* Removes all the widgets inside the inspector\r\n\t* @method clear\r\n\t*/\r\n\tInspector.prototype.clear = function()\r\n\t{\r\n\t\tpurgeElement( this.root, true ); //hack, but doesnt seem to work\r\n\r\n\t\twhile(this.root.hasChildNodes())\r\n\t\t\tthis.root.removeChild( this.root.lastChild );\r\n\r\n\t\tthis.root.className = this.className;\r\n\r\n\t\tthis.row_number = 0;\r\n\t\tthis.values = {};\r\n\t\tthis.widgets = [];\r\n\t\tthis.widgets_by_name = {};\r\n\t\tthis.sections = [];\r\n\t\tthis.current_section = null;\r\n\t\tthis._current_container = null;\r\n\t\tthis._current_container_stack = null;\r\n\t\tthis.addContainer();\r\n\t}\r\n\r\n\t/**\r\n\t* Tryes to refresh (calls on_refresh)\r\n\t* @method refresh\r\n\t*/\r\n\tInspector.prototype.refresh = function()\r\n\t{\r\n\t\tif(this.on_refresh)\r\n\t\t\tthis.on_refresh();\r\n\t}\r\n\r\n\t// Append widget to this inspector (TODO: rename to appendWidget)\r\n\t// + widget_parent\r\n\t// + replace\r\n\tInspector.prototype.append = function( widget, options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tvar root = options.widget_parent || this._current_container || this.root;\r\n\r\n\t\tif(options.replace)\r\n\t\t\toptions.replace.parentNode.replaceChild( widget, options.replace );\r\n\t\telse\r\n\t\t{\r\n\t\t\twidget.section = this.current_section;\r\n\t\t\troot.appendChild( widget );\r\n\t\t}\r\n\t}\r\n\r\n\tInspector.prototype.pushContainer = function( container )\r\n\t{\r\n\t\tif( !this._current_container_stack )\r\n\t\t\tthis._current_container_stack = [ container ];\r\n\t\telse\r\n\t\t{\r\n\t\t\tif( this._current_container_stack.indexOf( container ) != -1 )\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(\"Container already in the stack\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._current_container_stack.push( container );\r\n\t\t}\r\n\r\n\t\tthis._current_container = container;\r\n\t}\r\n\r\n\tInspector.prototype.isContainerInStack = function( container )\r\n\t{\r\n\t\tif(!this._current_container_stack)\r\n\t\t\treturn false;\r\n\t\tif( this._current_container_stack.indexOf( container ) != -1 )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tInspector.prototype.popContainer = function( container )\r\n\t{\r\n\t\tthis.row_number = 0;\r\n\t\tif(this._current_container_stack && this._current_container_stack.length)\r\n\t\t{\r\n\t\t\tif(container)\r\n\t\t\t{\r\n\t\t\t\tvar aux = this._current_container_stack.pop();\r\n\t\t\t\twhile(aux && aux != container)\r\n\t\t\t\t\taux = this._current_container_stack.pop();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis._current_container_stack.pop();\r\n\t\t\t}\r\n\t\t\tthis._current_container = this._current_container_stack[ this._current_container_stack.length - 1 ];\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis._current_container = null;\r\n\t}\r\n\r\n\tInspector.prototype.setup = function(info)\r\n\t{\r\n\t\tfor(var i in info)\r\n\t\t{\r\n\t\t\tvar w = info[i];\r\n\t\t\tvar widget = this.add( w.type, w.name, w.value, w.options );\r\n\t\t}\r\n\t}\r\n\r\n\t/**  Returns the widget given the name\r\n\t*\r\n\t* @method getWidget\r\n\t* @param {String} name the name of the widget supplied when creating it or the number of the widget\r\n\t* @return {Object} widget object\r\n\t*/\r\n\tInspector.prototype.getWidget = function( name )\r\n\t{\r\n\t\tif( name !== null && name.constructor === Number )\r\n\t\t\treturn this.widgets[ name ];\r\n\t\treturn this.widgets_by_name[ name ];\r\n\t}\r\n\r\n\t/**  Given an instance it shows all the attributes\r\n\t*\r\n\t* @method inspectInstance\r\n\t* @param {Object} instance the instance that you want to inspect, attributes will be collected from this object\r\n\t* @param {Array} properties an array with all the names of the properties you want to inspect, \r\n\t*\t\t  if not specified then it calls getProperties, othewise collect them and tries to guess the type\r\n\t* @param {Object} properties_info_example it overwrites the info about properties found in the object (in case the automaticaly guessed type is wrong)\r\n\t* @param {Array} properties_to_skip this properties will be ignored\r\n\t*/\r\n\tInspector.prototype.inspectInstance = function( instance, properties, properties_info_example, properties_to_skip ) \r\n\t{\r\n\t\tif(!instance)\r\n\t\t\treturn;\r\n\r\n\t\tif( !properties )\r\n\t\t{\tif( instance.getProperties )\r\n\t\t\t\tproperties = instance.getProperties();\r\n\t\t\telse\r\n\t\t\t\tproperties = this.collectProperties( instance );\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t}\r\n\r\n\t\tvar classObject = instance.constructor;\r\n\t\tif(!properties_info_example && classObject.properties)\r\n\t\t\tproperties_info_example = classObject.properties;\r\n\r\n\t\t//Properties info contains  name:type for every property\r\n\t\t//Must be cloned to ensure there is no overlap between widgets reusing the same container\r\n\t\tvar properties_info = {};\r\n\r\n\t\tif( instance.getInspectorProperties )\r\n\t\t\tproperties_info = instance.getInspectorProperties();\r\n\t\telse\r\n\t\t{\r\n\t\t\t//add to properties_info the ones that are not specified \r\n\t\t\tfor(var i in properties)\r\n\t\t\t{\r\n\t\t\t\tif( properties_info_example && properties_info_example[i] )\r\n\t\t\t\t{\r\n\t\t\t\t\t//clone\r\n\t\t\t\t\tproperties_info[i] = inner_clone( properties_info_example[i] );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar v = properties[i];\r\n\r\n\t\t\t\tif(classObject[\"@\" + i]) //guess from class object info\r\n\t\t\t\t{\r\n\t\t\t\t\tvar shared_options = classObject[\"@\" + i];\r\n\t\t\t\t\tif( shared_options && shared_options.widget === null)\r\n\t\t\t\t\t\tcontinue; //skip\r\n\t\t\t\t\tproperties_info[i] = inner_clone( shared_options );\r\n\t\t\t\t}\r\n\t\t\t\telse if(instance[\"@\" + i]) //guess from instance info\r\n\t\t\t\t\tproperties_info[i] = instance[\"@\" + i];\r\n\t\t\t\telse if(v === null || v === undefined) //are you sure?\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tswitch( v.constructor )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase Number: properties_info[i] = { type: \"number\", step: 0.1 }; break;\r\n\t\t\t\t\t\tcase String: properties_info[i] = { type: \"string\" }; break;\r\n\t\t\t\t\t\tcase Boolean: properties_info[i] = { type: \"boolean\" }; break;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif( v && (v.constructor === Array || v.constructor.BYTES_PER_ELEMENT) ) //Array or typed_array\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar is_number = v[0] != null && v[0].constructor === Number;\r\n\t\t\t\t\t\t\t\tswitch(v.length)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcase 2: properties_info[i] = { type: is_number ? \"vec2\" : \"Array\", step: 0.1 }; break;\r\n\t\t\t\t\t\t\t\t\tcase 3: properties_info[i] = { type: is_number ? \"vec3\" : \"Array\", step: 0.1 }; break;\r\n\t\t\t\t\t\t\t\t\tcase 4: properties_info[i] = { type: is_number ? \"vec4\" : \"Array\", step: 0.1 }; break;\r\n\t\t\t\t\t\t\t\t\tdefault: \r\n\t\t\t\t\t\t\t\t\t\tproperties_info[i] = { type: \"Array\" }; break;\r\n\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(properties_to_skip)\r\n\t\t\tfor(var i in properties_to_skip)\r\n\t\t\t\tdelete properties_info[ properties_to_skip[i] ];\r\n\r\n\t\t//allows to establish the order of the properties in the inspector\r\n\t\tif(classObject.properties_order)\r\n\t\t{\r\n\t\t\tvar sorted_properties = {};\r\n\t\t\tfor(var i in classObject.properties_order)\r\n\t\t\t{\r\n\t\t\t\tvar name = classObject.properties_order[i];\r\n\t\t\t\tif( properties_info[ name ] )\r\n\t\t\t\t\tsorted_properties[ name ] = properties_info[ name ];\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.warn(\"property not found in instance:\", name );\r\n\t\t\t}\r\n\t\t\tfor(var i in properties_info) //add the missing ones at the end (should this be optional?)\r\n\t\t\t{\r\n\t\t\t\tif( !sorted_properties[i] )\r\n\t\t\t\t\tsorted_properties[i] = properties_info[i];\r\n\t\t\t}\r\n\t\t\tproperties_info = sorted_properties;\r\n\t\t}\r\n\r\n\r\n\t\t//showAttributes doesnt return anything but just in case...\r\n\t\treturn this.showProperties( instance, properties_info );\r\n\r\n\t\t//basic cloner\r\n\t\tfunction inner_clone(original, target)\r\n\t\t{\r\n\t\t\ttarget = target || {};\r\n\t\t\tfor(var j in original)\r\n\t\t\t\ttarget[j] = original[j];\r\n\t\t\treturn target;\r\n\t\t}\r\n\t}\r\n\r\n\t/**  extract all attributes from an instance (enumerable properties that are not function and a name starting with alphabetic character)\r\n\t*\r\n\t* @method collectPropertier\r\n\t* @param {Object} instance extract enumerable and public (name do not start with '_' ) properties from an object\r\n\t* return {Object} object with \"name\" : value for every property\r\n\t**/\r\n\tInspector.prototype.collectProperties = function( instance )\r\n\t{\r\n\t\tvar properties = {};\r\n\r\n\t\tfor(var i in instance)\r\n\t\t{\r\n\t\t\tif(i[0] == \"_\" || i[0] == \"@\" || i.substr(0,6) == \"jQuery\") //skip vars with _ (they are private)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar v = instance[i];\r\n\t\t\tif ( v && v.constructor == Function && !instance.constructor[\"@\" + i])\r\n\t\t\t\tcontinue;\r\n\t\t\tproperties[i] = v;\r\n\t\t}\r\n\t\treturn properties;\r\n\t}\r\n\r\n\t/** Adds the widgets for the properties specified in properties_info of instance, it will create callback and callback_update\r\n\t*\r\n\t* @method showProperties\r\n\t* @param {Object} instance the instance that you want to inspect\r\n\t* @param {Object} properties_info object containing   \"property_name\" :{ type: value, widget:..., min:..., max:... }  or just \"property\":\"type\"\r\n\t* @param {Array} properties_to_skip this properties will be ignored\r\n\t*/\r\n\tInspector.prototype.showProperties = function( instance, properties_info ) \r\n\t{\r\n\t\t//for every enumerable property create widget\r\n\t\tfor(var i in properties_info)\r\n\t\t{\r\n\t\t\tvar varname = i;\r\n\t\t\tvar options = properties_info[i];\r\n\t\t\tif(!options)\r\n\t\t\t\tcontinue;\r\n\t\t\tif(options.constructor === String) //it allows to just specify the type\r\n\t\t\t\toptions = { type: options };\r\n\t\t\tif(options.name)\r\n\t\t\t\tvarname = options.name;\r\n\t\t\tif(!options.callback) //generate default callback to modify data\r\n\t\t\t{\r\n\t\t\t\tvar o = { instance: instance, name: varname, options: options };\r\n\t\t\t\tif(options.type == \"function\")\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toptions.callback = Inspector.assignValue.bind( o );\r\n\r\n\t\t\t}\r\n\t\t\tif(!options.callback_update) //generate default refresh\r\n\t\t\t{\r\n\t\t\t\tvar o = { instance: instance, name: varname };\r\n\t\t\t\toptions.callback_update = (function(){ return this.instance[ this.name ]; }).bind(o);\r\n\t\t\t}\r\n\r\n\t\t\toptions.instance = instance;\r\n\t\t\toptions.varname = varname;\r\n\r\n\t\t\tvar type = options.widget || options.type || \"string\";\r\n\r\n\t\t\t//used to hook stuff on special occasions\r\n\t\t\tif( this.on_addProperty )\r\n\t\t\t\tthis.on_addProperty( type, instance, varname, instance[varname], options );\r\n\t\t\tthis.add( type, varname, instance[varname], options );\r\n\t\t}\r\n\r\n\t\t//extra widgets inserted by the object (stored in the constructor)\r\n\t\tif(instance.constructor.widgets)\r\n\t\t\tfor(var i in instance.constructor.widgets)\r\n\t\t\t{\r\n\t\t\t\tvar w = instance.constructor.widgets[i];\r\n\t\t\t\tthis.add( w.widget, w.name, w.value, w );\r\n\t\t\t}\r\n\r\n\t\t//used to add extra widgets at the end\r\n\t\tif(instance.onShowProperties)\r\n\t\t\tinstance.onShowProperties(this);\r\n\t\tif(instance.constructor.onShowProperties)\r\n\t\t\tinstance.constructor.onShowProperties(instance, this);\r\n\t}\r\n\r\n\t/**\r\n\t* Tryes to assigns a value to the instance stored in this.instance\r\n\t* @method assignValue\r\n\t*/\r\n\tInspector.assignValue = function(value)\r\n\t{\r\n\t\tvar instance = this.instance;\r\n\t\tvar current_value = instance[ this.name ];\r\n\r\n\t\tif(current_value == null || value == null || this.options.type == \"enum\")\r\n\t\t\tinstance[this.name] = value;\r\n\t\telse if(typeof(current_value) == \"number\")\r\n\t\t\tinstance[this.name] = parseFloat(value);\r\n\t\telse if(typeof(current_value) == \"string\")\r\n\t\t\tinstance[this.name] = value;\r\n\t\telse if( value && value.length && current_value && current_value.length && \r\n\t\t\t( !Object.getOwnPropertyDescriptor( instance, this.name ) || !Object.getOwnPropertyDescriptor( instance, this.name ).set ) &&  //no setters\r\n\t\t\t( !Object.getOwnPropertyDescriptor( instance.__proto__, this.name ) || !Object.getOwnPropertyDescriptor( instance.__proto__, this.name ).set ) ) \r\n\t\t{\r\n\t\t\tfor(var i = 0; i < value.length; ++i)\r\n\t\t\t\tcurrent_value[i] = value[i];\r\n\t\t}\r\n\t\telse\r\n\t\t\tinstance[ this.name ] = value;\r\n\t}\r\n\r\n\t/**\r\n\t* Used by all widgets to create the container of one widget\r\n\t* @method createWidget\r\n\t* @param {string} name the string to show at the left side of the widget, if null this element wont be created and the value part will use the full width\r\n\t* @param {string} content the string with the html of the elements that conform the interactive part of the widget\r\n\t* @param {object} options some generic options that any widget could have:\r\n\t* - widget_name: the name used to store this widget in the widgets_by_name container, if omited the parameter name is used\r\n\t* - width: the width of the widget (if omited it will use the Inspector widgets_width, otherwise 100%\r\n\t* - name_width: the width of the name part of the widget, if not specified it will use Inspector name_width, otherwise css default\r\n\t* - content_width: the width of the widget content area\r\n\t* - pre_title: string to append to the left side of the name, this is helpful if you want to add icons with behaviour when clicked\r\n\t* - title: string to replace the name, sometimes you want to supply a different name than the one you want to show (this is helpful to retrieve values from an inspector)\r\n\t*/\r\n\tInspector.prototype.createWidget = function( name, content, options ) \r\n\t{\r\n\t\toptions = options || {};\r\n\t\tcontent = (content === undefined || content === null) ? \"\" : content;\r\n\t\tvar element = document.createElement(\"DIV\");\r\n\t\telement.className = \"widget \" + (options.className || \"\");\r\n\t\telement.inspector = this;\r\n\t\telement.options = options;\r\n\t\telement.name = name;\r\n\t\t\r\n\t\tthis.row_number += this.widgets_per_row;\r\n\t\tif(this.row_number % 2 == 0)\r\n\t\t\telement.className += \" even\";\r\n\r\n\t\tvar width = options.width || this.widgets_width;\r\n\t\tif( width )\r\n\t\t{\r\n\t\t\telement.style.width = LiteGUI.sizeToCSS( width );\r\n\t\t\tif(!element.style.width)\r\n\t\t\t\telement.style.width = \"calc(\" + LiteGUI.sizeToCSS( width ) + \")\";\r\n\t\t\telement.style.minWidth = \"auto\";\r\n\t\t}\r\n\t\tvar height = options.height || this.height;\r\n\t\tif( height )\r\n\t\t{\r\n\t\t\telement.style.height = LiteGUI.sizeToCSS( height );\r\n\t\t\tif(!element.style.height)\r\n\t\t\t\telement.style.height = \"calc(\" + LiteGUI.sizeToCSS( height ) + \")\";\r\n\t\t\telement.style.minHeight = \"auto\";\r\n\t\t}\r\n\r\n\t\t//store widgets \r\n\t\tthis.widgets.push( element );\r\n\t\tif(options.widget_name || name)\r\n\t\t\tthis.widgets_by_name[ options.widget_name || name ] = element;\r\n\r\n\t\tif(this.widgets_per_row != 1)\r\n\t\t{\r\n\t\t\tif(!options.width)\r\n\t\t\t\telement.style.width = (100 / this.widgets_per_row).toFixed(2) + \"%\";\r\n\t\t\telement.style.display = \"inline-block\";\r\n\t\t}\r\n\r\n\t\tvar namewidth = \"\";\r\n\t\tvar contentwidth = \"\";\r\n\t\tif( (name !== undefined && name !== null) && (this.name_width || options.name_width) && !this.one_line)\r\n\t\t{\r\n\t\t\tvar w = LiteGUI.sizeToCSS( options.name_width || this.name_width );\r\n\t\t\tnamewidth = \"style='width: calc(\" + w + \" - 0px); width: -webkit-calc(\" + w + \" - 0px); width: -moz-calc(\" + w + \" - 0px); '\"; //hack \r\n\t\t\tcontentwidth = \"style='width: calc( 100% - \" + w + \"); width: -webkit-calc(100% - \" + w + \"); width: -moz-calc( 100% - \" + w + \"); '\";\r\n\t\t}\r\n\r\n\t\tif(options.name_width)\r\n\t\t\tnamewidth = \"style='width: \"+ LiteGUI.sizeToCSS(options.name_width)+\" '\";\r\n\t\tif(options.content_width)\r\n\t\t\tcontentwidth = \"style='width: \"+ LiteGUI.sizeToCSS(options.content_width)+\" '\";\r\n\r\n\t\tvar code = \"\";\r\n\t\tvar pretitle = \"\";\r\n\t\tvar filling = this.one_line ? \"\" : \"<span class='filling'></span>\";\r\n\r\n\t\tif(options.pretitle)\r\n\t\t\tpretitle = options.pretitle;\r\n\r\n\t\tvar content_class = \"wcontent \";\r\n\t\tvar title = name;\r\n\t\tif(options.title)\r\n\t\t\ttitle = options.title;\r\n\t\tif( name === null || name === undefined )\r\n\t\t\tcontent_class += \" full\";\r\n\t\telse if(name === \"\") //three equals because 0 == \"\" \r\n\t\t\tcode += \"<span class='wname' title='\"+title+\"' \"+namewidth+\">\"+ pretitle +\"</span>\";\r\n\t\telse\r\n\t\t\tcode += \"<span class='wname' title='\"+title+\"' \"+namewidth+\">\"+ pretitle + name + filling + \"</span>\";\r\n\r\n\t\tif( content.constructor === String || content.constructor === Number || content.constructor === Boolean )\r\n\t\t\telement.innerHTML = code + \"<span class='info_content \"+content_class+\"' \"+contentwidth+\">\"+content+\"</span>\";\r\n\t\telse\r\n\t\t{\r\n\t\t\telement.innerHTML = code + \"<span class='info_content \"+content_class+\"' \"+contentwidth+\"></span>\";\r\n\t\t\tvar content_element = element.querySelector(\"span.info_content\");\r\n\t\t\tif(content_element)\r\n\t\t\t\tcontent_element.appendChild( content );\r\n\t\t}\r\n\r\n\t\telement.content = element.querySelector(\"span.info_content\");\r\n\t\telement.remove = function() { \r\n\t\t\tif( this.parentNode ) \r\n\t\t\t\tthis.parentNode.removeChild( this );\r\n\t\t};\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t//calls callback, triggers wchange, calls onchange in Inspector\r\n\tInspector.onWidgetChange = function( element, name, value, options, expand_value, event )\r\n\t{\r\n\t\tvar section = element.section; //this.current_section\r\n\r\n\t\tif(!options.skip_wchange)\r\n\t\t{\r\n\t\t\tif(section)\r\n\t\t\t\tLiteGUI.trigger( section, \"wbeforechange\", value );\r\n\t\t\tLiteGUI.trigger( element, \"wbeforechange\", value );\r\n\t\t}\r\n\r\n\t\t//assign and launch callbacks\r\n\t\tthis.values[ name ] = value;\r\n\t\tvar r = undefined;\r\n\t\tif(options.callback)\r\n\t\t{\r\n\t\t\tif(expand_value)\r\n\t\t\t\tr = options.callback.apply( element, value );\r\n\t\t\telse\r\n\t\t\t\tr = options.callback.call( element, value, event );\r\n\t\t}\r\n\r\n\t\tif(!options.skip_wchange)\r\n\t\t{\r\n\t\t\tif(section)\r\n\t\t\t\tLiteGUI.trigger( section, \"wchange\", value, element );\r\n\t\t\tLiteGUI.trigger( element, \"wchange\", value, element );\r\n\t\t}\r\n\r\n\t\tif(this.onchange) \r\n\t\t\tthis.onchange(name, value, element);\r\n\t\treturn r;\r\n\t}\r\n\r\n\t//must be lowercase\r\n\tInspector.widget_constructors = {\r\n\t\t\"null\": 'addNull', //use for special cases\r\n\t\ttitle: 'addTitle',\r\n\t\tinfo: 'addInfo',\r\n\t\t\"default\": 'addDefault', //it guesses\r\n\t\tnumber: 'addNumber',\r\n\t\tslider: 'addSlider',\r\n\t\tstring: 'addString',\r\n\t\ttext: 'addString',\r\n\t\ttextarea: 'addTextarea',\r\n\t\tcolor: 'addColor',\r\n\t\t\"boolean\": 'addCheckbox', \r\n\t\tcheckbox: 'addCheckbox',\r\n\t\ticon: 'addIcon',\r\n\t\tvec2: 'addVector2',\r\n\t\tvector2: 'addVector2',\r\n\t\tvec3: 'addVector3',\r\n\t\tvector3: 'addVector3',\r\n\t\tvec4: 'addVector4',\r\n\t\tvector4: 'addVector4',\r\n\t\t\"enum\": 'addCombo',\r\n\t\tdropdown: 'addCombo',\r\n\t\tcombo: 'addCombo',\r\n\t\tbutton: 'addButton',\r\n\t\tbuttons: 'addButtons',\r\n\t\tfile: 'addFile',\r\n\t\tline: 'addLine',\r\n\t\tlist: 'addList',\r\n\t\ttree: 'addTree',\r\n\t\tdatatree: 'addDataTree',\r\n\t\tpad: 'addPad',\r\n\t\tarray: 'addArray',\r\n\t\tseparator: 'addSeparator'\r\n\t};\r\n\r\n\r\n\tInspector.registerWidget = function(name, callback)\r\n\t{\r\n\t\tvar func_name = \"add\" + name.charAt(0).toUpperCase() + name.slice(1);\r\n\t\tInspector.prototype[func_name] = callback;\r\n\t\tInspector.widget_constructors[name] = func_name;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* Adds a widgete to the inspector, its a way to provide the widget type from a string\r\n\t* @method add\r\n\t* @param {string} type string specifying the name of the widget to use (check Inspector.widget_constructors for a complete list)\r\n\t* @param {string} name the string to show at the left side of the widget, if null this element wont be created and the value part will use the full width\r\n\t* @param {string} value the value to assign to the widget\r\n\t* @param {object} options: some generic options that any widget could have:\r\n\t* - type: overwrites the type\r\n\t* - callback: function to call when the user interacts with the widget and changes the value\r\n\t* [For a bigger list check createWidget and every widget in particular]\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.add = function( type, name, value, options )\r\n\t{\r\n\t\tif(!type)\r\n\t\t\tthrow(\"Inspector: no type specified\");\r\n\r\n\t\t//type could be an object with every parameter contained inside\r\n\t\tif( arguments.length == 1 && typeof(type) == \"object\" )\r\n\t\t{\r\n\t\t\toptions = type;\r\n\t\t\ttype = options.type;\r\n\t\t\tname = options.name;\r\n\t\t\tvalue = options.value;\r\n\t\t}\r\n\r\n\t\tvar func = LiteGUI.Inspector.widget_constructors[type.toLowerCase()];\r\n\t\tif(!func){\r\n\t\t\tconsole.warn(\"LiteGUI.Inspector do not have a widget called\",type);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( func.constructor === String )\r\n\t\t\tfunc = LiteGUI.Inspector.prototype[func];\r\n\t\tif( !func )\r\n\t\t\treturn;\r\n\t\tif( func.constructor !== Function )\r\n\t\t\treturn;\r\n\r\n\t\tif( options && options.constructor === Function )\r\n\t\t\toptions = { callback: options };\r\n\t\t\r\n\t\treturn func.call( this, name,value, options );\r\n\t}\r\n\r\n\tInspector.prototype.getValue = function(name)\r\n\t{\r\n\t\treturn this.values[name];\r\n\t}\r\n\r\n\r\n\tInspector.prototype.applyOptions = function( element, options )\r\n\t{\r\n\t\tif(!element || !options)\r\n\t\t\treturn;\r\n\r\n\t\tif(options.className)\r\n\t\t\telement.className += \" \" + options.className;\r\n\t\tif(options.id)\r\n\t\t\telement.id = options.id;\r\n\t\tif(options.width)\r\n\t\t\telement.style.width = LiteGUI.sizeToCSS( options.width );\r\n\t\tif(options.height)\r\n\t\t\telement.style.height = LiteGUI.sizeToCSS( options.height );\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* Creates a line\r\n\t* @method addSeparator\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addSeparator = function()\r\n\t{\r\n\t\tvar element = document.createElement(\"DIV\");\r\n\t\telement.className = \"separator\";\r\n\t\tthis.append(element);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t//used when you want to skip the widget of an object\r\n\tInspector.prototype.addNull = function(name,value, options)\r\n\t{\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//used when you dont know which widget to use\r\n\tInspector.prototype.addDefault = function( name, value, options)\r\n\t{\r\n\t\tif(value === null || value === undefined) //can we guess it from the current value?\r\n\t\t\treturn null;\r\n\r\n\t\tif( value.constructor === Boolean )\r\n\t\t\treturn this.addCheckbox( name, value, options );\r\n\t\telse if( value.constructor === String )\r\n\t\t\treturn this.addString( name, value, options );\r\n\t\telse if( value.constructor === Number )\r\n\t\t\treturn this.addNumber( name, value, options );\r\n\t\telse if( value.length == 4)\r\n\t\t\treturn this.addVector4( name, value, options );\r\n\t\telse if( value.length == 3)\r\n\t\t\treturn this.addVector3( name, value, options );\r\n\t\telse if( value.length == 2)\r\n\t\t\treturn this.addVector2( name, value, options );\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* Widget to edit strings\r\n\t* @method addString\r\n\t* @param {string} name \r\n\t* @param {string} value\r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - focus: true if you want the cursor to be here\r\n\t* - password: true if you want to hide the string \r\n\t* - immediate: calls the callback once every keystroke\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the widget changes\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addString = function(name,value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\r\n\t\tvar inputtype = \"text\";\r\n\t\tif(options.password) \r\n\t\t\tinputtype = \"password\";\r\n\t\tvar focus = options.focus ? \"autofocus\" : \"\";\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield full \"+(options.disabled?\"disabled\":\"\")+\"'><input type='\"+inputtype+\"' tabIndex='\"+this.tab_index+\"' \"+focus+\" class='text string' value='\"+value+\"' \"+(options.disabled?\"disabled\":\"\")+\"/></span>\", options);\r\n\t\tvar input = element.querySelector(\".wcontent input\");\r\n\r\n\t\tif(options.placeHolder)\r\n\t\t\tinput.setAttribute(\"placeHolder\",options.placeHolder);\r\n\r\n\t\tif(options.align == \"right\")\r\n\t\t{\r\n\t\t\tinput.style.direction = \"rtl\";\r\n\t\t\t//input.style.textAlign = \"right\";\r\n\t\t}\r\n\r\n\t\tinput.addEventListener( options.immediate ? \"keyup\" : \"change\", function(e) { \r\n\t\t\tvar r = Inspector.onWidgetChange.call(that, element, name, e.target.value, options);\r\n\t\t\tif(r !== undefined)\r\n\t\t\t\tthis.value = r;\r\n\t\t});\r\n\r\n\t\tif(options.callback_enter)\r\n\t\t\tinput.addEventListener( \"keydown\" , function(e) { \r\n\t\t\t\tif(e.keyCode == 13)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar r = Inspector.onWidgetChange.call(that, element, name, e.target.value, options);\r\n\t\t\t\t\toptions.callback_enter();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\tthis.tab_index += 1;\r\n\r\n\t\telement.setIcon = function(img)\r\n\t\t{\r\n\t\t\tif(!img)\r\n\t\t\t{\r\n\t\t\t\tinput.style.background = \"\";\r\n\t\t\t\tinput.style.paddingLeft = \"\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinput.style.background = \"transparent url('\"+img+\"') no-repeat left 4px center\";\r\n\t\t\t\tinput.style.paddingLeft = \"1.7em\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(options.icon)\r\n\t\t\telement.setIcon( options.icon );\r\n\r\n\t\telement.setValue = function(v, skip_event) { \r\n\t\t\tif(v === undefined )\r\n\t\t\t\treturn;\r\n\t\t\tif(v === input.value)\r\n\t\t\t\treturn;\r\n\t\t\tinput.value = v; \r\n\t\t\tif(!skip_event)\r\n\t\t\t\tLiteGUI.trigger(input, \"change\" );\r\n\t\t};\r\n\t\telement.getValue = function() { return input.value; };\r\n\t\telement.focus = function() { this.querySelector(\"input\").focus(); };\r\n\t\telement.disable = function() { input.disabled = true; };\r\n\t\telement.enable = function() { input.disabled = false; };\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit strings, but it adds a button behind (useful to search values somewhere in case the user do not remember the name)\r\n\t* @method addStringButton\r\n\t* @param {string} name \r\n\t* @param {string} value the string to show\r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - disabled: shows the widget disabled\r\n\t* - button: string to show inside the button, default is \"...\"\r\n\t* - callback: function to call when the string is edited\r\n\t* - callback_button: function to call when the button is pressed\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addStringButton = function( name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tif(value === undefined)\r\n\t\t\tvalue = \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget( name, \"<span class='inputfield button'><input type='text' tabIndex='\"+this.tab_index+\"' class='text string' value='' \"+(options.disabled?\"disabled\":\"\")+\"/></span><button class='micro'>\"+(options.button || \"...\")+\"</button>\", options);\r\n\t\tvar input = element.querySelector(\".wcontent input\");\r\n\t\tinput.value = value;\r\n\t\tinput.addEventListener(\"change\", function(e) { \r\n\t\t\tvar r = Inspector.onWidgetChange.call(that,element,name,e.target.value, options);\r\n\t\t\tif(r !== undefined)\r\n\t\t\t\tthis.value = r;\r\n\t\t});\r\n\r\n\t\tif( options.disabled )\r\n\t\t\tinput.setAttribute(\"disabled\",\"disabled\");\r\n\r\n\t\telement.setIcon = function(img)\r\n\t\t{\r\n\t\t\tif(!img)\r\n\t\t\t{\r\n\t\t\t\tinput.style.background = \"\";\r\n\t\t\t\tinput.style.paddingLeft = \"\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinput.style.background = \"transparent url('\"+img+\"') no-repeat left 4px center\";\r\n\t\t\t\tinput.style.paddingLeft = \"1.7em\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(options.icon)\r\n\t\t\telement.setIcon( options.icon );\r\n\r\n\t\tvar button = element.querySelector(\".wcontent button\");\r\n\t\tbutton.addEventListener(\"click\", function(e) { \r\n\t\t\tif(options.callback_button)\r\n\t\t\t\toptions.callback_button.call( element, input.value, e );\r\n\t\t});\r\n\r\n\t\tif(options.button_width)\r\n\t\t{\r\n\t\t\tbutton.style.width = LiteGUI.sizeToCSS( options.button_width );\r\n\t\t\tvar inputfield = element.querySelector(\".inputfield\");\r\n\t\t\tinputfield.style.width = \"calc( 100% - \" + button.style.width + \" - 6px)\";\r\n\t\t}\r\n\r\n\r\n\t\tthis.tab_index += 1;\r\n\t\tthis.append(element,options);\r\n\t\telement.setValue = function(v, skip_event) { \r\n\t\t\tinput.value = v;\r\n\t\t\tif(!skip_event)\r\n\t\t\t\tLiteGUI.trigger(input, \"change\" );\r\n\t\t};\r\n\t\telement.disable = function() { input.disabled = true; button.disabled = true; };\r\n\t\telement.enable = function() { input.disabled = false; button.disabled = false; };\r\n\t\telement.getValue = function() { return input.value; };\r\n\t\telement.focus = function() { LiteGUI.focus(input); };\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit strings with multiline support\r\n\t* @method addTextarea\r\n\t* @param {string} name \r\n\t* @param {string} value\r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - focus: true if you want the cursor to be here\r\n\t* - password: true if you want to hide the string \r\n\t* - immediate: calls the callback once every keystroke\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the widget changes\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addTextarea = function(name,value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield textarea \"+(options.disabled?\"disabled\":\"\")+\"'><textarea tabIndex='\"+this.tab_index+\"' \"+(options.disabled?\"disabled\":\"\")+\"></textarea></span>\", options);\r\n\t\tthis.tab_index++;\r\n\t\tvar textarea = element.querySelector(\".wcontent textarea\");\r\n\t\ttextarea.value = value;\r\n\t\ttextarea.addEventListener( options.immediate ? \"keyup\" : \"change\", function(e) { \r\n\t\t\tInspector.onWidgetChange.call(that,element,name,e.target.value, options, false, e);\r\n\t\t});\r\n\t\tif(options.callback_keydown)\r\n\t\t\ttextarea.addEventListener( \"keydown\", options.callback_keydown );\r\n\r\n\t\tif(options.height)\r\n\t\t\ttextarea.style.height = \"calc( \" + LiteGUI.sizeToCSS( options.height ) + \" - 5px )\";\r\n\t\t\t//textarea.style.height = LiteGUI.sizeToCSS( options.height );\r\n\t\tthis.append(element,options);\r\n\t\telement.setValue = function(v, skip_event) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tif(v == textarea.value)\r\n\t\t\t\treturn;\r\n\t\t\tvalue = v;\r\n\t\t\ttextarea.value = v;\r\n\t\t\tif(!skip_event)\r\n\t\t\t\tLiteGUI.trigger( textarea,\"change\" );\r\n\t\t};\r\n\t\telement.getValue = function(v) { \r\n\t\t\treturn textarea.value;\r\n\t\t}\r\n\t\telement.focus = function() { LiteGUI.focus(textarea); };\r\n\t\telement.disable = function() { textarea.disabled = true;};\r\n\t\telement.enable = function() { textarea.disabled = false;};\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit numbers (it adds a dragging mini widget in the right side)\r\n\t* @method addNumber\r\n\t* @param {string} name \r\n\t* @param {number} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the string is edited\r\n\t* - precision: number of digits after the colon\r\n\t* - units: string to show after the number\r\n\t* - min: minimum value accepted\r\n\t* - max: maximum value accepted\r\n\t* - step: increments when draggin the mouse (default is 0.1)\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addNumber = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || 0;\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\r\n\t\tvar element = this.createWidget(name,\"\", options);\r\n\t\tthis.append(element,options);\r\n\r\n\t\toptions.extraclass = \"full\";\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\t//options.dragger_class = \"full\";\r\n\t\toptions.full = true;\r\n\t\toptions.precision = options.precision !== undefined ? options.precision : 2;\r\n\t\toptions.step = options.step === undefined ? (options.precision == 0 ? 1 : 0.1) : options.step;\r\n\r\n\t\tthis.tab_index++;\r\n\t\t\r\n\t\tvar dragger = null;\r\n\t\t\r\n\t\tdragger = new LiteGUI.Dragger(value, options);\r\n\t\tdragger.root.style.width = \"calc( 100% - 1px )\";\r\n\t\telement.querySelector(\".wcontent\").appendChild( dragger.root );\r\n\t\tdragger.root.addEventListener(\"start_dragging\", inner_before_change.bind(options) );\r\n\t\telement.dragger = dragger;\r\n\r\n\t\tif( options.disabled )\r\n\t\t\tdragger.input.setAttribute(\"disabled\",\"disabled\");\r\n\r\n\t\tfunction inner_before_change(e)\r\n\t\t{\r\n\t\t\tif(this.callback_before) \r\n\t\t\t\tthis.callback_before.call(element);\r\n\t\t}\r\n\r\n\t\tvar input = element.querySelector(\"input\");\r\n\t\t\r\n\t\tinput.addEventListener(\"change\", function(e) { \r\n\r\n\t\t\tLiteGUI.trigger( element, \"wbeforechange\", e.target.value );\r\n\r\n\t\t\tthat.values[name] = e.target.value;\r\n\t\t\t//Inspector.onWidgetChange.call(that,this,name,ret, options);\r\n\r\n\t\t\tif(options.callback)\r\n\t\t\t{\r\n\t\t\t\tvar ret = options.callback.call( element, parseFloat( e.target.value) ); \r\n\t\t\t\tif( typeof(ret) == \"number\")\r\n\t\t\t\t\tthis.value = ret;\r\n\t\t\t}\r\n\t\t\tLiteGUI.trigger( element, \"wchange\", e.target.value );\r\n\t\t\tif(that.onchange)\r\n\t\t\t\tthat.onchange(name,e.target.value,element);\r\n\t\t});\r\n\r\n\t\telement.setValue = function( v, skip_event) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tv = parseFloat(v);\r\n\t\t\tif(options.precision)\r\n\t\t\t\tv = v.toFixed( options.precision );\r\n\t\t\tv += (options.units || \"\");\r\n\t\t\tif(input.value == v)\r\n\t\t\t\treturn;\r\n\t\t\tinput.value = v;\r\n\t\t\tif(!skip_event)\r\n\t\t\t\tLiteGUI.trigger( input,\"change\" );\r\n\t\t};\r\n\r\n\t\telement.setRange = function(min,max) { dragger.setRange(min,max); }\r\n\t\telement.getValue = function() { return parseFloat( input.value ); };\r\n\t\telement.focus = function() { LiteGUI.focus(input); };\r\n\t\telement.disable = function() { input.disabled = true;};\r\n\t\telement.enable = function() { input.disabled = false;};\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit two numbers (it adds a dragging mini widget in the right side)\r\n\t* @method addVector2\r\n\t* @param {string} name \r\n\t* @param {vec2} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - callback: function to call once the value changes\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the string is edited\r\n\t* - precision: number of digits after the colon\r\n\t* - units: string to show after the number\r\n\t* - min: minimum value accepted\r\n\t* - max: maximum value accepted\r\n\t* - step: increments when draggin the mouse (default is 0.1)\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addVector2 = function(name,value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\t\tif(!options.step)\r\n\t\t\toptions.step = 0.1;\r\n\r\n\t\tvalue = value || [0,0];\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget(name,\"\", options);\r\n\r\n\t\toptions.step = options.step ||0.1;\r\n\t\t//options.dragger_class = \"medium\";\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\toptions.full = true;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar wcontent = element.querySelector(\".wcontent\");\r\n\r\n\t\tvar dragger1 = new LiteGUI.Dragger(value[0], options);\r\n\t\tdragger1.root.style.marginLeft = 0;\r\n\t\tdragger1.root.style.width = \"calc( 50% - 1px )\";\r\n\t\twcontent.appendChild( dragger1.root );\r\n\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar dragger2 = new LiteGUI.Dragger(value[1], options);\r\n\t\tdragger2.root.style.width = \"calc( 50% - 1px )\";\r\n\t\twcontent.appendChild( dragger2.root );\r\n\t\telement.draggers = [dragger1,dragger2];\r\n\r\n\t\tLiteGUI.bind( dragger1.root ,\"start_dragging\", inner_before_change.bind(options) );\r\n\t\tLiteGUI.bind( dragger2.root, \"start_dragging\", inner_before_change.bind(options) );\r\n\r\n\t\tfunction inner_before_change(e)\r\n\t\t{\r\n\t\t\tif(this.callback_before) this.callback_before(e);\r\n\t\t}\r\n\r\n\t\tvar inputs = element.querySelectorAll(\"input\");\r\n\t\tfor(var i = 0; i < inputs.length; ++i)\r\n\t\t\tinputs[i].addEventListener( \"change\" , function(e) { \r\n\r\n\t\t\t//gather all three parameters\r\n\t\t\tvar r = [];\r\n\t\t\tvar elems = inputs;\r\n\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\tr.push( parseFloat( elems[i].value ) );\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wbeforechange\", [r] );\r\n\r\n\t\t\tthat.values[name] = r;\r\n\r\n\t\t\tif(options.callback)\r\n\t\t\t{\r\n\t\t\t\tvar new_val = options.callback.call( element, r ); \r\n\t\t\t\t\r\n\t\t\t\tif(typeof(new_val) == \"object\" && new_val.length >= 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\t\t\telems[i].value = new_val[i];\r\n\t\t\t\t\tr = new_val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wchange\", [r] );\r\n\t\t\tif(that.onchange)\r\n\t\t\t\tthat.onchange(name,r,element);\r\n\t\t});\r\n\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.setValue = function( v, skip_event) { \r\n\t\t\tif(!v)\r\n\t\t\t\treturn;\r\n\t\t\tif(dragger1.getValue() != v[0])\r\n\t\t\t\tdragger1.setValue(v[0],true);\r\n\t\t\tif(dragger2.getValue() != v[1])\r\n\t\t\t\tdragger2.setValue(v[1],skip_event); //last one triggers the event\r\n\t\t}\r\n\t\telement.setRange = function(min,max) { dragger1.setRange(min,max); dragger2.setRange(min,max); }\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit two numbers (it adds a dragging mini widget in the right side)\r\n\t* @method addVector3\r\n\t* @param {string} name \r\n\t* @param {vec3} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - callback: function to call once the value changes\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the string is edited\r\n\t* - precision: number of digits after the colon\r\n\t* - units: string to show after the number\r\n\t* - min: minimum value accepted\r\n\t* - max: maximum value accepted\r\n\t* - step: increments when draggin the mouse (default is 0.1)\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addVector3 = function(name,value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\t\tif(!options.step)\r\n\t\t\toptions.step = 0.1;\r\n\r\n\t\tvalue = value || [0,0,0];\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget(name,\"\", options);\r\n\r\n\t\toptions.step = options.step || 0.1;\r\n\t\t//options.dragger_class = \"mini\";\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\toptions.full = true;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar dragger1 = new LiteGUI.Dragger(value[0], options );\r\n\t\tdragger1.root.style.marginLeft = 0;\r\n\t\tdragger1.root.style.width = \"calc( 33% - 1px )\";\r\n\t\telement.querySelector(\".wcontent\").appendChild( dragger1.root );\r\n\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar dragger2 = new LiteGUI.Dragger(value[1], options );\r\n\t\tdragger2.root.style.width = \"calc( 33% - 1px )\";\r\n\t\telement.querySelector(\".wcontent\").appendChild( dragger2.root );\r\n\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar dragger3 = new LiteGUI.Dragger(value[2], options );\r\n\t\tdragger3.root.style.width = \"calc( 33% - 1px )\";\r\n\t\telement.querySelector(\".wcontent\").appendChild( dragger3.root );\r\n\t\telement.draggers = [dragger1,dragger2,dragger3];\r\n\r\n\t\tdragger1.root.addEventListener( \"start_dragging\", inner_before_change.bind(options) );\r\n\t\tdragger2.root.addEventListener( \"start_dragging\", inner_before_change.bind(options) );\r\n\t\tdragger3.root.addEventListener( \"start_dragging\", inner_before_change.bind(options) );\r\n\r\n\t\tfunction inner_before_change(e)\r\n\t\t{\r\n\t\t\tif(this.callback_before) this.callback_before();\r\n\t\t}\r\n\r\n\t\tvar inputs = element.querySelectorAll(\"input\");\r\n\t\tfor(var i = 0; i < inputs.length; ++i)\r\n\t\t\tinputs[i].addEventListener(\"change\", function(e) { \r\n\t\t\t//gather all three parameters\r\n\t\t\tvar r = [];\r\n\t\t\tvar elems = inputs;\r\n\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\tr.push( parseFloat( elems[i].value ) );\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wbeforechange\", [r] );\r\n\r\n\t\t\tthat.values[name] = r;\r\n\r\n\t\t\tif(options.callback)\r\n\t\t\t{\r\n\t\t\t\tvar new_val = options.callback.call( element,r ); \r\n\t\t\t\t\r\n\t\t\t\tif(typeof(new_val) == \"object\" && new_val.length >= 3)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\t\t\telems[i].value = new_val[i];\r\n\t\t\t\t\tr = new_val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wchange\",[r]);\r\n\t\t\tif(that.onchange)\r\n\t\t\t\tthat.onchange(name,r,element);\r\n\t\t});\r\n\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.setValue = function( v, skip_event ) { \r\n\t\t\tif(!v)\r\n\t\t\t\treturn;\r\n\t\t\tdragger1.setValue(v[0],true);\r\n\t\t\tdragger2.setValue(v[1],true);\r\n\t\t\tdragger3.setValue(v[2],skip_event); //last triggers\r\n\t\t}\r\n\t\telement.setRange = function(min,max) { dragger1.setRange(min,max); dragger2.setRange(min,max); dragger3.setRange(min,max); }\r\n\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit two numbers (it adds a dragging mini widget in the right side)\r\n\t* @method addVector4\r\n\t* @param {string} name \r\n\t* @param {vec4} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - callback: function to call once the value changes\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the string is edited\r\n\t* - precision: number of digits after the colon\r\n\t* - units: string to show after the number\r\n\t* - min: minimum value accepted\r\n\t* - max: maximum value accepted\r\n\t* - step: increments when draggin the mouse (default is 0.1)\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addVector4 = function(name,value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\t\tif(!options.step)\r\n\t\t\toptions.step = 0.1;\r\n\r\n\t\tvalue = value || [0,0,0];\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget( name,\"\", options );\r\n\r\n\t\toptions.step = options.step || 0.1;\r\n\t\t//options.dragger_class = \"mini\";\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\toptions.full = true;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar draggers = element.draggers = [];\r\n\r\n\t\tfor(var i = 0; i < 4; i++)\r\n\t\t{\r\n\t\t\tvar dragger = new LiteGUI.Dragger(value[i], options );\r\n\t\t\tdragger.root.style.marginLeft = 0;\r\n\t\t\tdragger.root.style.width = \"calc( 25% - 1px )\";\r\n\t\t\telement.querySelector(\".wcontent\").appendChild( dragger.root );\r\n\t\t\toptions.tab_index = this.tab_index;\r\n\t\t\tthis.tab_index++;\r\n\t\t\tdragger.root.addEventListener(\"start_dragging\", inner_before_change.bind(options) );\r\n\t\t\tdraggers.push(dragger);\r\n\t\t}\r\n\r\n\t\tfunction inner_before_change(e)\r\n\t\t{\r\n\t\t\tif(this.callback_before)\r\n\t\t\t\tthis.callback_before();\r\n\t\t}\r\n\r\n\t\tvar inputs = element.querySelectorAll(\"input\");\r\n\t\tfor(var i = 0; i < inputs.length; ++i)\r\n\t\t\tinputs[i].addEventListener(\"change\", function(e) { \r\n\t\t\t//gather all parameters\r\n\t\t\tvar r = [];\r\n\t\t\tvar elems = inputs;\r\n\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\tr.push( parseFloat( elems[i].value ) );\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wbeforechange\", [r] );\r\n\r\n\t\t\tthat.values[name] = r;\r\n\r\n\t\t\tif(options.callback)\r\n\t\t\t{\r\n\t\t\t\tvar new_val = options.callback.call( element, r ); \r\n\t\t\t\tif(typeof(new_val) == \"object\" && new_val.length >= 4)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\t\t\telems[i].value = new_val[i];\r\n\t\t\t\t\tr = new_val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wchange\",[r]);\r\n\t\t\tif(that.onchange)\r\n\t\t\t\tthat.onchange(name,r,element);\r\n\t\t});\r\n\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.setValue = function( v, skip_event ) { \r\n\t\t\tif(!v)\r\n\t\t\t\treturn;\r\n\t\t\tfor(var i = 0; i < draggers.length; i++)\r\n\t\t\t\tdraggers[i].setValue(v[i],skip_event);\r\n\t\t}\r\n\t\telement.setRange = function(min,max) { for(var i in draggers) { draggers[i].setRange(min,max); } }\r\n\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit two numbers using a rectangular pad where you can drag horizontaly and verticaly a handler\r\n\t* @method addPad\r\n\t* @param {string} name \r\n\t* @param {vec2} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - callback: function to call once the value changes\r\n\t* - disabled: shows the widget disabled\r\n\t* - callback: function to call when the string is edited\r\n\t* - precision: number of digits after the colon\r\n\t* - units: string to show after the number\r\n\t* - min: minimum value accepted\r\n\t* - minx: minimum x value accepted\r\n\t* - miny: minimum y value accepted\r\n\t* - max: maximum value accepted\r\n\t* - maxx: maximum x value accepted\r\n\t* - maxy: maximum y value accepted\r\n\t* - step: increments when draggin the mouse (default is 0.1)\r\n\t* - background: url of image to use as background (it will be streched)\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addPad = function(name,value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\t\tif(!options.step)\r\n\t\t\toptions.step = 0.1;\r\n\r\n\t\tvalue = value || [0,0];\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget(name,\"\", options);\r\n\r\n\t\toptions.step = options.step ||0.1;\r\n\t\t//options.dragger_class = \"medium\";\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\toptions.full = true;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar minx = options.minx || options.min || 0;\r\n\t\tvar miny = options.miny || options.min || 0;\r\n\t\tvar maxx = options.maxx || options.max || 1;\r\n\t\tvar maxy = options.maxy || options.max || 1;\r\n\r\n\t\tvar wcontent = element.querySelector(\".wcontent\");\r\n\r\n\t\tvar pad = document.createElement(\"div\");\r\n\t\tpad.className = \"litepad\";\r\n\t\twcontent.appendChild( pad );\r\n\t\tpad.style.width = \"100%\";\r\n\t\tpad.style.height = \"100px\";\r\n\t\tif (options.background)\r\n\t\t{\r\n\t\t\tpad.style.backgroundImage = \"url('\" + options.background + \"')\";\r\n\t\t\tpad.style.backgroundSize = \"100%\";\r\n\t\t\tpad.style.backgroundRepeat = \"no-repeat\";\r\n\t\t}\r\n\r\n\t\tvar handler = document.createElement(\"div\");\r\n\t\thandler.className = \"litepad-handler\";\r\n\t\tpad.appendChild( handler );\r\n\r\n\t\toptions.tab_index = this.tab_index;\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar dragging = false;\r\n\r\n\t\tpad._onMouseEvent = function(e)\r\n\t\t{\r\n\t\t\tvar b = pad.getBoundingClientRect();\r\n\t\t\te.mousex = e.pageX - b.left;\r\n\t\t\te.mousey = e.pageY - b.top;\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\tif(e.type == \"mousedown\")\r\n\t\t\t{\r\n\t\t\t\tdocument.body.addEventListener(\"mousemove\", pad._onMouseEvent );\r\n\t\t\t\tdocument.body.addEventListener(\"mouseup\", pad._onMouseEvent );\r\n\t\t\t\tdragging = true;\r\n\t\t\t}\r\n\t\t\telse if(e.type == \"mousemove\")\r\n\t\t\t{\r\n\t\t\t\tvar x = e.mousex / (b.width);\r\n\t\t\t\tvar y = e.mousey / (b.height);\r\n\r\n\t\t\t\tx = x * (maxx - minx) + minx;\r\n\t\t\t\ty = y * (maxy - miny) + minx;\r\n\r\n\t\t\t\tvar r = [x,y];\r\n\r\n\t\t\t\tLiteGUI.trigger( element, \"wbeforechange\", [r] );\r\n\r\n\t\t\t\telement.setValue(r);\r\n\r\n\t\t\t\tif(options.callback)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar new_val = options.callback.call( element, r ); \r\n\t\t\t\t\tif( new_val && new_val.length >= 2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor(var i = 0; i < elems.length; i++)\r\n\t\t\t\t\t\t\telement.setValue( new_val );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tLiteGUI.trigger( element, \"wchange\",[r]);\r\n\t\t\t\tif(that.onchange)\r\n\t\t\t\t\tthat.onchange(name,r,element);\r\n\t\t\t}\r\n\t\t\telse if(e.type == \"mouseup\")\r\n\t\t\t{\r\n\t\t\t\tdragging = false;\r\n\t\t\t\tdocument.body.removeEventListener(\"mousemove\", pad._onMouseEvent );\r\n\t\t\t\tdocument.body.removeEventListener(\"mouseup\", pad._onMouseEvent );\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tpad.addEventListener(\"mousedown\", pad._onMouseEvent );\r\n\r\n\t\telement.setValue = function(v,skip_event)\r\n\t\t{\r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar b = pad.getBoundingClientRect();\r\n\t\t\tvar x = (v[0] - minx) / (maxx - minx);\r\n\t\t\tvar y = (v[1] - miny) / (maxy - miny);\r\n\t\t\tx = Math.max( 0, Math.min( x, 1 ) ); //clamp\r\n\t\t\ty = Math.max( 0, Math.min( y, 1 ) );\r\n\r\n\t\t\t//handler.style.left = (x * (b.width - 10)) + \"px\";\r\n\t\t\t//handler.style.top = (y * (b.height - 10)) + \"px\";\r\n\t\t\tvar w = ((b.width - 10) / b.width) * 100;\r\n\t\t\tvar h = ((b.height - 10) / b.height) * 100;\r\n\t\t\thandler.style.left = (x * w).toFixed(1) + \"%\";\r\n\t\t\thandler.style.top = (y * h).toFixed(1) + \"%\";\r\n\r\n\t\t\t//if(!skip_event)\r\n\t\t\t//\tLiteGUI.trigger(this,\"change\");\r\n\t\t}\r\n\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.setValue( value );\r\n\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to show plain information in HTML (not interactive)\r\n\t* @method addInfo\r\n\t* @param {string} name \r\n\t* @param {string} value HTML code\r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - className: to specify a classname of the content\r\n\t* - height: to specify a height\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addInfo = function( name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = (value === undefined || value === null) ? \"\" : value;\r\n\t\tvar element = null;\r\n\t\tif(name != null)\r\n\t\t\telement = this.createWidget( name, value, options);\r\n\t\telse\r\n\t\t{\r\n\t\t\telement = document.createElement(\"div\");\r\n\t\t\tif(options.className)\r\n\t\t\t\telement.className = options.className;\r\n\t\t\tif(value.nodeName !== undefined)\r\n\t\t\t{\r\n\t\t\t\telement.innerHTML = \"<span class='winfo'></span>\";\r\n\t\t\t\telement.childNodes[0].appendChild( value );\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telement.innerHTML = \"<span class='winfo'>\"+value+\"</span>\";\r\n\t\t}\r\n\r\n\t\tvar info = element.querySelector(\".winfo\") || element.querySelector(\".wcontent\");\r\n\r\n\t\tif(options.callback)\r\n\t\t\telement.addEventListener(\"click\",options.callback.bind(element));\r\n\r\n\t\telement.setValue = function(v) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tif(info)\r\n\t\t\t\tinfo.innerHTML = v;\r\n\t\t};\r\n\r\n\t\tvar content = element.querySelector(\"span.info_content\");\r\n\t\tif(!content)\r\n\t\t\tcontent = element.querySelector(\".winfo\");\r\n\r\n\t\tif(options.width)\r\n\t\t{\r\n\t\t\telement.style.width = LiteGUI.sizeToCSS(options.width);\r\n\t\t\telement.style.display = \"inline-block\";\r\n\t\t\tif(!name)\r\n\t\t\t\tinfo.style.margin = \"2px\";\r\n\t\t}\r\n\t\tif(options.height)\r\n\t\t{\r\n\t\t\tcontent.style.height = LiteGUI.sizeToCSS(options.height);\r\n\t\t\tcontent.style.overflow = \"auto\";\r\n\t\t}\r\n\r\n\t\telement.scrollToBottom = function(){\r\n\t\t\tcontent.scrollTop = content.offsetTop;\r\n\t\t}\r\n\r\n\t\telement.add = function(e)\r\n\t\t{\r\n\t\t\tcontent.appendChild(e);\r\n\t\t}\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit a number using a slider\r\n\t* @method addSlider\r\n\t* @param {string} name \r\n\t* @param {number} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - min: min value\r\n\t* - max: max value\r\n\t* - step: increments when dragging\r\n\t* - callback: function to call once the value changes\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addSlider = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tif(options.min === undefined)\r\n\t\t\toptions.min = 0;\r\n\r\n\t\tif(options.max === undefined)\r\n\t\t\toptions.max = 1;\r\n\r\n\t\tif(options.step === undefined)\r\n\t\t\toptions.step = 0.01;\r\n\r\n\t\tvar that = this;\r\n\t\tif(value === undefined || value === null)\r\n\t\t\tvalue = 0;\r\n\t\tthis.values[name] = value;\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield full'>\\\r\n\t\t\t\t\t<input tabIndex='\"+this.tab_index+\"' type='text' class='slider-text fixed liteslider-value' value='' /><span class='slider-container'></span></span>\", options);\r\n\r\n\t\tvar slider_container = element.querySelector(\".slider-container\");\r\n\r\n\t\tvar slider = new LiteGUI.Slider(value,options);\r\n\t\tslider_container.appendChild(slider.root);\r\n\r\n\t\t//Text change -> update slider\r\n\t\tvar skip_change = false; //used to avoid recursive loops\r\n\t\tvar text_input = element.querySelector(\".slider-text\");\r\n\t\ttext_input.value = value;\r\n\t\ttext_input.addEventListener('change', function(e) {\r\n\t\t\tif(skip_change)\r\n\t\t\t\treturn;\r\n\t\t\tvar v = parseFloat( this.value );\r\n\t\t\tvalue = v;\r\n\t\t\tslider.setValue( v );\r\n\t\t\tInspector.onWidgetChange.call( that,element,name,v, options );\r\n\t\t});\r\n\r\n\t\t//Slider change -> update Text\r\n\t\tslider.onChange = function(value) {\r\n\t\t\ttext_input.value = value;\r\n\t\t\tInspector.onWidgetChange.call( that, element, name, value, options);\r\n\t\t};\r\n\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.setValue = function(v,skip_event) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tvalue = v;\r\n\t\t\tslider.setValue(v,skip_event);\r\n\t\t};\r\n\t\telement.getValue = function() { \r\n\t\t\treturn value;\r\n\t\t};\r\n\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit a boolean value using a checkbox\r\n\t* @method addCheckbox\r\n\t* @param {string} name \r\n\t* @param {boolean} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - label: text to show, otherwise it shows on/off\r\n\t* - label_on: text to show when on\r\n\t* - label_off: text to show when off\r\n\t* - callback: function to call once the value changes\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addCheckbox = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\t\tvalue = !!value;\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\r\n\t\tvar label_on = options.label_on || options.label || \"on\";\r\n\t\tvar label_off = options.label_off || options.label || \"off\";\r\n\t\tvar label = (value ? label_on : label_off);\r\n\t\t\r\n\t\t//var element = this.createWidget(name,\"<span class='inputfield'><span class='fixed flag'>\"+(value ? \"on\" : \"off\")+\"</span><span tabIndex='\"+this.tab_index+\"'class='checkbox \"+(value?\"on\":\"\")+\"'></span></span>\", options );\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield'><span tabIndex='\"+this.tab_index+\"' class='fixed flag checkbox \"+(value ? \"on\" : \"off\")+\"'>\"+label+\"</span></span>\", options );\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar checkbox = element.querySelector(\".wcontent .checkbox\");\r\n\t\tcheckbox.addEventListener(\"keypress\", function(e) { \r\n\t\t\tif(e.keyCode == 32)\r\n\t\t\t\tLiteGUI.trigger(this, \"click\");\r\n\t\t});\r\n\r\n\t\telement.addEventListener(\"click\", function() {\r\n\t\t\tvalue = !value;\r\n\t\t\telement.querySelector(\"span.flag\").innerHTML = value ? label_on : label_off;\r\n\t\t\tif(value)\r\n\t\t\t\tcheckbox.classList.add(\"on\");\r\n\t\t\telse\r\n\t\t\t\tcheckbox.classList.remove(\"on\");\r\n\t\t\tInspector.onWidgetChange.call(that,element,name,value, options);\r\n\t\t});\r\n\t\t\r\n\t\telement.getValue = function() { \r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\telement.setValue = function(v,skip_event) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tvalue = v;\r\n\t\t\tif(\tthat.values[name] != v && !skip_event)\r\n\t\t\t\tLiteGUI.trigger( checkbox, \"click\" ); \r\n\t\t};\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit a set of boolean values using checkboxes\r\n\t* @method addFlags\r\n\t* @param {Object} value object that contains all the booleans \r\n\t* @param {Object} optional object with extra flags to insert\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addFlags = function(flags, force_flags, options)\r\n\t{\r\n\t\tvar f = {};\r\n\t\tfor(var i in flags)\r\n\t\t\tf[i] = flags[i];\r\n\t\tif(force_flags)\r\n\t\t\tfor(var i in force_flags)\r\n\t\t\t\tif( typeof(f[i]) == \"undefined\" )\r\n\t\t\t\t\tf[i] = ( force_flags[i] ? true : false );\r\n\r\n\t\tfor(var i in f)\r\n\t\t{\r\n\t\t\tvar flag_options = {};\r\n\t\t\tfor(var j in options)\r\n\t\t\t\tflag_options[j] = options[j];\r\n\r\n\t\t\tflag_options.callback = (function(j) {\r\n\t\t\t\t\treturn function(v) { \r\n\t\t\t\t\t\tflags[j] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t})(i);\r\n\r\n\t\t\tthis.addCheckbox(i, f[i], flag_options );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit an enumeration using a combobox\r\n\t* @method addCombo\r\n\t* @param {string} name \r\n\t* @param {*} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - values: a list with all the possible values, it could be an array, or an object, in case of an object, the key is the string to show, the value is the value to assign\r\n\t* - disabled: true to disable\r\n\t* - callback: function to call once an items is clicked\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addCombo = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\t//value = value || \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield full inputcombo \"+(options.disabled?\"disabled\":\"\")+\"'></span>\", options);\r\n\t\telement.options = options;\r\n\r\n\t\tvar values = options.values || [];\r\n\t\tif(values.constructor === Function)\r\n\t\t\tvalues = options.values();\r\n\r\n\t\t/*\r\n\t\tif(!values)\r\n\t\t\tvalues = [];\r\n\r\n\t\tvar index = 0;\r\n\t\tfor(var i in values)\r\n\t\t{\r\n\t\t\tvar item_value = values[i];\r\n\t\t\tvar item_index = values.constructor === Array ? index : i;\r\n\t\t\tvar item_title = values.constructor === Array ? item_value : i;\r\n\t\t\tif(item_value && item_value.title)\r\n\t\t\t\titem_title = item_value.title;\r\n\t\t\tcode += \"<option value='\"+item_index+\"' \"+( item_value == value ? \" selected\":\"\")+\" data-index='\"+item_index+\"'>\" + item_title + \"</option>\";\r\n\t\t\tindex++;\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tvar code = \"<select tabIndex='\"+this.tab_index+\"' \"+(options.disabled?\"disabled\":\"\")+\" class='\"+(options.disabled?\"disabled\":\"\")+\"'></select>\";\r\n\t\telement.querySelector(\"span.inputcombo\").innerHTML = code;\r\n\t\tsetValues(values);\r\n\t\t\r\n\t\tvar stop_event = false; //used internally\r\n\r\n\t\tvar select = element.querySelector(\".wcontent select\");\r\n\t\tselect.addEventListener(\"change\", function(e) { \r\n\t\t\tvar index = e.target.value;\r\n\t\t\tvalue = values[index];\r\n\t\t\tif(stop_event)\r\n\t\t\t\treturn;\r\n\t\t\tInspector.onWidgetChange.call( that,element,name,value, options );\r\n\t\t});\r\n\r\n\t\telement.getValue = function()\r\n\t\t{\r\n\t\t\treturn value;\t\t\r\n\t\t}\r\n\r\n\t\telement.setValue = function(v, skip_event) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tvalue = v;\r\n\t\t\tvar select = element.querySelector(\"select\");\r\n\t\t\tvar items = select.querySelectorAll(\"option\");\r\n\t\t\tvar index =  -1;\r\n\t\t\tif(values.constructor === Array)\r\n\t\t\t\tindex = values.indexOf(v);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//search the element index in the values\r\n\t\t\t\tvar j = 0;\r\n\t\t\t\tfor(var i in values)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(values[j] == v)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex = j;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(index == -1)\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\tstop_event = skip_event;\r\n\r\n\t\t\tfor(var i in items)\r\n\t\t\t{\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tif(!item || !item.dataset) //weird bug\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif( parseFloat(item.dataset[\"index\"]) == index )\r\n\t\t\t\t{\r\n\t\t\t\t\titem.setAttribute(\"selected\", true);\r\n\t\t\t\t\tselect.selectedIndex = index;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\titem.removeAttribute(\"selected\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstop_event = false;\r\n\t\t};\r\n\r\n\t\tfunction setValues(v, selected){\r\n\t\t\tif(!v)\r\n\t\t\t\tv = [];\r\n\t\t\tvalues = v;\r\n\t\t\tif(selected)\r\n\t\t\t\tvalue = selected;\r\n\t\t\tvar code = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tfor(var i in values)\r\n\t\t\t{\r\n\t\t\t\tvar item_value = values[i];\r\n\t\t\t\tvar item_index = values.constructor === Array ? index : i;\r\n\t\t\t\tvar item_title = values.constructor === Array ? item_value : i;\r\n\t\t\t\tif(item_value && item_value.title)\r\n\t\t\t\t\titem_title = item_value.title;\r\n\t\t\t\tcode += \"<option value='\"+item_index+\"' \"+( item_value == value ? \" selected\":\"\")+\" data-index='\"+item_index+\"'>\" + item_title + \"</option>\";\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\telement.querySelector(\"select\").innerHTML = code;\r\n\t\t}\r\n\r\n\t\telement.setOptionValues = setValues;\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addComboButtons = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar code = \"\";\r\n\t\tif(options.values)\r\n\t\t\tfor(var i in options.values)\r\n\t\t\t\tcode += \"<button class='wcombobutton \"+(value == options.values[i] ? \"selected\":\"\")+\"' data-name='options.values[i]'>\" + options.values[i] + \"</button>\";\r\n\r\n\t\tvar element = this.createWidget(name,code, options);\r\n\t\tvar buttons = element.querySelectorAll( \".wcontent button\" );\r\n\t\tLiteGUI.bind( buttons, \"click\", function(e) { \r\n\r\n\t\t\tvar buttonname = e.target.innerHTML;\r\n\t\t\tthat.values[name] = buttonname;\r\n\r\n\t\t\tvar elements = element.querySelectorAll(\".selected\");\r\n\t\t\tfor(var i = 0; i < elements.length; ++i)\r\n\t\t\t\telements[i].classList.remove(\"selected\");\r\n\t\t\tthis.classList.add(\"selected\");\r\n\r\n\t\t\tInspector.onWidgetChange.call( that,element,name,buttonname, options );\r\n\t\t});\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addTags = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || [];\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar code = \"<select>\";\r\n\t\tif(options.values)\r\n\t\t\tfor(var i in options.values)\r\n\t\t\t\tcode += \"<option>\" + options.values[i] + \"</option>\";\r\n\r\n\t\tcode += \"</select><div class='wtagscontainer inputfield'></div>\";\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield full'>\"+code+\"</span>\", options);\r\n\t\telement.tags = {};\r\n\r\n\t\t//add default tags\r\n\t\tfor(var i in options.value)\r\n\t\t\tinner_addtag(options.value[i]);\r\n\r\n\t\t//combo change\r\n\t\tvar select_element = element.querySelector(\".wcontent select\");\r\n\t\tselect_element.addEventListener(\"change\", function(e) { \r\n\t\t\tinner_addtag(e.target.value);\r\n\t\t});\r\n\r\n\t\tfunction inner_addtag(tagname)\r\n\t\t{\r\n\t\t\tif( element.tags[tagname] )\r\n\t\t\t\treturn; //repeated tags no\r\n\r\n\t\t\tLiteGUI.trigger( element, \"wbeforechange\", element.tags);\r\n\r\n\t\t\telement.tags[tagname] = true;\r\n\r\n\t\t\tvar tag = document.createElement(\"div\");\r\n\t\t\ttag.data = tagname;\r\n\t\t\ttag.className = \"wtag\";\r\n\t\t\ttag.innerHTML = tagname+\"<span class='close'>X</span>\";\r\n\r\n\t\t\ttag.querySelector(\".close\").addEventListener(\"click\", function(e) {\r\n\t\t\t\tvar tagname = this.parentNode.data;\r\n\t\t\t\tdelete element.tags[tagname];\r\n\t\t\t\tLiteGUI.remove(this.parentNode);\r\n\t\t\t\tLiteGUI.trigger( element, \"wremoved\", tagname );\r\n\t\t\t\tInspector.onWidgetChange.call(that,element,name,element.tags, options);\r\n\t\t\t});\r\n\r\n\t\t\telement.querySelector(\".wtagscontainer\").appendChild(tag);\r\n\r\n\t\t\tthat.values[name] = element.tags;\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call( element, element.tags ); \r\n\t\t\tLiteGUI.trigger( element, \"wchange\", element.tags);\r\n\t\t\tLiteGUI.trigger( element, \"wadded\", tagname);\r\n\t\t\tif(that.onchange)\r\n\t\t\t\tthat.onchange(name, element.tags, element);\r\n\t\t}\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to select from a list of items\r\n\t* @method addList\r\n\t* @param {string} name \r\n\t* @param {*} value [Array or Object]\r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - multiselection: allow multiple selection\r\n\t* - callback: function to call once an items is clicked\r\n\t* - selected: the item selected\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addList = function(name, values, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvar that = this;\r\n\t\t\r\n\t\tvar list_height = \"\";\r\n\t\tif(options.height)\r\n\t\t\tlist_height = \"style='height: 100%; overflow: auto;'\";\r\n\t\t\t//height = \"style='height: \"+options.height+\"px; overflow: auto;'\";\r\n\r\n\t\tvar code = \"<ul class='lite-list' \"+list_height+\" tabIndex='\"+this.tab_index+\"'><ul>\";\r\n\t\tthis.tab_index++;\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield full \"+(options.disabled?\"disabled\":\"\")+\"' style='height: 100%;'>\"+code+\"</span>\", options);\r\n\r\n\t\tvar infocontent = element.querySelector(\".info_content\");\r\n\t\tinfocontent.style.height = \"100%\";\r\n\r\n\t\tvar list_element = element.querySelector(\".lite-list\");\r\n\r\n\t\tvar inputfield = element.querySelector(\".inputfield\");\r\n\t\tinputfield.style.height = \"100%\";\r\n\t\tinputfield.style.paddingBottom = \"0.2em\";\r\n\r\n\t\tvar ul_elements = element.querySelectorAll(\"ul\");\r\n\t\tfor(var i = 0; i < ul_elements.length; ++i)\r\n\t\t{\r\n\t\t\tvar ul = ul_elements[i];\r\n\t\t\tul.addEventListener(\"focus\",function() { \r\n\t\t\t\tdocument.addEventListener(\"keydown\",inner_key,true);\r\n\t\t\t});\r\n\t\t\tul.addEventListener(\"blur\",function() {\r\n\t\t\t\tdocument.removeEventListener(\"keydown\",inner_key,true);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction inner_key(e)\r\n\t\t{\r\n\t\t\tvar selected = element.querySelector(\"li.selected\");\r\n\t\t\tif( !selected )\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(e.keyCode == 13) //intro\r\n\t\t\t{\r\n\t\t\t\tif(!selected)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tvar value = values[ selected.dataset[\"pos\"] ];\r\n\t\t\t\tif(options.callback_dblclick)\r\n\t\t\t\t\toptions.callback_dblclick.call(that,value);\r\n\t\t\t}\r\n\t\t\telse if(e.keyCode == 40) //arrow down\r\n\t\t\t{\r\n\t\t\t\tvar next = selected.nextSibling;\r\n\t\t\t\tif(next)\r\n\t\t\t\t\tLiteGUI.trigger(next, \"click\");\r\n\t\t\t\tif(selected.scrollIntoViewIfNeeded)\r\n\t\t\t\t\tselected.scrollIntoViewIfNeeded({block: \"end\", behavior: \"smooth\"});\r\n\t\t\t}\r\n\t\t\telse if(e.keyCode == 38) //arrow up\r\n\t\t\t{\r\n\t\t\t\tvar prev = selected.previousSibling;\r\n\t\t\t\tif(prev)\r\n\t\t\t\t\tLiteGUI.trigger(prev,\"click\");\r\n\t\t\t\tif(selected.scrollIntoViewIfNeeded)\r\n\t\t\t\t\tselected.scrollIntoViewIfNeeded({block: \"end\", behavior: \"smooth\"});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn;\r\n\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tfunction inner_item_click(e) { \r\n\r\n\t\t\tif(options.multiselection)\r\n\t\t\t\tthis.classList.toggle(\"selected\");\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//batch action, jquery...\r\n\t\t\t\tvar lis = element.querySelectorAll(\"li\");\r\n\t\t\t\tfor(var i = 0; i < lis.length; ++i)\r\n\t\t\t\t\tlis[i].classList.remove(\"selected\");\r\n\t\t\t\tthis.classList.add(\"selected\");\r\n\t\t\t}\r\n\r\n\t\t\tvar value = values[ this.dataset[\"pos\"] ];\r\n\t\t\t//if(options.callback) options.callback.call(element,value); //done in onWidgetChange\r\n\t\t\tInspector.onWidgetChange.call(that,element,name,value, options);\r\n\t\t\tLiteGUI.trigger(element, \"wadded\", value );\r\n\t\t}\r\n\r\n\t\tfunction inner_item_dblclick(e) { \r\n\t\t\tvar value = values[ this.dataset[\"pos\"] ];\r\n\t\t\tif(options.callback_dblclick)\r\n\t\t\t\toptions.callback_dblclick.call(that,value);\r\n\t\t}\r\n\r\n\t\telement.updateItems = function( new_values, item_selected )\r\n\t\t{\r\n\t\t\titem_selected = item_selected || options.selected;\r\n\t\t\tvar code = \"\";\r\n\t\t\tvalues = new_values;\r\n\t\t\tvar ul = this.querySelector(\"ul\");\r\n\t\t\tul.innerHTML = \"\";\r\n\r\n\t\t\tif(values)\r\n\t\t\t\tfor(var i in values)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar\tvalue = values[i];\r\n\t\t\t\t\tvar li_element = insert_item( value, item_selected, i );\r\n\t\t\t\t\tul.appendChild( li_element );\r\n\t\t\t\t}\r\n\r\n\t\t\t//ul.innerHTML = code;\r\n\t\t\tLiteGUI.bind( ul.querySelectorAll(\"li\"), \"click\", inner_item_click );\r\n\t\t}\r\n\r\n\t\tfunction insert_item( value, selected, index )\r\n\t\t{\r\n\t\t\tvar item_index = index; //to reference it\r\n\t\t\tvar item_title = index; //to show in the list\r\n\t\t\tselected = !!selected;\r\n\r\n\t\t\tvar item_style = null;\r\n\t\t\tvar icon = \"\";\r\n\t\t\tif( value != null )\r\n\t\t\t{\r\n\t\t\t\tif( value.constructor === String || value.constructor === Number || value.constructor === Boolean )\r\n\t\t\t\t{\r\n\t\t\t\t\titem_title = String(value);\r\n\t\t\t\t}\r\n\t\t\t\telse if( value )\r\n\t\t\t\t{\r\n\t\t\t\t\titem_title = value.content || value.title || value.name || index;\r\n\t\t\t\t\titem_style = value.style;\r\n\t\t\t\t\tif(value.icon)\r\n\t\t\t\t\t\ticon = \"<img src='\"+value.icon+\"' class='icon' /> \";\r\n\t\t\t\t\tif(value.selected)\r\n\t\t\t\t\t\tselected = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar item_name = item_title;\r\n\t\t\titem_name = item_name.replace(/<(?:.|\\n)*?>/gm, ''); //remove html tags that could break the html\r\n\r\n\t\t\tvar li_element = document.createElement(\"li\");\r\n\t\t\tli_element.classList.add( 'item-' + LiteGUI.safeName(item_index) );\r\n\t\t\tif( selected )\r\n\t\t\t\tli_element.classList.add( 'selected' );\r\n\t\t\tli_element.dataset[\"name\"] = item_name;\r\n\t\t\tli_element.dataset[\"pos\"] = item_index;\r\n\t\t\tli_element.value = value;\r\n\t\t\tif(item_style)\r\n\t\t\t\tli_element.setAttribute(\"style\", item_style );\r\n\t\t\tli_element.innerHTML = icon + item_title;\r\n\t\t\tli_element.addEventListener( \"click\", inner_item_click );\r\n\t\t\tif(options.callback_dblclick)\r\n\t\t\t\tli_element.addEventListener( \"dblclick\", inner_item_dblclick );\r\n\t\t\treturn li_element;\r\n\t\t}\r\n\r\n\t\telement.addItem = function( value, selected, name )\r\n\t\t{\r\n\t\t\tif(values.constructor !== Array)\r\n\t\t\t{\r\n\t\t\t\tconsole.error(\"cannot add item to list of object, only array\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvalues.push( value );\r\n\t\t\tvar ul = this.querySelector(\"ul\");\r\n\t\t\tvar li_element = insert_item( value, selected);\r\n\t\t\tul.appendChild( li_element );\r\n\t\t}\r\n\r\n\t\telement.removeItem = function(name)\r\n\t\t{\r\n\t\t\tvar items = element.querySelectorAll(\".wcontent li\");\r\n\t\t\tfor(var i = 0; i < items.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif(items[i].dataset[\"name\"] == name)\r\n\t\t\t\t\tLiteGUI.remove( items[i] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telement.updateItems( values, options.selected );\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.getSelected = function()\r\n\t\t{\r\n\t\t\tvar r = [];\r\n\t\t\tvar selected = this.querySelectorAll(\"ul li.selected\");\r\n\t\t\tfor(var i = 0; i < selected.length; ++i)\r\n\t\t\t\tr.push( selected[i].dataset[\"name\"] );\r\n\t\t\treturn r;\r\n\t\t}\r\n\r\n\t\telement.getByIndex = function(num)\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\treturn items[num];\r\n\t\t}\r\n\t\telement.getIndex = element.getByIndex; //legacy\r\n\r\n\t\telement.selectIndex = function( num, add_to_selection )\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tfor(var i = 0; i < items.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tif(i == num)\r\n\t\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\telse if(!add_to_selection)\r\n\t\t\t\t\titem.classList.remove(\"selected\");\r\n\t\t\t}\r\n\t\t\treturn items[num];\r\n\t\t}\r\n\r\n\t\telement.deselectIndex = function( num )\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tvar item = items[num];\r\n\t\t\tif(item)\r\n\t\t\t\titem.classList.remove(\"selected\");\r\n\t\t\treturn item;\r\n\t\t}\r\n\r\n\t\telement.scrollToIndex = function(num)\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tvar item = items[num];\r\n\t\t\tif(!item)\r\n\t\t\t\treturn;\r\n\t\t\tthis.scrollTop = item.offsetTop;\r\n\t\t}\r\n\r\n\t\telement.selectAll = function()\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tfor(var i = 0; i < items.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tif( item.classList.contains(\"selected\") )\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tLiteGUI.trigger( item, \"click\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telement.deselectAll = function()\r\n\t\t{\r\n\t\t\t//there has to be a more efficient way to do this\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tfor(var i = 0; i < items.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tif( !item.classList.contains(\"selected\") )\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tLiteGUI.trigger( item, \"click\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telement.setValue = function(v)\r\n\t\t{\r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tthis.updateItems(v);\r\n\t\t}\r\n\r\n\t\telement.getNumberOfItems = function()\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\treturn items.length;\r\n\t\t}\r\n\r\n\t\telement.filter = function( callback, case_sensitive )\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tvar use_string = false;\r\n\r\n\t\t\tif( callback && callback.constructor === String )\r\n\t\t\t{\r\n\t\t\t\tvar needle = callback;\r\n\t\t\t\tif( case_sensitive )\r\n\t\t\t\t\tneedle.toLowerCase();\r\n\t\t\t\tuse_string = true;\r\n\t\t\t\tcallback = function(v){ return ( (case_sensitive ? v : v.toLowerCase()).indexOf(needle) != -1); };\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < items.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tif(!callback)\r\n\t\t\t\t{\r\n\t\t\t\t\titem.style.display = \"\";\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar value = item.value;\r\n\t\t\t\tif(use_string && value != null && value.constructor !== String)\r\n\t\t\t\t\tvalue = item.innerHTML;\r\n\r\n\t\t\t\tif( !callback( value, item, item.classList.contains(\"selected\") ) )\r\n\t\t\t\t\titem.style.display = \"none\";\r\n\t\t\t\telse\r\n\t\t\t\t\titem.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telement.selectByFilter = function(callback)\r\n\t\t{\r\n\t\t\tvar items = this.querySelectorAll(\"ul li\");\r\n\t\t\tfor(var i = 0; i < items.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar item = items[i];\r\n\t\t\t\tvar r = callback( item.value, item, item.classList.contains(\"selected\") );\r\n\t\t\t\tif( r === true )\r\n\t\t\t\t\titem.classList.add(\"selected\");\r\n\t\t\t\telse if( r === false )\r\n\t\t\t\t\titem.classList.remove(\"selected\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(options.height) \r\n\t\t\telement.scrollTop = 0;\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addButton = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = options.button_text || value || \"\";\r\n\t\tvar that = this;\r\n\r\n\t\tvar button_classname = \"\";\r\n\t\tif(name === null)\r\n\t\t\tbutton_classname = \"single\";\r\n\t\tif(options.micro)\r\n\t\t\tbutton_classname += \" micro\";\r\n\r\n\t\tvar attrs = \"\";\r\n\t\tif(options.disabled)\r\n\t\t\tattrs = \"disabled='disabled'\";\r\n\r\n\t\tvar title = options.title || \"\";\r\n\t\t\r\n\t\tvar element = this.createWidget(name,\"<button tabIndex='\"+ this.tab_index + \"' \"+attrs+\"></button>\", options);\r\n\t\tthis.tab_index++;\r\n\t\tvar button = element.querySelector(\"button\");\r\n\t\tbutton.setAttribute(\"title\",title);\r\n\t\tbutton.className = \"litebutton \" + button_classname;\r\n\t\tbutton.innerHTML = value;\r\n\t\tbutton.addEventListener(\"click\", function(event) {\r\n\t\t\tInspector.onWidgetChange.call( that, element, name, this.innerHTML, options, false, event);\r\n\t\t\tLiteGUI.trigger( button, \"wclick\", value );\r\n\t\t});\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.wclick = function(callback) { \r\n\t\t\tif(!options.disabled)\r\n\t\t\t\tLiteGUI.bind(this, \"wclick\", callback ); \r\n\t\t}\r\n\r\n\t\telement.setValue = function(v)\r\n\t\t{\r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tbutton.innerHTML = v;\r\n\t\t}\r\n\r\n\t\telement.disable = function() { button.disabled = true; };\r\n\t\telement.enable = function() { button.disabled = false; };\r\n\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addButtons = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\r\n\t\tvar code = \"\";\r\n\t\t//var w = \"calc(\"+(100/value.length).toFixed(3)+\"% - \"+Math.floor(16/value.length)+\"px);\";\r\n\t\tvar w = \"calc( \" + (100/value.length).toFixed(3) + \"% - 4px )\";\r\n\t\tvar style = \"width:\"+w+\"; width: -moz-\"+w+\"; width: -webkit-\"+w+\"; margin: 2px;\";\r\n\t\tif(value && typeof(value) == \"object\")\r\n\t\t{\r\n\t\t\tfor(var i in value)\r\n\t\t\t{\r\n\t\t\t\tvar title = \"\";\r\n\t\t\t\tif( options.title && options.title.constructor === Array)\r\n\t\t\t\t\ttitle = options.title[i] || \"\";\r\n\t\t\t\tcode += \"<button class='litebutton' title='\"+title+\"' tabIndex='\"+this.tab_index+\"' style='\"+style+\"'>\"+value[i]+\"</button>\";\r\n\t\t\t\tthis.tab_index++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar element = this.createWidget(name,code, options);\r\n\t\tvar buttons = element.querySelectorAll(\"button\");\r\n\t\tfor(var i = 0; i < buttons.length; ++i)\r\n\t\t{\r\n\t\t\tvar button = buttons[i];\r\n\t\t\tbutton.addEventListener(\"click\", function(evt) {\r\n\t\t\t\tInspector.onWidgetChange.call(that, element, name, this.innerHTML, options, null, evt);\r\n\t\t\t\tLiteGUI.trigger( element, \"wclick\",this.innerHTML );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addIcon = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\r\n\t\tvar img_url = options.image;\r\n\t\tvar width = options.width || options.size || 20;\r\n\t\tvar height = options.height || options.size || 20;\r\n\r\n\t\tvar element = this.createWidget(name,\"<span class='icon' \"+(options.title ? \"title='\"+options.title+\"'\" : \"\" )+\" tabIndex='\"+ this.tab_index + \"'></span>\", options);\r\n\t\tthis.tab_index++;\r\n\t\tvar content = element.querySelector(\"span.wcontent\");\r\n\t\tvar icon = element.querySelector(\"span.icon\");\r\n\r\n\t\tvar x = options.x || 0;\r\n\t\tif(options.index)\r\n\t\t\tx = options.index * -width;\r\n\t\tvar y = value ? height : 0;\r\n\r\n\t\telement.style.minWidth = element.style.width = (width) + \"px\";\r\n\t\telement.style.margin = \"0 2px\"; element.style.padding = \"0\";\r\n\t\tcontent.style.margin = \"0\"; content.style.padding = \"0\";\r\n\r\n\t\ticon.style.display = \"inline-block\"\r\n\t\ticon.style.cursor = \"pointer\";\r\n\t\ticon.style.width = width + \"px\";\r\n\t\ticon.style.height = height + \"px\";\r\n\t\ticon.style.backgroundImage = \"url('\"+img_url+\"')\";\r\n\t\ticon.style.backgroundPosition = x + \"px \" + y + \"px\";\r\n\r\n\t\ticon.addEventListener(\"mousedown\", function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tvalue = !value;\r\n\t\t\tvar ret = Inspector.onWidgetChange.call(that,element,name, value, options);\r\n\t\t\tLiteGUI.trigger( element, \"wclick\", value);\r\n\r\n\t\t\tif(ret !== undefined)\r\n\t\t\t\tvalue = ret;\r\n\r\n\t\t\tvar y = value ? height : 0;\r\n\t\t\ticon.style.backgroundPosition = x + \"px \" + y + \"px\";\r\n\r\n\t\t\tif(options.toggle === false) //blink\r\n\t\t\t\tsetTimeout( function(){ icon.style.backgroundPosition = x + \"px 0px\"; value = false; },200 );\r\n\r\n\t\t});\r\n\t\tthis.append(element,options);\r\n\r\n\t\telement.setValue = function(v, skip_event ) { \r\n\t\t\tif(v === undefined)\r\n\t\t\t\treturn;\r\n\t\t\tvalue = v;\r\n\t\t\tvar y = value ? height : 0;\r\n\t\t\ticon.style.backgroundPosition = x + \"px \" + y + \"px\";\r\n\t\t\tif(!skip_event)\r\n\t\t\t\tInspector.onWidgetChange.call(that,element,name, value, options);\r\n\t\t};\r\n\t\telement.getValue = function() { return value; };\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addColor = function( name, value, options )\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || [0.0,0.0,0.0];\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar code = \"<input tabIndex='\"+this.tab_index+\"' id='colorpicker-\"+name+\"' class='color' value='\"+(value[0]+\",\"+value[1]+\",\"+value[2])+\"' \"+(options.disabled?\"disabled\":\"\")+\"/>\";\r\n\t\tthis.tab_index++;\r\n\r\n\t\tif(options.show_rgb)\r\n\t\t\tcode += \"<span class='rgb-color'>\"+Inspector.parseColor(value)+\"</span>\";\r\n\t\tvar element = this.createWidget(name,code, options);\r\n\t\tthis.append(element,options); //add now or jscolor dont work\r\n\r\n\t\t//create jsColor \r\n\t\tvar input_element = element.querySelector(\"input.color\");\r\n\t\tvar myColor = null;\r\n\r\n\t\tif( window.jscolor )\r\n\t\t{\r\n\r\n\t\t\t//SHOWS CONTEXTUAL MENU\r\n\t\t\t//block focusing\r\n\t\t\t/*\r\n\t\t\tinput_element.addEventListener(\"contextmenu\", function(e) { \r\n\t\t\t\tif(e.button != 2) //right button\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t//create the context menu\r\n\t\t\t\tvar contextmenu = new LiteGUI.ContextMenu( [\"Copy in HEX\",\"Copy in RGBA\"], { event: e, callback: inner_action });\r\n\t\t\t\te.preventDefault(); \r\n\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\tinput_element.addEventListener(\"focus\", block_focus , true);\r\n\t\t\t\tsetTimeout(function(){ input_element.removeEventListener(\"focus\", block_focus , true);},1000);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},true);\t\r\n\r\n\t\t\tfunction block_focus(e)\r\n\t\t\t{\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfunction inner_action(v)\r\n\t\t\t{\r\n\t\t\t\tif(v == \"Copy in HEX\")\r\n\t\t\t\t{\r\n\t\t\t\t\tLiteGUI.toClipboard( \"in HEX\");\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tLiteGUI.toClipboard( \"in RGB\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tmyColor = new jscolor.color(input_element);\r\n\t\t\tmyColor.pickerFaceColor = \"#333\";\r\n\t\t\tmyColor.pickerBorderColor = \"black\";\r\n\t\t\tmyColor.pickerInsetColor = \"#222\";\r\n\t\t\tmyColor.rgb_intensity = 1.0;\r\n\r\n\t\t\tif(options.disabled) \r\n\t\t\t\tmyColor.pickerOnfocus = false; //this doesnt work\r\n\r\n\t\t\tif( value.constructor !== String && value.length && value.length > 2)\r\n\t\t\t{\r\n\t\t\t\tvar intensity = 1.0;\r\n\t\t\t\tmyColor.fromRGB(value[0]*intensity,value[1]*intensity,value[2]*intensity);\r\n\t\t\t\tmyColor.rgb_intensity = intensity;\r\n\t\t\t}\r\n\r\n\t\t\t//update values in rgb format\r\n\t\t\tinput_element.addEventListener(\"change\", function(e) { \r\n\t\t\t\tvar rgbelement = element.querySelector(\".rgb-color\");\r\n\t\t\t\tif(rgbelement)\r\n\t\t\t\t\trgbelement.innerHTML = LiteGUI.Inspector.parseColor(myColor.rgb);\r\n\t\t\t});\r\n\r\n\t\t\tmyColor.onImmediateChange = function() \r\n\t\t\t{\r\n\t\t\t\tvar v = [ myColor.rgb[0] * myColor.rgb_intensity, myColor.rgb[1] * myColor.rgb_intensity, myColor.rgb[2] * myColor.rgb_intensity ];\r\n\t\t\t\t//Inspector.onWidgetChange.call(that,element,name,v, options);\r\n\t\t\t\tvar event_data = [v.concat(), myColor.toString()];\r\n\t\t\t\tLiteGUI.trigger( element, \"wbeforechange\", event_data );\r\n\t\t\t\tthat.values[name] = v;\r\n\t\t\t\tif(options.callback)\r\n\t\t\t\t\toptions.callback.call( element, v.concat(), \"#\" + myColor.toString(), myColor );\r\n\t\t\t\tLiteGUI.trigger( element, \"wchange\", event_data );\r\n\t\t\t\tif(that.onchange) that.onchange(name, v.concat(), element);\r\n\t\t\t}\r\n\r\n\t\t\t//alpha dragger\r\n\t\t\toptions.step = options.step || 0.01;\r\n\t\t\toptions.dragger_class = \"nano\";\r\n\r\n\t\t\tvar dragger = new LiteGUI.Dragger(1, options);\r\n\t\t\telement.querySelector('.wcontent').appendChild(dragger.root);\r\n\t\t\tdragger.input.addEventListener(\"change\", function(e)\r\n\t\t\t{\r\n\t\t\t\tvar v = parseFloat( this.value );\r\n\t\t\t\tmyColor.rgb_intensity = v;\r\n\t\t\t\tif (myColor.onImmediateChange)\r\n\t\t\t\t\tmyColor.onImmediateChange();\r\n\t\t\t});\r\n\r\n\t\t\telement.setValue = function(value,skip_event) { \r\n\t\t\t\tmyColor.fromRGB(value[0],value[1],value[2]);\r\n\t\t\t\tif(!skip_event)\r\n\t\t\t\t\tLiteGUI.trigger( dragger.input, \"change\" ); \r\n\t\t\t};\r\n\r\n\t\t\telement.getValue = function() { \r\n\t\t\t\treturn value;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tinput_element.addEventListener(\"change\", function(e) { \r\n\t\t\t\tvar rgbelement = element.querySelector(\".rgb-color\");\r\n\t\t\t\tif(rgbelement)\r\n\t\t\t\t\trgbelement.innerHTML = LiteGUI.Inspector.parseColor(myColor.rgb);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addFile = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget(name,\"<span class='inputfield full whidden' style='width: calc(100% - 26px)'><span class='filename'></span></span><button class='litebutton' style='width:20px; margin-left: 2px;'>...</button><input type='file' size='100' class='file' value='\"+value+\"'/>\", options);\r\n\t\tvar content = element.querySelector(\".wcontent\");\r\n\t\tcontent.style.position = \"relative\";\r\n\t\tvar input = element.querySelector(\".wcontent input\");\r\n\t\tvar filename_element = element.querySelector(\".wcontent .filename\");\r\n\t\tif(value)\r\n\t\t\tfilename_element.innerText = value.name;\r\n\r\n\t\tinput.addEventListener(\"change\", function(e) { \r\n\t\t\tif(!e.target.files.length)\r\n\t\t\t{\r\n\t\t\t\t//nothing\r\n\t\t\t\tfilename_element.innerText = \"\";\r\n\t\t\t\tInspector.onWidgetChange.call(that, element, name, null, options);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar url = null;\r\n\t\t\t//var data = { url: url, filename: e.target.value, file: e.target.files[0], files: e.target.files };\r\n\t\t\tvar file = e.target.files[0];\r\n\t\t\tfile.files = e.target.files;\r\n\t\t\tif( options.generate_url )\r\n\t\t\t\tfile.url = URL.createObjectURL( e.target.files[0] );\r\n\t\t\tfilename_element.innerText = file.name;\r\n\r\n\t\t\tif(options.read_file)\r\n\t\t\t{\r\n\t\t\t\t var reader = new FileReader();\r\n\t\t\t\t reader.onload = function(e2){\r\n\t\t\t\t\tfile.data = e2.target.result;\r\n\t\t\t\t\tInspector.onWidgetChange.call( that, element, name, file, options );\r\n\t\t\t\t }\r\n\t\t\t\t if( options.read_file == \"binary\" )\r\n\t\t\t\t\t reader.readAsArrayBuffer( file );\r\n\t\t\t\t else if( options.read_file == \"data_url\" )\r\n\t\t\t\t\t reader.readAsDataURL( file );\r\n\t\t\t\t else\r\n\t\t\t\t\t reader.readAsText( file );\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tInspector.onWidgetChange.call( that, element, name, file, options );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.append(element,options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addLine = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar that = this;\r\n\t\tthis.values[name] = value;\r\n\t\t\r\n\t\tvar element = this.createWidget(name,\"<span class='line-editor'></span>\", options);\r\n\t\telement.style.width = \"100%\";\r\n\r\n\t\tvar line_editor = new LiteGUI.LineEditor(value,options);\r\n\t\telement.querySelector(\"span.line-editor\").appendChild(line_editor);\r\n\r\n\t\tLiteGUI.bind( line_editor, \"change\", function(e) { \r\n\t\t\tLiteGUI.trigger(element, \"wbeforechange\",[e.target.value]);\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call( element,e.target.value );\r\n\t\t\tLiteGUI.trigger(element, \"wchange\",[e.target.value]);\r\n\t\t\tInspector.onWidgetChange.call(that,element,name,e.target.value, options);\r\n\t\t});\r\n\r\n\t\tthis.append(element,options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addTree = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar element = this.createWidget(name,\"<div class='wtree inputfield full'></div>\", options);\r\n\t\t\r\n\t\tvar tree_root = element.querySelector(\".wtree\");\r\n\t\tif(options.height)\r\n\t\t{\r\n\t\t\ttree_root.style.height = typeof(options.height) == \"number\" ? options.height + \"px\" : options.height;\r\n\t\t\ttree_root.style.overflow = \"auto\";\r\n\t\t}\r\n\r\n\t\tvar current = value;\r\n\r\n\t\tvar tree = element.tree = new LiteGUI.Tree( value, options.tree_options );\r\n\t\ttree.onItemSelected = function(node, data) {\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call( element, node, data);\r\n\t\t};\r\n\r\n\t\ttree_root.appendChild(tree.root);\r\n\r\n\t\telement.setValue = function(v) { \r\n\t\t\ttree.updateTree(v);\r\n\t\t};\r\n\r\n\t\tthis.append(element,options);\r\n\t\tthis.processElement(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.addDataTree = function(name, value, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvalue = value || \"\";\r\n\t\tvar element = this.createWidget(name,\"<div class='wtree'></div>\", options);\r\n\t\t\r\n\t\tvar node = element.querySelector(\".wtree\");\r\n\t\tvar current = value;\r\n\r\n\t\tinner_recursive(node,value);\r\n\r\n\t\tfunction inner_recursive( root_node, value)\r\n\t\t{\r\n\t\t\tfor(var i in value)\r\n\t\t\t{\r\n\t\t\t\tvar e = document.createElement(\"div\");\r\n\t\t\t\te.className = \"treenode\";\r\n\t\t\t\tif( typeof( value[i] ) == \"object\" )\r\n\t\t\t\t{\r\n\t\t\t\t\te.innerHTML = \"<span class='itemname'>\" + i + \"</span><span class='itemcontent'></span>\";\r\n\t\t\t\t\tinner_recursive( e.querySelector(\".itemcontent\"), value[i] );\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\te.innerHTML = \"<span class='itemname'>\" + i + \"</span><span class='itemvalue'>\" + value[i] + \"</span>\";\r\n\t\t\t\troot_node.appendChild(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(element,options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t* Widget to edit an array of values of a certain type\r\n\t* @method addArray\r\n\t* @param {string} name \r\n\t* @param {Array} value \r\n\t* @param {Object} options, here is a list for this widget (check createWidget for a list of generic options):\r\n\t* - data_type: the type of every value inside the array\r\n\t* - data_options: options for the widgets of every item in the array\r\n\t* - max_items: max number of items to show from the array, default is 100\r\n\t* - callback: function to call once an items inside the array has changed\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addArray = function( name, value, options )\r\n\t{\r\n\t\tvar that = this;\r\n\r\n\t\tif( !value || value.constructor !== Array )\r\n\t\t{\r\n\t\t\tconsole.error(\"Inspector: Array widget value must be a valid array\" );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvar type = options.data_type || \"string\";\r\n\t\tvar max_items = options.max_items || 100;\r\n\t\tvar container = null;\r\n\r\n\t\t//length widget\r\n\t\tthis.widgets_per_row = 3;\r\n\t\tthis.addInfo(name,null,{ name_width: \"100%\", width: \"100% - 160px\"});\r\n\t\tvar length_widget = this.addString( \"length\", value.length || \"0\", { width: 100, callback: function(v){ \r\n\t\t\tvar v = parseInt(v);\r\n\t\t\tif(value < 0)\r\n\t\t\t\tvalue = 0;\r\n\t\t\tvalue.length = v;\r\n\t\t\trefresh.call( container );\r\n\t\t}});\r\n\r\n\t\tthis.addButtons( null,[\"+\",\"-\"], { width: 60, callback: function(v){\r\n\t\t\tif(v == \"+\")\r\n\t\t\t\tvalue.length = value.length + 1;\r\n\t\t\telse if(value.length > 0)\r\n\t\t\t\tvalue.length = value.length - 1;\r\n\t\t\tlength_widget.setValue( value.length );\r\n\t\t\trefresh.call( container );\r\n\t\t}});\r\n\r\n\t\tthis.widgets_per_row = 1;\r\n\t\tcontainer = this.addContainer( name, options );\r\n\t\tcontainer.value = value;\r\n\r\n\t\trefresh.call( container );\r\n\r\n\t\tfunction refresh()\r\n\t\t{\r\n\t\t\tvar container = this;\r\n\t\t\tvar value = container.value;\r\n\t\t\tvar size = Math.min( value.length, max_items );\r\n\r\n\t\t\tthat.widgets_per_row += 1;\r\n\t\t\tcontainer.innerHTML = \"\";\r\n\r\n\t\t\tfor(var i = 0; i < size; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar v = null;\r\n\t\t\t\tif (value[i] !== undefined)\r\n\t\t\t\t\tv = value[i];\r\n\t\t\t\tvar row = document.createElement(\"div\");\r\n\t\t\t\trow.className = \"array-row\";\r\n\t\t\t\trow.innerHTML = \"<span class='row-index'>\" + i + \"</span><span class='row-cell'></span><button style='width: 30px;' class='litebutton single row-trash'><img src='imgs/mini-icon-trash.png'/></button>\";\r\n\t\t\t\tcontainer.appendChild(row);\r\n\r\n\t\t\t\tvar widget_row_container = row.querySelector('.row-cell');\r\n\t\t\t\t\r\n\t\t\t\tvar item_options = { widget_parent: widget_row_container, callback: assign.bind({value: this.value, index: i}) };\r\n\t\t\t\tif(options.data_options)\r\n\t\t\t\t\tfor(var j in options.data_options)\r\n\t\t\t\t\t\titem_options[j] = options.data_options[j];\r\n\t\t\t\tvar w = that.add( type, null, v, item_options );\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tthat.addButton(null,\"<img src='imgs/mini-icon-trash.png'/>\", {  widget_parent: container, index: i, width: 30, callback: function(){\r\n\t\t\t\t\tif( value && value.length > (this.options.index-1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue.splice( this.options.index,1 );\r\n\t\t\t\t\t\tlength_widget.setValue( value.length, true );\r\n\t\t\t\t\t\trefresh.call( container );\r\n\t\t\t\t\t}\r\n\t\t\t\t}});\r\n\t\t\t\t*/\r\n\t\t\t}\r\n\t\t\tthat.widgets_per_row -= 1;\r\n\t\t}\r\n\r\n\t\tfunction assign(v)\r\n\t\t{\r\n\t\t\tthis.value[ this.index ] = v;\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call( container, this.value, this.index );\r\n\t\t\t//todo: trigger change\r\n\t\t}\r\n\r\n\t\tcontainer.setValue = function(v)\r\n\t\t{\r\n\t\t\tthis.value = v;\r\n\t\t\trefresh.call(container);\r\n\t\t}\r\n\r\n\t\tcontainer.getValue = function()\r\n\t\t{\r\n\t\t\treturn this.value = v;\r\n\t\t}\r\n\r\n\t\t//this.append(element,options);\r\n\t\treturn container;\r\n\t}\r\n\r\n\t//***** containers ********/\r\n\t//creates an empty container but it is not set active\r\n\tInspector.prototype.addContainer = function(name, options)\r\n\t{\r\n\t\tif(name && name.constructor !== String)\r\n\t\t\tconsole.warn(\"LiteGUI.Inspector.addContainer first parameter must be a string with the name\");\r\n\t\tvar element = this.startContainer(null,options);\r\n\t\tthis.endContainer();\r\n\t\treturn element;\r\n\t}\r\n\r\n\t//creates an empty container and sets its as active\r\n\tInspector.prototype.startContainer = function(name, options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvar element = document.createElement(\"DIV\");\r\n\t\telement.className = \"wcontainer\";\r\n\t\tthis.applyOptions(element, options);\r\n\t\tthis.row_number = 0;\r\n\r\n\t\tthis.append( element );\r\n\t\tthis.pushContainer( element );\r\n\r\n\t\tif(options.widgets_per_row)\r\n\t\t\tthis.widgets_per_row = options.widgets_per_row;\r\n\r\n\t\tif(options.height)\r\n\t\t{\r\n\t\t\telement.style.height = LiteGUI.sizeToCSS( options.height );\r\n\t\t\telement.style.overflow = \"auto\";\r\n\t\t}\r\n\r\n\t\telement.refresh = function()\r\n\t\t{\r\n\t\t\tif(element.on_refresh)\r\n\t\t\t\telement.on_refresh.call(this, element);\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.endContainer = function(name, options)\r\n\t{\r\n\t\tthis.popContainer();\r\n\t}\r\n\r\n\t//it is like a group but they cant be nested inside containers\r\n\tInspector.prototype.addSection = function( name, options )\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\t\tvar that = this;\r\n\r\n\t\tif(this.current_section)\r\n\t\t\tthis.current_section.end();\r\n\r\n\t\tvar element = document.createElement(\"DIV\");\r\n\t\telement.className = \"wsection\";\r\n\t\tif(!name) \r\n\t\t\telement.className += \" notitle\";\r\n\t\tif(options.className)\r\n\t\t\telement.className += \" \" + options.className;\r\n\t\tif(options.collapsed)\r\n\t\t\telement.className += \" collapsed\";\r\n\r\n\t\tif(options.id)\r\n\t\t\telement.id = options.id;\r\n\t\tif(options.instance)\r\n\t\t\telement.instance = options.instance;\r\n\r\n\t\tvar code = \"\";\r\n\t\tif(name)\r\n\t\t\tcode += \"<div class='wsectiontitle'>\"+(options.no_collapse ? \"\" : \"<span class='switch-section-button'></span>\")+name+\"</div>\";\r\n\t\tcode += \"<div class='wsectioncontent'></div>\";\r\n\t\telement.innerHTML = code;\r\n\r\n\t\t//append to inspector\r\n\t\telement._last_container_stack = this._current_container_stack.concat();\r\n\t\t//this.append( element ); //sections are added to the root, not to the current container\r\n\t\tthis.root.appendChild( element );\r\n\t\tthis.sections.push( element );\r\n\r\n\t\telement.sectiontitle = element.querySelector(\".wsectiontitle\");\r\n\r\n\t\tif(name)\r\n\t\t\telement.sectiontitle.addEventListener(\"click\",function(e) {\r\n\t\t\t\tif(e.target.localName == \"button\") \r\n\t\t\t\t\treturn;\r\n\t\t\t\telement.classList.toggle(\"collapsed\");\r\n\t\t\t\tvar seccont = element.querySelector(\".wsectioncontent\");\r\n\t\t\t\tseccont.style.display = seccont.style.display === \"none\" ? null : \"none\";\r\n\t\t\t\tif(options.callback)\r\n\t\t\t\t\toptions.callback.call( element, !element.classList.contains(\"collapsed\") );\r\n\t\t\t});\r\n\r\n\t\tif(options.collapsed)\r\n\t\t\telement.querySelector(\".wsectioncontent\").style.display = \"none\";\r\n\r\n\t\tthis.setCurrentSection( element );\r\n\r\n\t\tif(options.widgets_per_row)\r\n\t\t\tthis.widgets_per_row = options.widgets_per_row;\r\n\r\n\t\telement.refresh = function()\r\n\t\t{\r\n\t\t\tif(element.on_refresh)\r\n\t\t\t\telement.on_refresh.call(this, element);\r\n\t\t}\r\n\r\n\t\telement.end = function()\r\n\t\t{\r\n\t\t\tif(that.current_section != this)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tthat._current_container_stack = this._last_container_stack;\r\n\t\t\tthat._current_container = null;\r\n\r\n\t\t\tvar content = this.querySelector(\".wsectioncontent\");\r\n\t\t\tif(!content)\r\n\t\t\t\treturn;\r\n\t\t\tif( that.isContainerInStack( content ) )\r\n\t\t\t\tthat.popContainer( content );\r\n\t\t\tthat.current_section = null;\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t//change current section (allows to add widgets to previous sections)\r\n\tInspector.prototype.setCurrentSection = function( section )\r\n\t{\r\n\t\tif( this.current_section == section )\r\n\t\t\treturn;\r\n\r\n\t\tthis.current_section = section;\r\n\r\n\t\tvar parent = section.parentNode;\r\n\t\tthis.popContainer( parent ); //go back till that container\r\n\r\n\t\tvar content = section.querySelector(\".wsectioncontent\");\r\n\t\tthis.pushContainer( content );\r\n\t}\r\n\r\n\tInspector.prototype.getCurrentSection = function()\r\n\t{\r\n\t\tfor(var i = this._current_container_stack.length - 1; i >= 0; --i)\r\n\t\t{\r\n\t\t\tvar container = this._current_container_stack[i];\r\n\t\t\tif(container.classList.contains(\"wsectioncontent\"))\r\n\t\t\t\treturn container.parentNode;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tInspector.prototype.endCurrentSection = function()\r\n\t{\r\n\t\tif(this.current_section)\r\n\t\t\tthis.current_section.end();\r\n\t}\r\n\r\n\t//A container of widgets with a title \r\n\tInspector.prototype.beginGroup = function( name, options )\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvar element = document.createElement(\"DIV\");\r\n\t\telement.className = \"wgroup\";\r\n\t\tname = name || \"\";\r\n\t\telement.innerHTML = \"<div class='wgroupheader \"+ (options.title ? \"wtitle\" : \"\") +\"'><span class='switch-section-button'></span>\"+name+\"</div>\";\r\n\t\telement.group = true;\r\n\r\n\t\tvar content = document.createElement(\"DIV\");\r\n\t\tcontent.className = \"wgroupcontent\";\r\n\t\tif(options.collapsed)\r\n\t\t\tcontent.style.display = \"none\";\r\n\r\n\t\tif( options.height )\r\n\t\t\tcontent.style.height = LiteGUI.sizeToCSS( options.height );\r\n\t\tif( options.scrollable )\r\n\t\t\tcontent.style.overflow = \"auto\";\r\n\r\n\t\telement.appendChild( content );\r\n\r\n\t\tvar collapsed = options.collapsed || false;\r\n\t\tvar header = element.querySelector(\".wgroupheader\");\r\n\t\tif(collapsed)\r\n\t\t\theader.classList.add(\"collapsed\");\r\n\t\theader.addEventListener(\"click\", function(e) { \r\n\t\t\tvar style = element.querySelector(\".wgroupcontent\").style;\r\n\t\t\tstyle.display = style.display === \"none\" ? \"\" : \"none\";\r\n\t\t\tcollapsed = !collapsed;\r\n\t\t\tif(collapsed)\r\n\t\t\t\theader.classList.add(\"collapsed\");\r\n\t\t\telse\r\n\t\t\t\theader.classList.remove(\"collapsed\");\r\n\t\t\t//element.querySelector(\".switch-section-button\").innerHTML = (collapsed ? \"+\" : \"-\");\r\n\t\t\te.preventDefault();\r\n\t\t});\r\n\r\n\t\tthis.append( element, options );\r\n\t\tthis.pushContainer( content );\r\n\t\treturn element;\r\n\t}\r\n\r\n\tInspector.prototype.endGroup = function()\r\n\t{\r\n\t\tdo\r\n\t\t{\r\n\t\t\tthis.popContainer();\r\n\t\t}\r\n\t\twhile( this._current_container && !this._current_container.classList.contains(\"wgroupcontent\") )\r\n\t}\r\n\r\n\t/**\r\n\t* Creates a title bar in the widgets list to help separate widgets\r\n\t* @method addTitle\r\n\t* @param {string} title \r\n\t* @param {Object} options\r\n\t* @return {HTMLElement} the widget in the form of the DOM element that contains it\r\n\t**/\r\n\tInspector.prototype.addTitle = function(title,options)\r\n\t{\r\n\t\toptions = this.processOptions(options);\r\n\r\n\t\tvar element = document.createElement(\"DIV\");\r\n\t\tvar code = \"<span class='wtitle'><span class='text'>\"+title+\"</span>\";\r\n\t\tif(options.help)\r\n\t\t{\r\n\t\t\tcode += \"<span class='help'><div class='help-content'>\"+options.help+\"</div></span>\";\r\n\t\t}\r\n\t\tcode += \"</span>\";\r\n\t\telement.innerHTML = code;\r\n\t\telement.setValue = function(v) { \r\n\t\t\tthis.querySelector(\".text\").innerHTML = v;\r\n\t\t};\r\n\t\tthis.row_number = 0;\r\n\t\tthis.append(element, options);\r\n\t\treturn element;\r\n\t}\r\n\r\n\r\n\tInspector.prototype.scrollTo = function( id )\r\n\t{\r\n\t\tvar element = this.root.querySelector(\"#\" + id );\r\n\t\tif(!element)\r\n\t\t\treturn;\r\n\t\tvar top = this.root.offsetTop;\r\n\t\tvar delta = element.offsetTop - top;\r\n\t\tthis.root.parentNode.parentNode.scrollTop = delta;\r\n\t}\r\n\r\n\tInspector.prototype.processOptions = function(options)\r\n\t{\r\n\t\tif(typeof(options) == \"function\")\r\n\t\t\toptions = { callback: options };\r\n\t\treturn options || {};\r\n\t}\r\n\r\n\tInspector.prototype.processElement = function(element, options)\r\n\t{\r\n\t\tif(options.callback_update && element.setValue)\r\n\t\t{\r\n\t\t\telement.on_update = function(){\r\n\t\t\t\tthis.setValue( options.callback_update.call(this), true );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tInspector.prototype.updateWidgets = function()\r\n\t{\r\n\t\tfor(var i = 0; i < this.widgets.length; ++i)\r\n\t\t{\r\n\t\t\tvar widget = this.widgets[i];\r\n\t\t\tif(widget.on_update)\r\n\t\t\t\twidget.on_update( widget );\r\n\t\t}\r\n\t}\r\n\r\n\tInspector.parseColor = function(color)\r\n\t{\r\n\t\treturn \"<span style='color: #FAA'>\" + color[0].toFixed(2) + \"</span>,<span style='color: #AFA'>\" + color[1].toFixed(2) + \"</span>,<span style='color: #AAF'>\" + color[2].toFixed(2) + \"</span>\";\r\n\t}\r\n\r\n\treturn LiteGUI.Inspector = Inspector;\r\n\r\n});\ndefine('skylark-litegui/Menubar',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\t/************** MENUBAR ************************/\r\n\tfunction Menubar(id, options)\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tthis.menu = [];\r\n\t\tthis.panels = [];\r\n\r\n\t\tthis.root = document.createElement(\"div\");\r\n\t\tthis.root.id = id;\r\n\t\tthis.root.className = \"litemenubar\";\r\n\r\n\t\tthis.content = document.createElement(\"ul\");\r\n\t\tthis.root.appendChild( this.content );\r\n\r\n\t\tthis.is_open = false;\r\n\t\tthis.auto_open = options.auto_open || false;\r\n\t\tthis.sort_entries = options.sort_entries || false;\r\n\t}\r\n\r\n\tMenubar.closing_time = 500;\r\n\r\n\tMenubar.prototype.clear = function()\r\n\t{\r\n\t\tthis.content.innerHTML = \"\";\r\n\t\tthis.menu = [];\r\n\t\tthis.panels = [];\r\n\t}\r\n\r\n\tMenubar.prototype.attachToPanel = function(panel)\r\n\t{\r\n\t\tpanel.content.insertBefore( this.root, panel.content.firstChild );\r\n\t}\r\n\r\n\tMenubar.prototype.add = function( path, data )\r\n\t{\r\n\t\tdata = data || {};\r\n\r\n\t\tif( typeof(data) == \"function\" )\r\n\t\t\tdata = { callback: data };\r\n\r\n\t\tvar prev_length = this.menu.length;\r\n\r\n\t\tvar tokens = path.split(\"/\");\r\n\t\tvar current_token = 0;\r\n\t\tvar current_pos = 0;\r\n\t\tvar menu = this.menu;\r\n\t\tvar last_item = null;\r\n\r\n\t\twhile( menu )\r\n\t\t{\r\n\t\t\tif(current_token > 5)\r\n\t\t\t\tthrow(\"Error: Menubar too deep\");\r\n\t\t\t//token not found in this menu, create it\r\n\t\t\tif( menu.length == current_pos )\r\n\t\t\t{\r\n\t\t\t\tvar v = { parent: last_item, children: [] };\r\n\t\t\t\tlast_item = v;\r\n\t\t\t\tif(current_token == tokens.length - 1)\r\n\t\t\t\t\tv.data = data;\r\n\r\n\t\t\t\tv.disable = function() { if( this.data ) this.data.disabled = true; }\r\n\t\t\t\tv.enable = function() { if( this.data ) delete this.data.disabled; }\r\n\r\n\t\t\t\tv.name = tokens[ current_token ];\r\n\t\t\t\tmenu.push( v );\r\n\t\t\t\tcurrent_token++;\r\n\t\t\t\tif( current_token == tokens.length )\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tv.children = [];\r\n\t\t\t\tmenu = v.children;\r\n\t\t\t\tcurrent_pos = 0;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t//token found in this menu, get inside for next token\r\n\t\t\tif( menu[ current_pos ] && tokens[ current_token ] == menu[ current_pos ].name )\r\n\t\t\t{\r\n\t\t\t\tif(current_token < tokens.length - 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tlast_item = menu[ current_pos ];\r\n\t\t\t\t\tmenu = menu[ current_pos ].children;\r\n\t\t\t\t\tcurrent_pos = 0;\r\n\t\t\t\t\tcurrent_token++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\telse //last token\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn(\"Warning: Adding menu that already exists: \" + path );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrent_pos++;\r\n\t\t}\r\n\r\n\t\tif(prev_length != this.menu.length)\r\n\t\t\tthis.updateMenu();\r\n\t};\r\n\r\n\tMenubar.prototype.remove = function( path )\r\n\t{\r\n\t\tvar menu = this.findMenu( path );\r\n\t\tif(!menu)\r\n\t\t\treturn;\r\n\t\tif(!menu.parent || !menu.parent.children)\r\n\t\t\treturn console.warn(\"menu without parent?\");\r\n\t\t\r\n\t\tvar index = menu.parent.children.indexOf( menu );\r\n\t\tif(index != -1)\r\n\t\t\tmenu.parent.children.splice( index, 1 );\r\n\t},\r\n\r\n\tMenubar.prototype.separator = function( path, order )\r\n\t{\r\n\t\tvar menu = this.findMenu( path );\r\n\t\tif(!menu)\r\n\t\t\treturn;\r\n\t\tmenu.children.push( {separator: true, order: order || 10 } );\r\n\t}\r\n\r\n\t//returns the menu entry that matches this path\r\n\tMenubar.prototype.findMenu = function( path )\r\n\t{\r\n\t\tvar tokens = path.split(\"/\");\r\n\t\tvar current_token = 0;\r\n\t\tvar current_pos = 0;\r\n\t\tvar menu = this.menu;\r\n\r\n\t\twhile( menu )\r\n\t\t{\r\n\t\t\t//no more tokens, return last found menu\r\n\t\t\tif(current_token == tokens.length)\r\n\t\t\t\treturn menu;\r\n\r\n\t\t\t//this menu doesnt have more entries\r\n\t\t\tif(menu.length <= current_pos)\r\n\t\t\t\treturn null;\r\n\r\n\t\t\tif(tokens[ current_token ] == \"*\")\r\n\t\t\t\treturn menu[ current_pos ].children;\r\n\r\n\t\t\t//token found in this menu, get inside for next token\r\n\t\t\tif( tokens[ current_token ] == menu[ current_pos ].name )\r\n\t\t\t{\r\n\t\t\t\tif(current_token == tokens.length - 1) //last token\r\n\t\t\t\t{\r\n\t\t\t\t\treturn menu[ current_pos ];\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tmenu = menu[ current_pos ].children;\r\n\t\t\t\t\tcurrent_pos = 0;\r\n\t\t\t\t\tcurrent_token++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//check next entry in this menu\r\n\t\t\tcurrent_pos++;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//update top main menu\r\n\tMenubar.prototype.updateMenu = function()\r\n\t{\r\n\t\tvar that = this;\r\n\r\n\t\tthis.content.innerHTML = \"\";\r\n\t\tfor(var i in this.menu)\r\n\t\t{\r\n\t\t\tvar element = document.createElement(\"li\");\r\n\t\t\telement.innerHTML = \"<span class='icon'></span><span class='name'>\" + this.menu[i].name + \"</span>\";\r\n\t\t\tthis.content.appendChild(element);\r\n\t\t\telement.data = this.menu[i];\r\n\t\t\tthis.menu[i].element = element;\r\n\r\n\t\t\t/* ON CLICK TOP MAIN MENU ITEM */\r\n\t\t\telement.addEventListener(\"click\", function(e) {\r\n\t\t\t\tvar item = this.data;\r\n\r\n\t\t\t\tif(item.data && item.data.callback && typeof(item.data.callback) == \"function\")\r\n\t\t\t\t\titem.data.callback(item.data);\r\n\r\n\t\t\t\tif(!that.is_open)\r\n\t\t\t\t{\r\n\t\t\t\t\tthat.is_open = true;\r\n\t\t\t\t\tthat.showMenu( item, e, this );\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthat.is_open = false;\r\n\t\t\t\t\tthat.hidePanels();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\telement.addEventListener(\"mouseover\", function(e) {\r\n\t\t\t\tthat.hidePanels();\r\n\t\t\t\tif(that.is_open || that.auto_open)\r\n\t\t\t\t\tthat.showMenu( this.data, e, this );\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tMenubar.prototype.hidePanels = function() {\r\n\t\tif(!this.panels.length)\r\n\t\t\treturn;\r\n\r\n\t\tfor(var i in this.panels)\r\n\t\t\tLiteGUI.remove(this.panels[i]);\r\n\t\tthis.panels = [];\r\n\t}\r\n\r\n\t//Create the panel with the drop menu\r\n\tMenubar.prototype.showMenu = function(menu, e, root, is_submenu) {\r\n\r\n\t\tif(!is_submenu)\r\n\t\t\tthis.hidePanels();\r\n\r\n\t\tif(!menu.children || !menu.children.length)\r\n\t\t\treturn;\r\n\r\n\t\tvar that = this;\r\n\t\tif(that.closing_by_leave)\r\n\t\t\tclearInterval(that.closing_by_leave);\r\n\r\n\t\tvar element = document.createElement(\"div\");\r\n\t\telement.className = \"litemenubar-panel\";\r\n\r\n\t\tvar sorted_entries = [];\r\n\t\tfor(var i in menu.children)\r\n\t\t\tsorted_entries.push(menu.children[i]);\r\n\r\n\t\tif(this.sort_entries)\r\n\t\t\tsorted_entries.sort(function(a,b) {\r\n\t\t\t\tvar a_order = 10;\r\n\t\t\t\tvar b_order = 10;\r\n\t\t\t\tif(a && a.data && a.data.order != null) a_order = a.data.order;\r\n\t\t\t\tif(a && a.separator && a.order != null) a_order = a.order;\r\n\t\t\t\tif(b && b.data && b.data.order != null) b_order = b.data.order;\r\n\t\t\t\tif(b && b.separator && b.order != null) b_order = b.order;\r\n\t\t\t\treturn a_order - b_order;\r\n\t\t\t});\r\n\r\n\t\tfor(var i in sorted_entries)\r\n\t\t{\r\n\t\t\tvar item = document.createElement(\"p\");\r\n\t\t\tvar menu_item = sorted_entries[i];\r\n\r\n\t\t\titem.className = 'litemenu-entry ' + ( item.children ? \" submenu\" : \"\" );\r\n\t\t\tvar has_submenu = menu_item.children && menu_item.children.length;\r\n\r\n\t\t\tif(has_submenu)\r\n\t\t\t\titem.classList.add(\"has_submenu\");\r\n\r\n\t\t\tif(menu_item && menu_item.name)\r\n\t\t\t\titem.innerHTML = \"<span class='icon'></span><span class='name'>\" + menu_item.name + (has_submenu ? \"<span class='more'>+</span>\":\"\") + \"</span>\";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\titem.classList.add(\"separator\");\r\n\t\t\t\t//item.innerHTML = \"<span class='separator'></span>\";\r\n\t\t\t}\r\n\r\n\t\t\titem.data = menu_item;\r\n\r\n\t\t\t//check if it has to show the item being 'checked'\r\n\t\t\tif( item.data.data )\r\n\t\t\t{\r\n\t\t\t\tvar data = item.data.data;\r\n\r\n\t\t\t\tvar checked = (data.type == \"checkbox\" && data.instance && data.property && data.instance[ data.property ] == true) || \r\n\t\t\t\t\tdata.checkbox == true ||\r\n\t\t\t\t\t(data.instance && data.property && data.hasOwnProperty(\"value\") && data.instance[data.property] == data.value) ||\r\n\t\t\t\t\t(typeof( data.isChecked ) == \"function\" && data.isChecked.call(data.instance, data) );\r\n\r\n\t\t\t\tif(checked)\r\n\t\t\t\t\titem.className += \" checked\";\r\n\r\n\t\t\t\tif(data.disabled)\r\n\t\t\t\t\titem.className += \" disabled\";\r\n\t\t\t}\r\n\r\n\t\t\t/* ON CLICK SUBMENU ITEM */\r\n\t\t\titem.addEventListener(\"click\",function(){\r\n\t\t\t\tvar item = this.data;\r\n\t\t\t\tif(item.data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(item.data.disabled)\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t//to change variables directly\r\n\t\t\t\t\tif(item.data.instance && item.data.property)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif( item.data.type == \"checkbox\" )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\titem.data.instance[item.data.property] = !item.data.instance[item.data.property];\r\n\t\t\t\t\t\t\tif(\titem.data.instance[item.data.property] )\r\n\t\t\t\t\t\t\t\tthis.classList.add(\"checked\");\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tthis.classList.remove(\"checked\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if( item.data.hasOwnProperty(\"value\") )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\titem.data.instance[item.data.property] = item.data.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//to have a checkbox behaviour\r\n\t\t\t\t\tif(item.data.checkbox != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\titem.data.checkbox = !item.data.checkbox;\r\n\t\t\t\t\t\tif(\titem.data.checkbox )\r\n\t\t\t\t\t\t\tthis.classList.add(\"checked\");\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tthis.classList.remove(\"checked\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//execute a function\r\n\t\t\t\t\tif(item.data.callback && typeof(item.data.callback) == \"function\")\r\n\t\t\t\t\t\titem.data.callback(item.data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//more menus\r\n\t\t\t\tif(item.children && item.children.length)\r\n\t\t\t\t{\r\n\t\t\t\t\tthat.showMenu( item, e, this, true );\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthat.is_open = false;\r\n\t\t\t\t\tthat.hidePanels();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\titem.addEventListener(\"mouseenter\",function(e){\r\n\t\t\t\t/*\r\n\t\t\t\tif( that.auto_open && this.classList.contains(\"has_submenu\") )\r\n\t\t\t\t\tLiteGUI.trigger( this, \"click\" );\r\n\t\t\t\t*/\r\n\t\t\t});\r\n\r\n\t\t\telement.appendChild( item );\r\n\t\t}\r\n\r\n\t\telement.addEventListener(\"mouseleave\",function(e){\r\n\t\t\r\n\t\t\tif(that.closing_by_leave)\r\n\t\t\t\tclearInterval(that.closing_by_leave);\r\n\r\n\t\t\tthat.closing_by_leave = setTimeout( function() { \r\n\t\t\t\tthat.is_open = false;\r\n\t\t\t\tthat.hidePanels();\r\n\t\t\t},LiteGUI.Menubar.closing_time);\r\n\t\t});\r\n\r\n\t\telement.addEventListener(\"mouseenter\",function(e){\r\n\t\t\tif(that.closing_by_leave)\r\n\t\t\t\tclearInterval(that.closing_by_leave);\r\n\t\t\tthat.closing_by_leave = null;\r\n\t\t});\r\n\r\n\t\t//compute X and Y for menu\r\n\t\tvar box = root.getBoundingClientRect();\r\n\t\telement.style.left = box.left + ( is_submenu ? 200 : 0 ) + \"px\";\r\n\t\telement.style.top = box.top + box.height + ( is_submenu ? -20 : 10 ) + \"px\";\r\n\t\t/* animation, not working well, flickers\r\n\t\telement.style.opacity = \"0.1\";\r\n\t\telement.style.transform = \"translate(0,-10px)\";\r\n\t\telement.style.transition = \"all 0.2s\";\r\n\t\tsetTimeout( function(){ \r\n\t\t\telement.style.opacity = \"1\"; \r\n\t\t\telement.style.transform = \"translate(0,0)\";\r\n\t\t},1);\r\n\t\t*/\r\n\r\n\t\tthis.panels.push(element);\r\n\t\tdocument.body.appendChild( element );\r\n\t}\r\n\r\n\treturn LiteGUI.Menubar = Menubar;\r\n});\n//enclose in a scope\r\ndefine('skylark-litegui/Panel',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\t/****************** PANEL **************/\r\n\tfunction Panel(id, options)\r\n\t{\r\n\t\tthis._ctor(id,options);\r\n\t}\r\n\r\n\tPanel.title_height = \"20px\";\r\n\r\n\tPanel.prototype._ctor = function(id, options)\r\n\t{\r\n\t\tif(!options && id && id.constructor !== String)\r\n\t\t{\r\n\t\t\toptions = id;\r\n\t\t\tid = null;\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tthis.content = options.content || \"\";\r\n\r\n\t\tvar root = this.root = document.createElement(\"div\");\r\n\t\tif(id)\r\n\t\t\troot.id = id;\r\n\r\n\t\troot.className = \"litepanel \" + (options.className || \"\");\r\n\t\troot.data = this;\r\n\r\n\t\tvar code = \"\";\r\n\t\tif(options.title)\r\n\t\t\tcode += \"<div class='panel-header'>\"+options.title+\"</div>\";\r\n\t\tcode += \"<div class='content'>\"+this.content+\"</div>\";\r\n\t\tcode += \"<div class='panel-footer'></div>\";\r\n\t\troot.innerHTML = code;\r\n\r\n\t\tif(options.title)\r\n\t\t\tthis.header = this.root.querySelector(\".panel-header\");\r\n\r\n\t\tthis.content = this.root.querySelector(\".content\");\r\n\t\tthis.footer = this.root.querySelector(\".panel-footer\");\r\n\r\n\t\tif(options.width)\r\n\t\t\tthis.root.style.width = LiteGUI.sizeToCSS( options.width );\r\n\t\tif(options.height)\r\n\t\t\tthis.root.style.height = LiteGUI.sizeToCSS( options.height );\r\n\t\tif(options.position)\r\n\t\t{\r\n\t\t\tthis.root.style.position = \"absolute\";\r\n\t\t\tthis.root.style.left = LiteGUI.sizeToCSS( options.position[0] );\r\n\t\t\tthis.root.style.top = LiteGUI.sizeToCSS( options.position[1] );\r\n\t\t}\r\n\r\n\t\t//if(options.scroll == false)\tthis.content.style.overflow = \"hidden\";\r\n\t\tif(options.scroll == true)\r\n\t\t\tthis.content.style.overflow = \"auto\";\r\n\t}\r\n\r\n\tPanel.prototype.add = function( litegui_item )\r\n\t{\r\n\t\tthis.content.appendChild( litegui_item.root );\r\n\t}\r\n\r\n\tPanel.prototype.clear = function()\r\n\t{\r\n\t\twhile (this.content.firstChild)\r\n\t\t\tthis.content.removeChild(this.content.firstChild);\r\n\t}\r\n\r\n\treturn LiteGUI.Panel = Panel;\r\n});\n//enclose in a scope\r\n\r\ndefine('skylark-litegui/Split',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\t\r\n\t/****************** AREA **************/\r\n\t/** An Area is am streched container.\r\n\t* Areas can be split several times horizontally or vertically to fit different colums or rows\r\n\t*\r\n\t* @class Area\r\n\t* @constructor\r\n\t* @param {Object} options\r\n\t*/\r\n\tfunction Area( options, legacy )\r\n\t{\r\n\t\t//for legacy code\r\n\t\tif( (options && options.constructor === String) || legacy )\r\n\t\t{\r\n\t\t\tvar id = options;\r\n\t\t\toptions = legacy || {};\r\n\t\t\toptions.id = id;\r\n\t\t\tconsole.warn(\"LiteGUI.Area legacy parameter, use options as first parameter instead of id.\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\t/* the root element containing all sections */\r\n\t\tvar root = document.createElement(\"div\");\r\n\t\troot.className = \"litearea\";\r\n\t\tif(options.id)\r\n\t\t\troot.id = options.id;\r\n\t\tif(options.className)\r\n\t\t\troot.className +=  \" \" + options.className;\r\n\r\n\t\tthis.root = root;\r\n\t\tthis.root.litearea = this; //dbl link\r\n\r\n\t\tvar width = options.width || \"100%\";\r\n\t\tvar height = options.height || \"100%\";\r\n\r\n\t\tif( width < 0 )\r\n\t\t\twidth = 'calc( 100% - '+Math.abs(width)+'px)';\r\n\t\tif( height < 0 )\r\n\t\t\theight = 'calc( 100% - '+ Math.abs(height)+'px)';\r\n\r\n\t\troot.style.width = width;\r\n\t\troot.style.height = height;\r\n\r\n\t\tthis.options = options;\r\n\r\n\t\tvar that = this;\r\n\t\tthis._computed_size = [ this.root.offsetWidth, this.root.offserHeight ];\r\n\r\n\t\tvar content = document.createElement(\"div\");\r\n\t\tif(options.content_id)\r\n\t\t\tcontent.id = options.content_id;\r\n\t\tcontent.className = \"liteareacontent\";\r\n\t\tcontent.style.width = \"100%\";\r\n\t\tcontent.style.height = \"100%\";\r\n\t\tthis.root.appendChild( content );\r\n\t\tthis.content = content;\r\n\r\n\t\tthis.split_direction = \"none\";\r\n\t\tthis.sections = [];\r\n\r\n\t\tif(options.autoresize)\r\n\t\t\tLiteGUI.bind( LiteGUI, \"resized\", function() { \r\n\t\t\t\tthat.onResize(); \r\n\t\t\t});\r\n\t}\r\n\r\n\tArea.VERTICAL = \"vertical\";\r\n\tArea.HORIZONTAL = \"horizontal\";\r\n\r\n\tArea.splitbar_size = 4;\r\n\r\n\t/* get container of the section */\r\n\tArea.prototype.getSection = function(num)\r\n\t{\r\n\t\tnum = num || 0;\r\n\t\tif(this.sections.length > num)\r\n\t\t\treturn this.sections[num];\r\n\t\treturn null;\r\n\t}\r\n\r\n\tArea.prototype.onResize = function(e)\r\n\t{\r\n\t\tvar computed_size = [ this.root.offsetWidth, this.root.offsetHeight ];\r\n\t\tif( e && this._computed_size && computed_size[0] == this._computed_size[0] && computed_size[1] == this._computed_size[1])\r\n\t\t\treturn;\r\n\r\n\t\tthis.sendResizeEvent(e);\r\n\t}\r\n\r\n\t//sends the resize event to all the sections\r\n\tArea.prototype.sendResizeEvent = function(e)\r\n\t{\r\n\t\tif(this.sections.length)\r\n\t\t\tfor(var i in this.sections)\r\n\t\t\t{\r\n\t\t\t\tvar section = this.sections[i];\r\n\t\t\t\tsection.onResize(e);\r\n\t\t\t}\r\n\t\telse //send it to the children\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < this.root.childNodes.length; j++)\r\n\t\t\t{\r\n\t\t\t\tvar element = this.root.childNodes[j];\r\n\t\t\t\tif(element.litearea)\r\n\t\t\t\t\telement.litearea.onResize();\r\n\t\t\t\telse\r\n\t\t\t\t\tLiteGUI.trigger( element, \"resize\" );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//inner callback\r\n\t\tif( this.onresize )\r\n\t\t\tthis.onresize();\r\n\t}\r\n\r\n\tArea.prototype.getWidth = function()\r\n\t{\r\n\t\treturn this.root.offsetWidth;\r\n\t}\r\n\r\n\tArea.prototype.getHeight = function()\r\n\t{\r\n\t\treturn this.root.offsetHeight;\r\n\t}\r\n\r\n\tArea.prototype.isVisible = function()\r\n\t{\r\n\t\treturn this.root.style.display != \"none\";\t\r\n\t}\r\n\r\n\tArea.prototype.adjustHeight = function()\r\n\t{\r\n\t\tif(!this.root.parentNode)\r\n\t\t{\r\n\t\t\tconsole.error(\"Cannot adjust height of LiteGUI.Area without parent\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//check parent height\r\n\t\tvar h = this.root.parentNode.offsetHeight;\r\n\r\n\t\t//check position\r\n\t\tvar y = this.root.getClientRects()[0].top;\r\n\r\n\t\t//adjust height\r\n\t\tthis.root.style.height = \"calc( 100% - \" + y + \"px )\";\r\n\t}\r\n\r\n\tArea.prototype.split = function( direction, sizes, editable )\r\n\t{\r\n\t\tif( !direction || direction.constructor !== String )\r\n\t\t\tthrow (\"First parameter must be a string: 'vertical' or 'horizontal'\");\r\n\r\n\t\tif( !sizes )\r\n\t\t\tsizes = [\"50%\",null];\r\n\r\n\t\tif( direction != \"vertical\" && direction != \"horizontal\" )\r\n\t\t\tthrow (\"First parameter must be a string: 'vertical' or 'horizontal'\");\r\n\r\n\t\tif(this.sections.length)\r\n\t\t\tthrow \"cannot split twice\";\r\n\r\n\t\t//create areas\r\n\t\tvar area1 = new LiteGUI.Area({ content_id: this.content.id });\r\n\t\tarea1.root.style.display = \"inline-block\";\r\n\t\tvar area2 = new LiteGUI.Area();\r\n\t\tarea2.root.style.display = \"inline-block\";\r\n\r\n\t\tvar splitinfo = \"\";\r\n\t\tvar splitbar = null;\r\n\t\tvar dynamic_section = null;\r\n\t\tif(editable)\r\n\t\t{\r\n\t\t\tsplitinfo = \" - \" + (Area.splitbar_size + 2) +\"px\"; //2 px margin ¿?\r\n\t\t\tsplitbar = document.createElement(\"div\");\r\n\t\t\tsplitbar.className = \"litesplitbar \" + direction;\r\n\t\t\tif(direction == \"vertical\")\r\n\t\t\t\tsplitbar.style.height = Area.splitbar_size + \"px\";\r\n\t\t\telse\r\n\t\t\t\tsplitbar.style.width = Area.splitbar_size + \"px\";\r\n\t\t\tthis.splitbar = splitbar;\r\n\t\t\tsplitbar.addEventListener(\"mousedown\", inner_mousedown);\r\n\t\t}\r\n\r\n\t\tsizes = sizes || [\"50%\",null];\r\n\r\n\t\tif(direction == \"vertical\")\r\n\t\t{\r\n\t\t\tarea1.root.style.width = \"100%\";\r\n\t\t\tarea2.root.style.width = \"100%\";\r\n\r\n\t\t\tif(sizes[0] == null)\r\n\t\t\t{\r\n\t\t\t\tvar h = sizes[1];\r\n\t\t\t\tif(typeof(h) == \"number\")\r\n\t\t\t\t\th = sizes[1] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.height = \"-moz-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"-webkit-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = h;\r\n\t\t\t\tarea2.size = h;\r\n\t\t\t\tdynamic_section = area1;\r\n\t\t\t}\r\n\t\t\telse if(sizes[1] == null)\r\n\t\t\t{\r\n\t\t\t\tvar h = sizes[0];\r\n\t\t\t\tif(typeof(h) == \"number\")\r\n\t\t\t\t\th = sizes[0] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.height = h;\r\n\t\t\t\tarea1.size = h;\r\n\t\t\t\tarea2.root.style.height = \"-moz-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"-webkit-calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"calc( 100% - \" + h + splitinfo + \" )\";\r\n\t\t\t\tdynamic_section = area2;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar h1 = sizes[0];\r\n\t\t\t\tif(typeof(h1) == \"number\")\r\n\t\t\t\t\th1 = sizes[0] + \"px\";\r\n\t\t\t\tvar h2 = sizes[1];\r\n\t\t\t\tif(typeof(h2) == \"number\")\r\n\t\t\t\t\th2 = sizes[1] + \"px\";\r\n\t\t\t\tarea1.root.style.height = h1;\r\n\t\t\t\tarea1.size = h1;\r\n\t\t\t\tarea2.root.style.height = h2;\r\n\t\t\t\tarea2.size = h2;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse //horizontal\r\n\t\t{\r\n\t\t\tarea1.root.style.height = \"100%\";\r\n\t\t\tarea2.root.style.height = \"100%\";\r\n\r\n\t\t\tif(sizes[0] == null)\r\n\t\t\t{\r\n\t\t\t\tvar w = sizes[1];\r\n\t\t\t\tif(typeof(w) == \"number\")\r\n\t\t\t\t\tw = sizes[1] + \"px\";\r\n\t\t\t\tarea1.root.style.width = \"-moz-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"-webkit-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = w;\r\n\t\t\t\tarea2.size = sizes[1];\r\n\t\t\t\tdynamic_section = area1;\r\n\t\t\t}\r\n\t\t\telse if(sizes[1] == null)\r\n\t\t\t{\r\n\t\t\t\tvar w = sizes[0];\r\n\t\t\t\tif(typeof(w) == \"number\")\r\n\t\t\t\t\tw = sizes[0] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.width = w;\r\n\t\t\t\tarea1.size = w;\r\n\t\t\t\tarea2.root.style.width = \"-moz-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"-webkit-calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"calc( 100% - \" + w + splitinfo + \" )\";\r\n\t\t\t\tdynamic_section = area2;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar w1 = sizes[0];\r\n\t\t\t\tif(typeof(w1) == \"number\")\r\n\t\t\t\t\tw1 = sizes[0] + \"px\";\r\n\t\t\t\tvar w2 = sizes[1];\r\n\t\t\t\tif(typeof(w2) == \"number\")\r\n\t\t\t\t\tw2 = sizes[1] + \"px\";\r\n\r\n\t\t\t\tarea1.root.style.width = w1;\r\n\t\t\t\tarea1.size = w1;\r\n\t\t\t\tarea2.root.style.width = w2;\r\n\t\t\t\tarea2.size = w2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tarea1.root.removeChild( area1.content );\r\n\t\tarea1.root.appendChild( this.content );\r\n\t\tarea1.content = this.content;\r\n\r\n\t\tthis.root.appendChild( area1.root );\r\n\t\tif(splitbar)\r\n\t\t\tthis.root.appendChild( splitbar );\r\n\t\tthis.root.appendChild( area2.root );\r\n\r\n\t\tthis.sections = [area1, area2];\r\n\t\tthis.dynamic_section = dynamic_section;\r\n\t\tthis.direction = direction;\r\n\r\n\t\t//SPLITTER DRAGGER INTERACTION\r\n\t\tvar that = this;\r\n\t\tvar last_pos = [0,0];\r\n\t\tfunction inner_mousedown(e)\r\n\t\t{\r\n\t\t\tvar doc = that.root.ownerDocument;\r\n\t\t\tdoc.addEventListener(\"mousemove\",inner_mousemove);\r\n\t\t\tdoc.addEventListener(\"mouseup\",inner_mouseup);\r\n\t\t\tlast_pos[0] = e.pageX;\r\n\t\t\tlast_pos[1] = e.pageY;\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\tfunction inner_mousemove(e)\r\n\t\t{\r\n\t\t\tif(direction == \"horizontal\")\r\n\t\t\t{\r\n\t\t\t\tif (last_pos[0] != e.pageX)\r\n\t\t\t\t\tthat.moveSplit(last_pos[0] - e.pageX);\r\n\t\t\t}\r\n\t\t\telse if(direction == \"vertical\")\r\n\t\t\t{\r\n\t\t\t\tif (last_pos[1] != e.pageY)\r\n\t\t\t\t\tthat.moveSplit(e.pageY - last_pos[1]);\r\n\t\t\t}\r\n\r\n\t\t\tlast_pos[0] = e.pageX;\r\n\t\t\tlast_pos[1] = e.pageY;\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tif(that.options.immediateResize || that.options.inmediateResize) //inmediate is for legacy...\r\n\t\t\t\tthat.onResize();\r\n\t\t}\r\n\r\n\t\tfunction inner_mouseup(e)\r\n\t\t{\r\n\t\t\tvar doc = that.root.ownerDocument;\r\n\t\t\tdoc.removeEventListener(\"mousemove\",inner_mousemove);\r\n\t\t\tdoc.removeEventListener(\"mouseup\",inner_mouseup);\r\n\t\t\tthat.onResize();\r\n\t\t}\r\n\t}\r\n\r\n\tArea.prototype.hide = function()\r\n\t{\r\n\t\tthis.root.style.display = \"none\";\r\n\t}\r\n\r\n\tArea.prototype.show = function()\r\n\t{\r\n\t\tthis.root.style.display = \"block\";\r\n\t}\r\n\r\n\tArea.prototype.showSection = function(num)\r\n\t{\r\n\t\tvar section = this.sections[num];\r\n\t\tvar size = 0;\r\n\r\n\t\tif( section && section.root.style.display != \"none\" )\r\n\t\t\treturn; //already visible\r\n\t\t\r\n\t\tif(this.direction == \"horizontal\")\r\n\t\t\tsize = section.root.style.width;\r\n\t\telse\r\n\t\t\tsize = section.root.style.height;\r\n\r\n\t\tif(size.indexOf(\"calc\") != -1)\r\n\t\t\tsize = \"50%\";\r\n\r\n\t\tfor(var i in this.sections)\r\n\t\t{\r\n\t\t\tvar section = this.sections[i];\r\n\r\n\t\t\tif(i == num)\r\n\t\t\t\tsection.root.style.display = \"inline-block\";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(this.direction == \"horizontal\")\r\n\t\t\t\t\tsection.root.style.width = \"calc( 100% - \" + size + \" - 5px)\";\r\n\t\t\t\telse\r\n\t\t\t\t\tsection.root.style.height = \"calc( 100% - \" + size + \" - 5px)\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.splitbar)\r\n\t\t\tthis.splitbar.style.display = \"inline-block\";\r\n\r\n\t\tthis.sendResizeEvent();\r\n\t}\r\n\r\n\tArea.prototype.hideSection = function(num)\r\n\t{\r\n\t\tfor(var i in this.sections)\r\n\t\t{\r\n\t\t\tvar section = this.sections[i];\r\n\r\n\t\t\tif(i == num)\r\n\t\t\t\tsection.root.style.display = \"none\";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(this.direction == \"horizontal\")\r\n\t\t\t\t\tsection.root.style.width = \"100%\";\r\n\t\t\t\telse\r\n\t\t\t\t\tsection.root.style.height = \"100%\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(this.splitbar)\r\n\t\t\tthis.splitbar.style.display = \"none\";\r\n\r\n\t\tthis.sendResizeEvent();\r\n\t}\r\n\r\n\tArea.prototype.moveSplit = function(delta)\r\n\t{\r\n\t\tif(!this.sections) return;\r\n\r\n\t\tvar area1 = this.sections[0];\r\n\t\tvar area2 = this.sections[1];\r\n\t\tvar splitinfo = \" - \"+ Area.splitbar_size +\"px\";\r\n\r\n\t\tvar min_size = this.options.minSplitSize || 10;\r\n\r\n\t\tif(this.direction == \"horizontal\")\r\n\t\t{\r\n\r\n\t\t\tif (this.dynamic_section == area1)\r\n\t\t\t{\r\n\t\t\t\tvar size = (area2.root.offsetWidth + delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea1.root.style.width = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar size = (area1.root.offsetWidth - delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea2.root.style.width = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.width = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.width = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.direction == \"vertical\")\r\n\t\t{\r\n\t\t\tif (this.dynamic_section == area1)\r\n\t\t\t{\r\n\t\t\t\tvar size = (area2.root.offsetHeight - delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea1.root.style.height = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar size = (area1.root.offsetHeight + delta);\r\n\t\t\t\tif(size < min_size)\r\n\t\t\t\t\tsize = min_size;\r\n\t\t\t\tarea2.root.style.height = \"-moz-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"-webkit-calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea2.root.style.height = \"calc( 100% - \" + size + \"px \" + splitinfo + \" )\";\r\n\t\t\t\tarea1.root.style.height = size + \"px\"; //other split\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tLiteGUI.trigger( this.root, \"split_moved\");\r\n\t\t//trigger split_moved event in all areas inside this area\r\n\t\tvar areas = this.root.querySelectorAll(\".litearea\");\r\n\t\tfor(var i = 0; i < areas.length; ++i)\r\n\t\t\tLiteGUI.trigger( areas[i], \"split_moved\" );\r\n\t}\r\n\r\n\tArea.prototype.addEventListener = function(a,b,c,d)\r\n\t{\r\n\t\treturn this.root.addEventListener(a,b,c,d);\r\n\t}\r\n\r\n\tArea.prototype.setAreaSize = function(area,size)\r\n\t{\r\n\t\tvar element = this.sections[1];\r\n\r\n\t\tvar splitinfo = \" - \"+Area.splitbar_size+\"px\";\r\n\t\telement.root.style.width = \"-moz-calc( 100% - \" + size + splitinfo + \" )\";\r\n\t\telement.root.style.width = \"-webkit-calc( 100% - \" + size + splitinfo + \" )\";\r\n\t\telement.root.style.width = \"calc( 100% - \" + size + splitinfo + \" )\";\r\n\t}\r\n\r\n\tArea.prototype.merge = function(main_section)\r\n\t{\r\n\t\tif(this.sections.length == 0) throw \"not splitted\";\r\n\r\n\t\tvar main = this.sections[main_section || 0];\r\n\r\n\t\tthis.root.appendChild( main.content );\r\n\t\tthis.content = main.content;\r\n\r\n\t\tthis.root.removeChild( this.sections[0].root );\r\n\t\tthis.root.removeChild( this.sections[1].root );\r\n\r\n\t\t/*\r\n\t\twhile(main.childNodes.length > 0)\r\n\t\t{\r\n\t\t\tvar e = main.childNodes[0];\r\n\t\t\tthis.root.appendChild(e);\r\n\t\t}\r\n\r\n\t\tthis.root.removeChild( this.sections[0].root );\r\n\t\tthis.root.removeChild( this.sections[1].root );\r\n\t\t*/\r\n\r\n\t\tthis.sections = [];\r\n\t\tthis._computed_size = null;\r\n\t\tthis.onResize();\r\n\t}\r\n\r\n\tArea.prototype.add = function(v)\r\n\t{\r\n\t\tif(typeof(v) == \"string\")\r\n\t\t{\r\n\t\t\tvar element = document.createElement(\"div\");\r\n\t\t\telement.innerHTML = v;\r\n\t\t\tv = element;\r\n\t\t}\r\n\r\n\t\tthis.content.appendChild( v.root || v );\r\n\t}\r\n\r\n\tArea.prototype.query = function(v)\r\n\t{\r\n\t\treturn this.root.querySelector(v);\r\n\t}\r\n\r\n\treturn LiteGUI.Area = Area;\r\n\r\n});\n//enclose in a scope\r\ndefine('skylark-litegui/Table',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\tfunction Table( options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tthis.root = document.createElement(\"table\");\r\n\t\tthis.root.classList.add(\"litetable\");\r\n\r\n\t\tthis.columns = [];\r\n\t\tthis.column_fields = [];\r\n\t\tthis.rows = [];\r\n\t\tthis.data = [];\r\n\r\n\t\tthis._must_update_header = true;\r\n\r\n\t\tif(options.colums)\r\n\t\t\tthis.setColumns(options.colums);\r\n\r\n\t\tif(options.scrollable)\r\n\t\t\tthis.root.style.overflow = \"auto\";\r\n\r\n\t\tif(options.height)\r\n\t\t\tthis.root.style.height = LiteGUI.sizeToCSS( options.height );\r\n\r\n\t\tif(options.columns)\r\n\t\t\tthis.setColumns( options.columns );\r\n\r\n\t\tif(options.rows)\r\n\t\t\tthis.setRows( options.data );\r\n\t}\r\n\r\n\tTable.prototype.setRows = function( data, reuse )\r\n\t{\r\n\t\tthis.data = data;\r\n\t\tthis.updateContent( reuse );\r\n\t}\r\n\r\n\tTable.prototype.addRow = function( row, skip_add )\r\n\t{\r\n\t\tvar tr = document.createElement(\"tr\");\r\n\r\n\t\t//create cells\r\n\t\tfor(var j = 0; j < this.column_fields.length; ++j)\r\n\t\t{\r\n\t\t\tvar td = document.createElement(\"td\");\r\n\r\n\t\t\tvar value = null;\r\n\r\n\t\t\tif(row.constructor === Array )\r\n\t\t\t\tvalue = row[ j ];\r\n\t\t\telse //object\r\n\t\t\t\tvalue = row[ this.column_fields[j] ];\r\n\t\t\tif(value === undefined)\r\n\t\t\t\tvalue = \"\";\r\n\r\n\t\t\ttd.innerHTML = value;\r\n\r\n\t\t\tvar column = this.columns[j];\r\n\t\t\tif(column === undefined)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif(column.className)\r\n\t\t\t\ttd.className = column.className;\r\n\t\t\tif(column.width)\r\n\t\t\t\ttd.style.width = column.width;\r\n\t\t\ttr.appendChild( td );\r\n\t\t}\r\n\r\n\t\tthis.root.appendChild( tr );\r\n\t\tthis.rows.push( tr );\r\n\t\tif(!skip_add)\r\n\t\t\tthis.data.push( row );\r\n\r\n\t\treturn tr;\r\n\t}\r\n\r\n\tTable.prototype.updateRow = function( index, row )\r\n\t{\r\n\t\tthis.data[ index ] = row;\r\n\r\n\t\tvar tr = this.rows[index];\r\n\t\tif(!tr)\r\n\t\t\treturn;\r\n\r\n\t\tvar cells = tr.querySelectorAll(\"td\");\r\n\t\tfor(var j = 0; j < cells.length; ++j)\r\n\t\t{\r\n\t\t\tvar column = this.columns[j];\r\n\r\n\t\t\tvar value = null;\r\n\r\n\t\t\tif(row.constructor === Array )\r\n\t\t\t\tvalue = row[ j ];\r\n\t\t\telse\r\n\t\t\t\tvalue = row[ column.field ];\r\n\r\n\t\t\tif(value === undefined)\r\n\t\t\t\tvalue = \"\";\r\n\r\n\t\t\tcells[j].innerHTML = value;\r\n\t\t}\r\n\t\treturn tr;\r\n\t}\r\n\r\n\tTable.prototype.updateCell = function( row, cell, data )\r\n\t{\r\n\t\tvar tr = this.rows[ row ];\r\n\t\tif(!tr)\r\n\t\t\treturn;\r\n\t\tvar cell = tr.childNodes[cell];\r\n\t\tif(!cell)\r\n\t\t\treturn;\r\n\t\tcell.innerHTML = data;\r\n\t\treturn cell;\r\n\t}\r\n\r\n\r\n\tTable.prototype.setColumns = function( columns )\r\n\t{\r\n\t\tthis.columns.length = 0;\r\n\t\tthis.column_fields.length = 0;\r\n\r\n\t\tvar avg_width = ((Math.floor(100 / columns.length)).toFixed(1)) + \"%\";\r\n\r\n\t\tvar rest = [];\r\n\r\n\t\tfor(var i = 0; i < columns.length; ++i)\r\n\t\t{\r\n\t\t\tvar c = columns[i];\r\n\r\n\t\t\tif( c === null || c === undefined )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//allow to pass just strings or numbers instead of objects\r\n\t\t\tif( c.constructor === String || c.constructor === Number )\r\n\t\t\t\tc = { name: String(c) };\r\n\r\n\t\t\tvar column = {\r\n\t\t\t\tname: c.name || \"\",\r\n\t\t\t\twidth: LiteGUI.sizeToCSS(c.width || avg_width),\r\n\t\t\t\tfield: (c.field || c.name || \"\").toLowerCase(),\r\n\t\t\t\tclassName: c.className\r\n\t\t\t};\r\n\r\n\t\t\t//last\r\n\t\t\tif(i == columns.length - 1)\r\n\t\t\t\tcolumn.width = \" calc( 100% - ( \" + rest.join(\" + \") + \" ) )\";\r\n\t\t\telse\r\n\t\t\t\trest.push( column.width );\r\n\r\n\t\t\tthis.columns.push( column );\r\n\t\t\tthis.column_fields.push( column.field );\r\n\t\t}\r\n\r\n\t\tthis._must_update_header = true;\r\n\t\tthis.updateContent();\r\n\t}\r\n\r\n\tTable.prototype.updateContent = function( reuse )\r\n\t{\r\n\t\tthis.root.innerHTML = \"\";\r\n\r\n\t\t//update header\r\n\t\tif(this._must_update_header)\r\n\t\t{\r\n\t\t\tthis.header = document.createElement(\"tr\");\r\n\t\t\tfor(var i = 0; i < this.columns.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar column = this.columns[i];\r\n\t\t\t\tvar th = document.createElement(\"th\");\r\n\t\t\t\tth.innerHTML = column.name;\r\n\t\t\t\tif(column.width)\r\n\t\t\t\t\tth.style.width = column.width;\r\n\t\t\t\tcolumn.th = th;\r\n\t\t\t\tthis.header.appendChild( th );\r\n\t\t\t}\r\n\t\t\tthis._must_update_header = false;\r\n\t\t}\r\n\t\tthis.root.appendChild( this.header );\r\n\r\n\t\tif(!this.data)\r\n\t\t\treturn;\r\n\r\n\t\tif(this.data.length != this.rows.length)\r\n\t\t\treuse = false;\r\n\r\n\t\tif(reuse)\r\n\t\t{\r\n\t\t\tfor(var i = 0; i < this.rows.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar data_row = this.data[i];\r\n\t\t\t\tvar tr = this.updateRow( i, data_row );\r\n\t\t\t\tthis.root.appendChild( tr );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.rows.length = 0;\r\n\r\n\t\t\t//create rows\r\n\t\t\tfor(var i = 0; i < this.data.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar row = this.data[i];\r\n\t\t\t\tthis.addRow( row, true );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\treturn LiteGUI.Table = Table;\r\n\r\n\r\n});\n/**************  ***************************/\r\ndefine('skylark-litegui/Tabs',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\t\r\n\r\n\t/**\r\n\t* Widget that contains several tabs and their content\r\n\t* Options:\r\n\t* - mode: \"vertical\",\"horizontal\"\r\n\t* - size\r\n\t* - width,height\r\n\t* - autoswitch: allow autoswitch (switch when mouse over)\r\n\t* @class Tabs\r\n\t* @constructor\r\n\t*/\r\n\tfunction Tabs( options, legacy )\r\n\t{\r\n\t\tif( legacy || (options && options.constructor === String) )\r\n\t\t{\r\n\t\t\tvar id = options;\r\n\t\t\toptions = legacy || {};\r\n\t\t\toptions.id = id;\r\n\t\t\tconsole.warn(\"LiteGUI.Tabs legacy parameter, use options as first parameter instead of id.\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\tthis.options = options;\r\n\r\n\t\tvar mode = this.mode = options.mode || \"horizontal\";\r\n\r\n\t\tvar root = document.createElement(\"DIV\");\r\n\t\tif(options.id) \r\n\t\t\troot.id = options.id;\r\n\t\troot.data = this;\r\n\t\troot.className = \"litetabs \" + mode;\r\n\t\tthis.root = root;\r\n\t\tthis.root.tabs = this;\r\n\r\n\t\tthis.current_tab = null; //current tab array [id, tab, content]\r\n\r\n\t\tif(mode == \"horizontal\")\r\n\t\t{\r\n\t\t\tif(options.size)\r\n\t\t\t{\r\n\t\t\t\tif(options.size == \"full\")\r\n\t\t\t\t\tthis.root.style.height = \"100%\";\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.root.style.height = options.size;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(mode == \"vertical\")\r\n\t\t{\r\n\t\t\tif(options.size)\r\n\t\t\t{\r\n\t\t\t\tif(options.size == \"full\")\r\n\t\t\t\t\tthis.root.style.width = \"100%\";\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.root.style.width = options.size;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(options.width)\r\n\t\t\tthis.root.style.width = options.width.constructor === Number ? options.width.toFixed(0) + \"px\" : options.width;\r\n\t\tif(options.height)\r\n\t\t\tthis.root.style.height = options.height.constructor === Number ? options.height.toFixed(0) + \"px\" : options.height;\r\n\r\n\t\t//container of tab elements\r\n\t\tvar list = document.createElement(\"UL\");\r\n\t\tlist.className = \"wtabcontainer\";\r\n\t\tif(mode == \"vertical\")\r\n\t\t\tlist.style.width = LiteGUI.Tabs.tabs_width + \"px\";\r\n\t\telse\r\n\t\t\tlist.style.height = LiteGUI.Tabs.tabs_height + \"px\";\r\n\r\n\t\t//allows to use the wheel to see hidden tabs\r\n\t\tlist.addEventListener(\"wheel\", onMouseWheel);\r\n\t\tlist.addEventListener(\"mousewheel\", onMouseWheel);\r\n\t\tfunction onMouseWheel(e){\r\n\t\t\tif(e.deltaY)\r\n\t\t\t\tlist.scrollLeft += e.deltaY;\r\n\t\t}\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.root.appendChild(this.list);\r\n\t\tthis.tabs_root = list;\r\n\r\n\t\tthis.tabs = {};\r\n\t\tthis.tabs_by_index = [];\r\n\t\tthis.selected = null;\r\n\r\n\t\tthis.onchange = options.callback;\r\n\r\n\t\tif(options.parent)\r\n\t\t\tthis.appendTo(options.parent);\r\n\t}\r\n\r\n\tTabs.tabs_width = 64;\r\n\tTabs.tabs_height = 26;\r\n\r\n\tTabs.prototype.show = function()\r\n\t{\r\n\t\tthis.root.style.display = \"block\";\r\n\t}\r\n\r\n\tTabs.prototype.hide = function()\r\n\t{\r\n\t\tthis.root.style.display = \"none\";\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* Returns the currently selected tab in the form of a tab object\r\n\t* @method getCurrentTab\r\n\t* @return {Object} the tab in the form of an object with {id,tab,content}\r\n\t*/\r\n\tTabs.prototype.getCurrentTab = function()\r\n\t{\r\n\t\tif(!this.current_tab)\r\n\t\t\treturn null;\r\n\t\treturn this.tabs[ this.current_tab[0] ];\r\n\t}\r\n\r\n\tTabs.prototype.getCurrentTabId = function()\r\n\t{\r\n\t\treturn this.current_tab[0];\r\n\t}\r\n\r\n\t/**\r\n\t* Returns the last tab pressed before this one. used to know from which tab we come\r\n\t* @method getCurrentTab\r\n\t* @return {Object} the tab in the form of an object with {id,tab,content}\r\n\t*/\r\n\tTabs.prototype.getPreviousTab = function()\r\n\t{\r\n\t\tif(!this.previous_tab)\r\n\t\t\treturn null;\r\n\t\treturn this.tabs[ this.previous_tab[0] ];\r\n\t}\r\n\r\n\tTabs.prototype.appendTo = function(parent, at_front)\r\n\t{\r\n\t\tif(at_front)\r\n\t\t\tparent.prepend(this.root);\r\n\t\telse\r\n\t\t\tparent.appendChild(this.root);\r\n\t}\r\n\r\n\t/**\r\n\t* Returns a tab given its id\r\n\t* @method getTab\r\n\t* @param {String} id tab id\r\n\t* @return {Object} the tab in the form of an object with {id,tab,content}\r\n\t*/\r\n\tTabs.prototype.getTab = function(id)\r\n\t{\r\n\t\treturn this.tabs[id];\r\n\t}\r\n\r\n\t/**\r\n\t* Returns a tab given its index in the tabs list\r\n\t* @method getTabByIndex\r\n\t* @param {Number} index\r\n\t* @return {Object} the tab in the form of an object with {id,tab,content}\r\n\t*/\r\n\tTabs.prototype.getTabByIndex = function(index)\r\n\t{\r\n\t\treturn this.tabs_by_index[index];\r\n\t}\r\n\r\n\t/**\r\n\t* Returns how many tabs there is\r\n\t* @method getNumOfTabs\r\n\t* @return {number} number of tabs\r\n\t*/\r\n\tTabs.prototype.getNumOfTabs = function()\r\n\t{\r\n\t\tvar num = 0;\r\n\t\tfor(var i in this.tabs)\r\n\t\t\tnum++;\r\n\t\treturn num;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns the content HTML element of a tab\r\n\t* @method getTabContent\r\n\t* @param {String} id\r\n\t* @return {HTMLEntity} content\r\n\t*/\r\n\tTabs.prototype.getTabContent = function(id)\r\n\t{\r\n\t\tvar tab = this.tabs[id];\r\n\t\tif(tab)\r\n\t\t\treturn tab.content;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns the index of a tab (the position in the tabs list)\r\n\t* @method getTabIndex\r\n\t* @param {String} id\r\n\t* @return {number} index\r\n\t*/\r\n\tTabs.prototype.getTabIndex = function(id)\r\n\t{\r\n\t\tvar tab = this.tabs[id];\r\n\t\tif(!tab)\r\n\t\t\treturn -1;\r\n\t\tfor(var i = 0; i < this.list.childNodes.length; i++)\r\n\t\t\tif( this.list.childNodes[i] == tab.tab )\r\n\t\t\t\treturn i;\r\n\t\treturn -1;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* Create a new tab, where id is a unique identifier\r\n\t* @method addTab\r\n\t* @param {String} id could be null then a random id is generated\r\n\t* @param {Object} options { \r\n\t*\ttitle: tab text, \r\n\t*\tcallback: called when selected, \r\n\t*\tcallback_leave: callback when leaving, \r\n\t*   callback_context: on right click on tab\r\n\t*   callback_canopen: used to block if this tab can be opened or not (if it returns true then yes)\r\n\t*\tcontent: HTML content, \r\n\t*   closable: if it can be closed (callback is onclose), \r\n\t*\ttab_width: size of the tab,\r\n\t*\ttab_className: classes for the tab element,\r\n\t*\tid: content id,\r\n\t*\tsize: full means all,\r\n\t*\tmode: \"vertical\" or \"horizontal\",\r\n\t*\tbutton: if it is a button tab, not a selectable tab\r\n\t*\t}\r\n\t* @param {bool} skip_event prevent dispatching events\r\n\t* @return {Object} an object containing { id, tab, content }\r\n\t*/\r\n\tTabs.prototype.addTab = function( id, options, skip_event )\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tif(typeof(options) == \"function\")\r\n\t\t\toptions = { callback: options };\r\n\r\n\t\tvar that = this;\r\n\t\tif(id === undefined || id === null)\r\n\t\t\tid = \"rand_\" + ((Math.random() * 1000000)|0);\r\n\r\n\t\t//the tab element\r\n\t\tvar element = document.createElement(\"LI\");\r\n\t\tvar safe_id = id.replace(/ /gi,\"_\");\r\n\t\telement.className = \"wtab wtab-\" + safe_id + \" \";\r\n\t\t//if(options.selected) element.className += \" selected\";\r\n\t\telement.dataset[\"id\"] = id;\r\n\t\telement.innerHTML = \"<span class='tabtitle'>\" + (options.title || id) + \"</span>\";\r\n\r\n\t\tif(options.button)\r\n\t\t\telement.className += \"button \";\r\n\t\tif(options.tab_className)\r\n\t\t\telement.className += options.tab_className;\r\n\t\tif(options.bigicon)\r\n\t\t\telement.innerHTML = \"<img class='tabbigicon' src='\" + options.bigicon+\"'/>\" + element.innerHTML;\r\n\t\tif(options.closable)\r\n\t\t{\r\n\t\t\telement.innerHTML += \"<span class='tabclose'>\" + LiteGUI.special_codes.close + \"</span>\";\r\n\t\t\telement.querySelector(\"span.tabclose\").addEventListener(\"click\", function(e) { \r\n\t\t\t\tthat.removeTab(id);\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t},true);\r\n\t\t}\r\n\t\t//WARNING: do not modify element.innerHTML or events will be lost\r\n\r\n\t\tif( options.index !== undefined )\r\n\t\t{\r\n\t\t\tvar after = this.list.childNodes[options.index];\r\n\t\t\tif(after)\r\n\t\t\t\tthis.list.insertBefore(element,after);\r\n\t\t\telse\r\n\t\t\t\tthis.list.appendChild(element);\r\n\t\t}\r\n\t\telse if( this.plus_tab )\r\n\t\t\tthis.list.insertBefore( element, this.plus_tab );\r\n\t\telse\r\n\t\t\tthis.list.appendChild(element);\r\n\r\n\t\tif(options.tab_width)\r\n\t\t{\r\n\t\t\telement.style.width = options.tab_width.constructor === Number ? ( options.tab_width.toFixed(0) + \"px\" ) : options.tab_width;\r\n\t\t\telement.style.minWidth = \"0\";\r\n\t\t}\r\n\r\n\t\tif(this.options.autoswitch)\r\n\t\t{\r\n\t\t\telement.classList.add(\"autoswitch\");\r\n\t\t\telement.addEventListener(\"dragenter\",function(e){\r\n\t\t\t\t//console.log(\"Enter\",this.dataset[\"id\"]);\r\n\t\t\t\tif(that._timeout_mouseover)\r\n\t\t\t\t\tclearTimeout(that._timeout_mouseover);\r\n\t\t\t\tthat._timeout_mouseover = setTimeout((function(){\r\n\t\t\t\t\tLiteGUI.trigger(this,\"click\");\r\n\t\t\t\t\tthat._timeout_mouseover = null;\r\n\t\t\t\t}).bind(this),500);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\telement.addEventListener(\"dragleave\",function(e){\r\n\t\t\t\t//console.log(\"Leave\",this.dataset[\"id\"]);\r\n\t\t\t\tif(that._timeout_mouseover)\r\n\t\t\t\t{\r\n\t\t\t\t\tclearTimeout(that._timeout_mouseover);\r\n\t\t\t\t\tthat._timeout_mouseover = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\t//the content of the tab\r\n\t\tvar content = document.createElement(\"div\");\r\n\t\tif(options.id)\r\n\t\t\tcontent.id = options.id;\r\n\r\n\t\tcontent.className = \"wtabcontent \" + \"wtabcontent-\" + safe_id + \" \" + (options.className || \"\");\r\n\t\tcontent.dataset[\"id\"] = id;\r\n\t\tcontent.style.display = \"none\";\r\n\r\n\t\t//adapt height\r\n\t\tif(this.mode == \"horizontal\")\r\n\t\t{\r\n\t\t\tif(options.size)\r\n\t\t\t{\r\n\t\t\t\tcontent.style.overflow = \"auto\";\r\n\t\t\t\tif(options.size == \"full\")\r\n\t\t\t\t{\r\n\t\t\t\t\tcontent.style.width = \"100%\";\r\n\t\t\t\t\tcontent.style.height = \"calc( 100% - \"+LiteGUI.Tabs.tabs_height+\"px )\"; //minus title\r\n\t\t\t\t\tcontent.style.height = \"-moz-calc( 100% - \"+LiteGUI.Tabs.tabs_height+\"px )\"; //minus title\r\n\t\t\t\t\tcontent.style.height = \"-webkit-calc( 100% - \"+LiteGUI.Tabs.tabs_height+\"px )\"; //minus title\r\n\t\t\t\t\t//content.style.height = \"-webkit-calc( 90% )\"; //minus title\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tcontent.style.height = options.size;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.mode == \"vertical\")\r\n\t\t{\r\n\t\t\tif(options.size)\r\n\t\t\t{\r\n\t\t\t\tcontent.style.overflow = \"auto\";\r\n\t\t\t\tif(options.size == \"full\")\r\n\t\t\t\t{\r\n\t\t\t\t\tcontent.style.height = \"100%\";\r\n\t\t\t\t\tcontent.style.width = \"calc( 100% - \"+LiteGUI.Tabs.tabs_width+\"px )\"; //minus title\r\n\t\t\t\t\tcontent.style.width = \"-moz-calc( 100% - \"+LiteGUI.Tabs.tabs_width+\"px )\"; //minus title\r\n\t\t\t\t\tcontent.style.width = \"-webkit-calc( 100% - \"+LiteGUI.Tabs.tabs_width+\"px )\"; //minus title\r\n\t\t\t\t\t//content.style.height = \"-webkit-calc( 90% )\"; //minus title\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tcontent.style.width = options.size;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//overwrite\r\n\t\tif(options.width !== undefined )\r\n\t\t\tcontent.style.width = typeof(options.width) === \"string\" ? options.width : options.width + \"px\";\r\n\t\tif(options.height !== undefined )\r\n\t\t\tcontent.style.height = typeof(options.height) === \"string\" ? options.height : options.height + \"px\";\r\n\r\n\t\t//add content\r\n\t\tif(options.content)\r\n\t\t{\r\n\t\t\tif (typeof(options.content) == \"string\")\r\n\t\t\t\tcontent.innerHTML = options.content;\r\n\t\t\telse\r\n\t\t\t\tcontent.appendChild(options.content);\r\n\t\t}\r\n\r\n\t\tthis.root.appendChild(content);\r\n\r\n\t\t//when clicked\r\n\t\tif(!options.button)\r\n\t\t\telement.addEventListener(\"click\", Tabs.prototype.onTabClicked );\r\n\t\telse\r\n\t\t\telement.addEventListener(\"click\", function(e){ \r\n\t\t\t\tvar tab_id = this.dataset[\"id\"];\r\n\t\t\t\tif(options.callback)\r\n\t\t\t\t\toptions.callback( tab_id, e );\r\n\t\t\t});\r\n\r\n\t\telement.options = options;\r\n\t\telement.tabs = this;\r\n\r\n\t\tvar title = element.querySelector(\"span.tabtitle\");\r\n\r\n\t\t//tab object\r\n\t\tvar tab_info = {\r\n\t\t\tid: id,\r\n\t\t\ttab: element,\r\n\t\t\tcontent: content,\r\n\t\t\ttitle: title,\r\n\t\t\tadd: function(v) { this.content.appendChild(v.root || v); },\r\n\t\t\tsetTitle: function( title )\t{ this.title.innerHTML = title; },\r\n\t\t\tclick: function(){ LiteGUI.trigger( this.tab, \"click\" ); },\r\n\t\t\tdestroy: function(){ that.removeTab(this.id) }\r\n\t\t};\r\n\r\n\t\tif(options.onclose)\r\n\t\t\ttab_info.onclose = options.onclose;\r\n\t\tthis.tabs[ id ] = tab_info;\r\n\r\n\t\tthis.recomputeTabsByIndex();\r\n\r\n\t\t//context menu\r\n\t\telement.addEventListener(\"contextmenu\", (function(e) { \r\n\t\t\tif(e.button != 2) //right button\r\n\t\t\t\treturn false;\r\n\t\t\te.preventDefault(); \r\n\t\t\tif(options.callback_context)\r\n\t\t\t\toptions.callback_context.call(tab_info);\r\n\t\t\treturn false;\r\n\t\t}).bind(this));\r\n\r\n\t\tif ( options.selected == true || this.selected == null )\r\n\t\t\tthis.selectTab( id, options.skip_callbacks );\r\n\r\n\t\treturn tab_info;\r\n\t}\r\n\r\n\tTabs.prototype.addPlusTab = function( callback )\r\n\t{\r\n\t\tif(this.plus_tab)\r\n\t\t\tconsole.warn(\"There is already a plus tab created in this tab widget\");\r\n\t\tthis.plus_tab = this.addTab( \"plus_tab\", { title: \"+\", tab_width: 20, button: true, callback: callback, skip_callbacks: true });\r\n\t}\r\n\r\n\tTabs.prototype.addButtonTab = function( id, title, callback )\r\n\t{\r\n\t\treturn this.addTab( id, { title: title, tab_width: 20, button: true, callback: callback, skip_callbacks: true });\r\n\t}\r\n\r\n\t//this is tab\r\n\tTabs.prototype.onTabClicked = function(e)\r\n\t{\r\n\t\t//skip if already selected\r\n\t\tif( this.classList.contains(\"selected\") ) \r\n\t\t\treturn;\r\n\r\n\t\tif(!this.parentNode)\r\n\t\t\treturn; //this could happend if it gets removed while being clicked (not common)\r\n\r\n\t\tvar options = this.options;\r\n\t\tvar tabs = this.parentNode.parentNode.tabs;\r\n\t\tif(!tabs)\r\n\t\t\tthrow(\"tabs not found\");\r\n\t\tvar that = tabs;\r\n\r\n\t\t//check if this tab is available\r\n\t\tif(options.callback_canopen && options.callback_canopen() == false)\r\n\t\t\treturn;\r\n\r\n\t\t//launch leaving current tab event\r\n\t\tif( that.current_tab && \r\n\t\t\tthat.current_tab[0] != tab_id && \r\n\t\t\tthat.current_tab[2] && \r\n\t\t\tthat.current_tab[2].callback_leave)\r\n\t\t\t\tthat.current_tab[2].callback_leave( that.current_tab[0], that.current_tab[1], that.current_tab[2] );\r\n\r\n\t\tvar tab_id = this.dataset[\"id\"];\r\n\t\tvar tab_content = null;\r\n\r\n\t\t//iterate tab labels\r\n\t\tfor(var i in that.tabs)\r\n\t\t{\r\n\t\t\tvar tab_info = that.tabs[i];\r\n\t\t\tif( i == tab_id )\r\n\t\t\t{\r\n\t\t\t\ttab_info.selected = true;\r\n\t\t\t\ttab_info.content.style.display = \"\";\r\n\t\t\t\ttab_content = tab_info.content;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdelete tab_info.selected;\r\n\t\t\t\ttab_info.content.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar list = that.list.querySelectorAll(\"li.wtab\");\r\n\t\tfor(var i = 0; i < list.length; ++i)\r\n\t\t\tlist[i].classList.remove(\"selected\");\r\n\t\tthis.classList.add(\"selected\");\r\n\r\n\t\t//change tab\r\n\t\tthat.previous_tab = that.current_tab;\r\n\t\tthat.current_tab = [tab_id, tab_content, options];\r\n\r\n\t\tif(e) //user clicked\r\n\t\t{\r\n\t\t\t//launch callback\r\n\t\t\tif(options.callback) \r\n\t\t\t\toptions.callback(tab_id, tab_content,e);\r\n\r\n\t\t\tLiteGUI.trigger(that,\"wchange\",[tab_id, tab_content]);\r\n\t\t\tif(that.onchange)\r\n\t\t\t\tthat.onchange( tab_id, tab_content );\r\n\t\t}\r\n\r\n\t\t//change afterwards in case the user wants to know the previous one\r\n\t\tthat.selected = tab_id;\r\n\t}\r\n\r\n\tTabs.prototype.selectTab = function( id, skip_events )\r\n\t{\r\n\t\tif(!id)\r\n\t\t\treturn;\r\n\r\n\t\tif( id.constructor != String )\r\n\t\t\tid = id.id; //in case id is the object referencing the tab\r\n\r\n\t\tvar tabs = this.list.querySelectorAll(\"li.wtab\");\r\n\t\tfor(var i = 0; i < tabs.length; i++)\r\n\t\t\tif( id == tabs[i].dataset[\"id\"] )\r\n\t\t\t{\r\n\t\t\t\tthis.onTabClicked.call( tabs[i], !skip_events );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t}\r\n\r\n\tTabs.prototype.setTabVisibility = function(id, v)\r\n\t{\r\n\t\tvar tab = this.tabs[id];\r\n\t\tif(!tab)\r\n\t\t\treturn;\r\n\r\n\t\ttab.tab.style.display = v ? \"none\" : null;\r\n\t\ttab.content.style.display = v ? \"none\" : null;\r\n\t}\r\n\r\n\tTabs.prototype.recomputeTabsByIndex = function()\r\n\t{\r\n\t\tthis.tabs_by_index = [];\r\n\r\n\t\tfor(var i in this.tabs)\r\n\t\t{\r\n\t\t\tvar tab = this.tabs[i];\r\n\r\n\t\t\t//compute index\r\n\t\t\tvar index = 0;\r\n\t\t\tvar child = tab.tab;\r\n\t\t\twhile( (child = child.previousSibling) != null ) \r\n\t\t\t\tindex++;\r\n\r\n\t\t\tthis.tabs_by_index[index] = tab;\r\n\t\t}\r\n\t}\r\n\r\n\tTabs.prototype.removeTab = function(id)\r\n\t{\r\n\t\tvar tab = this.tabs[id];\r\n\t\tif(!tab)\r\n\t\t{\r\n\t\t\tconsole.warn( \"tab not found: \" + id );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(tab.onclose)\r\n\t\t\ttab.onclose(tab);\r\n\r\n\t\tif(tab.tab.parentNode)\r\n\t\t\ttab.tab.parentNode.removeChild( tab.tab );\r\n\t\tif(tab.content.parentNode)\r\n\t\t\ttab.content.parentNode.removeChild( tab.content );\r\n\t\tdelete this.tabs[id];\r\n\r\n\t\tthis.recomputeTabsByIndex();\r\n\t}\r\n\r\n\tTabs.prototype.removeAllTabs = function( keep_plus )\r\n\t{\r\n\t\tvar tabs = [];\r\n\t\tfor(var i in this.tabs)\r\n\t\t\ttabs.push( this.tabs[i] );\r\n\r\n\t\tfor(var i in tabs)\r\n\t\t{\r\n\t\t\tvar tab = tabs[i];\r\n\t\t\tif(tab == this.plus_tab && keep_plus)\r\n\t\t\t\tcontinue;\r\n\t\t\tif(tab.tab.parentNode)\r\n\t\t\t\ttab.tab.parentNode.removeChild( tab.tab );\r\n\t\t\tif(tab.content.parentNode)\r\n\t\t\t\ttab.content.parentNode.removeChild( tab.content );\r\n\t\t\tdelete this.tabs[ tab.id ];\r\n\t\t}\r\n\r\n\t\tthis.recomputeTabsByIndex();\r\n\t}\r\n\r\n\tTabs.prototype.clear = function()\r\n\t{\r\n\t\tthis.removeAllTabs();\r\n\t}\r\n\r\n\tTabs.prototype.hideTab = function(id)\r\n\t{\r\n\t\tthis.setTabVisibility(id, false);\r\n\t}\r\n\r\n\tTabs.prototype.showTab = function(id)\r\n\t{\r\n\t\tthis.setTabVisibility(id, true);\r\n\t}\r\n\r\n\tTabs.prototype.transferTab = function(id, target_tabs, index)\r\n\t{\r\n\t\tvar tab = this.tabs[id];\r\n\t\tif(!tab)\r\n\t\t\treturn;\r\n\r\n\t\ttarget_tabs.tabs[id] = tab;\r\n\r\n\t\tif(index !== undefined)\r\n\t\t\ttarget_tabs.list.insertBefore(tab.tab, target_tabs.list.childNodes[index]);\r\n\t\telse\r\n\t\t\ttarget_tabs.list.appendChild(tab.tab);\r\n\t\ttarget_tabs.root.appendChild(tab.content);\r\n\t\tdelete this.tabs[id];\r\n\r\n\t\tvar newtab = null;\r\n\t\tfor(var i in this.tabs)\r\n\t\t{\r\n\t\t\tnewtab = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(newtab)\r\n\t\t\tthis.selectTab(newtab);\r\n\r\n\t\ttab.tab.classList.remove(\"selected\");\r\n\t\ttarget_tabs.selectTab(id);\r\n\t}\r\n\r\n\tTabs.prototype.detachTab = function(id, on_complete, on_close )\r\n\t{\r\n\t\tvar tab = this.tabs[id];\r\n\t\tif(!tab)\r\n\t\t\treturn;\r\n\r\n\t\tvar index = this.getTabIndex( id );\r\n\r\n\t\t//create window\r\n\t\tvar w = 800;\r\n\t\tvar h = 600;\r\n\t\tvar tab_window = window.open(\"\",\"\",\"width=\"+w+\", height=\"+h+\", location=no, status=no, menubar=no, titlebar=no, fullscreen=yes\");\r\n\t\ttab_window.document.write( \"<head><title>\"+id+\"</title>\" );\r\n\r\n\t\t//transfer style\r\n\t\tvar styles = document.querySelectorAll(\"link[rel='stylesheet'],style\");\r\n\t\tfor(var i = 0; i < styles.length; i++)\r\n\t\t\ttab_window.document.write( styles[i].outerHTML );\r\n\t\ttab_window.document.write( \"</head><body></body>\" );\r\n\t\ttab_window.document.close();\r\n\r\n\t\tvar that = this;\r\n\r\n\t\t//transfer content after a while so the window is propertly created\r\n\t\tvar newtabs = new LiteGUI.Tabs(null, this.options );\r\n\t\ttab_window.tabs = newtabs;\r\n\r\n\t\t//closing event\r\n\t\ttab_window.onbeforeunload = function(){\r\n\t\t\tnewtabs.transferTab( id, that, index);\r\n\t\t\tif(on_close)\r\n\t\t\t\ton_close();\r\n\t\t}\r\n\r\n\t\t//move the content there\r\n\t\tnewtabs.list.style.height = \"20px\";\r\n\t\ttab_window.document.body.appendChild(newtabs.root);\r\n\t\tthat.transferTab(id, newtabs);\r\n\t\tnewtabs.tabs[id].tab.classList.add(\"selected\");\r\n\t\tthis.recomputeTabsByIndex();\r\n\r\n\t\tif(on_complete)\r\n\t\t\ton_complete();\r\n\r\n\t\treturn tab_window;\r\n\t}\r\n\r\n\r\n\treturn LiteGUI.Tabs = Tabs;\r\n});\n//enclose in a scope\r\ndefine('skylark-litegui/Tree',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\r\n/**\r\n* To create interactive trees (useful for folders or hierarchies).<br>\r\n* Options are:<br>\r\n*\t+ allow_multiselection: allow to select multiple elements using the shift key<br>\r\n*\t+ allow_rename: double click to rename items in the tree<br>\r\n*\t+ allow_drag: drag elements around<br>\r\n*\t+ height<br>\r\n* Item data should be in the next format:<br>\r\n* {<br>\r\n*    id: unique_identifier,<br>\r\n*    content: what to show in the HTML (if omited id will be shown)<br>\r\n*\t children: []  array with another object with the same structure<br>\r\n*\t className: class<br>\r\n*    precontent: HTML inserted before the content<br>\r\n*\t visible: boolean, to hide it<br>\r\n*\t dataset: dataset for the element<br>\r\n*\t onDragData: callback in case the user drags this item somewhere else<br>\r\n* }<br>\r\n* To catch events use tree.root.addEventListener(...)<br>\r\n* item_selected : receive { item: node, data: node.data }<br>\r\n* item_dblclicked<br>\r\n* item_renamed<br>\r\n* item_moved<br>\r\n*\r\n* @class Tree\r\n* @constructor\r\n*/\r\n\r\n\t/*********** LiteTree *****************************/\r\n\tfunction Tree( data, options, legacy )\r\n\t{\r\n\t\tif(legacy || (data && data.constructor === String) )\r\n\t\t{\r\n\t\t\tvar id = data;\r\n\t\t\tdata = options;\r\n\t\t\toptions = legacy || {};\r\n\t\t\toptions.id = id;\r\n\t\t\tconsole.warn(\"LiteGUI.Tree legacy parameter, use data as first parameter instead of id.\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\tvar root = document.createElement(\"div\");\r\n\t\tthis.root = root;\r\n\t\tif(options.id)\r\n\t\t\troot.id = options.id;\r\n\r\n\t\troot.className = \"litetree\";\r\n\t\tthis.tree = data;\r\n\t\tvar that = this;\r\n\t\toptions = options || {allow_rename: false, allow_drag: true, allow_multiselection: false};\r\n\t\tthis.options = options;\r\n\t\tthis.indent_offset = options.indent_offset || 0;\r\n\r\n\t\tif(options.height)\r\n\t\t\tthis.root.style.height = typeof(options.height) == \"string\" ? options.height : Math.round(options.height) + \"px\";\r\n\r\n        this.collapsed_depth = 3;\r\n        if(options.collapsed_depth != null)\r\n            this.collapsed_depth = options.collapsed_depth;\r\n\r\n\t\t//bg click\r\n\t\troot.addEventListener(\"click\", function(e){\r\n\t\t\tif(e.srcElement != that.root)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(that.onBackgroundClicked)\r\n\t\t\t\tthat.onBackgroundClicked(e,that);\r\n\t\t});\r\n\r\n\t\t//bg click right mouse\r\n\t\troot.addEventListener(\"contextmenu\", function(e) { \r\n\t\t\tif(e.button != 2) //right button\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif(that.onContextMenu) \r\n\t\t\t\tthat.onContextMenu(e);\r\n\t\t\te.preventDefault(); \r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\r\n\t\tvar root_item = this.createAndInsert(data, options, null);\r\n\t\tif(!root_item)\r\n\t\t\tthrow(\"Error in LiteGUI.Tree, createAndInsert returned null\");\r\n\t\troot_item.className += \" root_item\";\r\n\t\t//this.root.appendChild(root_item);\r\n\t\tthis.root_item = root_item;\r\n\t}\r\n\r\n\tTree.INDENT = 20;\r\n\r\n\r\n\t/**\r\n\t* update tree with new data (old data will be thrown away)\r\n\t* @method updateTree\r\n\t* @param {object} data\r\n\t*/\r\n\tTree.prototype.updateTree = function( data )\r\n\t{\r\n\t\tthis.root.innerHTML = \"\";\r\n\t\tvar root_item = this.createAndInsert( data, this.options, null );\r\n\t\tif(root_item)\r\n\t\t{\r\n\t\t\troot_item.className += \" root_item\";\r\n\t\t\tthis.root_item = root_item;\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.root_item = null;\r\n\t}\r\n\r\n\t/**\r\n\t* update tree with new data (old data will be thrown away)\r\n\t* @method insertItem\r\n\t* @param {object} data\r\n\t* @param {string} parent_id\r\n\t* @param {number} position index in case you want to add it before the last position\r\n\t* @param {object} options\r\n\t* @return {DIVElement}\r\n\t*/\r\n\tTree.prototype.insertItem = function( data, parent_id, position, options)\r\n\t{\r\n\t\tif(!parent_id)\r\n\t\t{\r\n\t\t\tvar root = this.root.childNodes[0];\r\n\t\t\tif(root)\r\n\t\t\t\tparent_id = root.dataset[\"item_id\"];\r\n\t\t}\r\n\r\n\t\tvar element = this.createAndInsert( data, options, parent_id, position );\r\n\r\n\t\t//update parent collapse button\r\n\t\tif(parent_id)\r\n\t\t\tthis._updateListBox( this._findElement(parent_id) ); //no options here, this is the parent\r\n\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tTree.prototype.createAndInsert = function( data, options, parent_id, element_index )\r\n\t{\r\n\t\t//find parent\r\n\t\tvar parent_element_index = -1;\r\n\t\tif(parent_id)\r\n\t\t\tparent_element_index = this._findElementIndex( parent_id );\r\n\t\telse if(parent_id === undefined)\r\n\t\t\tparent_element_index = 0; //root\r\n\r\n\t\tvar parent = null;\r\n\t\tvar child_level = 0;\r\n\r\n\t\t//find level\r\n\t\tif(parent_element_index != -1)\r\n\t\t{\r\n\t\t\tparent = this.root.childNodes[ parent_element_index ];\r\n\t\t\tchild_level = parseInt( parent.dataset[\"level\"] ) + 1;\r\n\t\t}\r\n\r\n\t\t//create\r\n\t\tvar element = this.createTreeItem( data, options, child_level );\r\n\t\tif(!element) //error creating element\r\n\t\t\treturn;\r\n\r\n\t\telement.parent_id = parent_id;\r\n\r\n\t\t//check\r\n\t\tvar existing_item = this.getItem( element.dataset[\"item_id\"] );\r\n\t\tif( existing_item )\r\n\t\t\tconsole.warn(\"There another item with the same ID in this tree\");\r\n\r\n\t\t//insert\r\n\t\tif(parent_element_index == -1)\r\n\t\t\tthis.root.appendChild( element );\r\n\t\telse\r\n\t\t\tthis._insertInside( element, parent_element_index, element_index );\r\n\r\n\t\t//compute visibility according to parents\r\n\t\tif( parent && !this._isNodeChildrenVisible( parent_id ) )\r\n\t\t\telement.classList.add(\"hidden\");\r\n\r\n\t\t//children\r\n\t\tif(data.children)\r\n\t\t{\r\n\t\t\tfor(var i = 0; i < data.children.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tthis.createAndInsert( data.children[i], options, data.id );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//update collapse button\r\n\t\tthis._updateListBox( element, options, child_level );\r\n\r\n\t\tif(options && options.selected)\r\n\t\t\tthis.markAsSelected( element, true );\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t//element to add, position of the parent node, position inside children, the depth level\r\n\tTree.prototype._insertInside = function( element, parent_index, offset_index, level )\r\n\t{\r\n\t\tvar parent = this.root.childNodes[ parent_index ];\r\n\t\tif(!parent)\r\n\t\t\tthrow(\"No parent node found, index: \" + parent_index +\", nodes: \" + this.root.childNodes.length );\r\n\r\n\t\tvar parent_level = parseInt( parent.dataset[\"level\"] );\r\n\t\tvar child_level = level !== undefined ? level : parent_level + 1;\r\n\r\n\t\tvar indent = element.querySelector(\".indentblock\");\r\n\t\tif(indent)\r\n\t\t\tindent.style.paddingLeft = ((child_level + this.indent_offset) * Tree.INDENT ) + \"px\"; //inner padding\r\n\t\t\r\n\t\telement.dataset[\"level\"] = child_level;\r\n\r\n\t\t//under level nodes\r\n\t\tfor( var j = parent_index+1; j < this.root.childNodes.length; ++j )\r\n\t\t{\r\n\t\t\tvar new_childNode = this.root.childNodes[j];\r\n\t\t\tif( !new_childNode.classList || !new_childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\t\t\tvar current_level = parseInt( new_childNode.dataset[\"level\"] );\r\n\r\n\t\t\tif( current_level == child_level && offset_index)\r\n\t\t\t{\r\n\t\t\t\toffset_index--;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t//last position\r\n\t\t\tif( current_level < child_level || (offset_index === 0 && current_level === child_level) )\r\n\t\t\t{\r\n\t\t\t\tthis.root.insertBefore( element, new_childNode );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//ended\r\n\t\tthis.root.appendChild( element );\r\n\t}\r\n\r\n\r\n\tTree.prototype._isNodeChildrenVisible = function( id )\r\n\t{\r\n\t\tvar node = this.getItem( id );\r\n\t\tif(!node)\r\n\t\t\treturn false;\r\n\t\tif( node.classList.contains(\"hidden\") )\r\n\t\t\treturn false;\r\n\r\n\t\t//check listbox\r\n\t\tvar listbox = node.querySelector(\".listbox\");\r\n\t\tif(!listbox)\r\n\t\t\treturn true;\r\n\t\tif(listbox.getValue() == \"closed\")\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tTree.prototype._findElement = function( id )\r\n\t{\r\n\t\tif( !id || id.constructor !== String)\r\n\t\t\tthrow(\"findElement param must be string with item id\");\r\n\t\tfor(var i = 0; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i];\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\t\t\tif( childNode.classList.contains(\"ltreeitem-\" + id) )\r\n\t\t\t\treturn childNode;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tTree.prototype._findElementIndex = function( id )\r\n\t{\r\n\t\tfor(var i = 0; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i];\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(typeof(id) === \"string\")\r\n\t\t\t{\r\n\t\t\t\tif(childNode.dataset[\"item_id\"] === id)\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\telse if( childNode === id )\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tTree.prototype._findElementLastChildIndex = function( start_index )\r\n\t{\r\n\t\tif(start_index == -1)\r\n\t\t\treturn -1;\r\n\r\n\t\tvar level = parseInt( this.root.childNodes[ start_index ].dataset[\"level\"] );\r\n\r\n\t\tfor(var i = start_index+1; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i];\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar current_level = parseInt( childNode.dataset[\"level\"] );\r\n\t\t\tif( current_level == level )\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t//returns child elements (you can control levels)\r\n\tTree.prototype._findChildElements = function( id, only_direct )\r\n\t{\r\n\t\tvar parent_index = this._findElementIndex( id );\r\n\t\tif(parent_index == -1)\r\n\t\t\treturn;\r\n\r\n\t\tvar parent = this.root.childNodes[ parent_index ];\r\n\t\tvar parent_level = parseInt( parent.dataset[\"level\"] );\r\n\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = parent_index + 1; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i];\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar current_level = parseInt( childNode.dataset[\"level\"] );\r\n\t\t\tif(only_direct && current_level > (parent_level + 1) )\r\n\t\t\t\tcontinue;\r\n\t\t\tif(current_level <= parent_level)\r\n\t\t\t\treturn result;\r\n\r\n\t\t\tresult.push( childNode );\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tTree.prototype.createTreeItem = function( data, options, level )\r\n\t{\r\n\t\tif(data === null || data === undefined)\r\n\t\t{\r\n\t\t\tconsole.error(\"Tree item cannot be null\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toptions = options || this.options;\r\n\r\n\t\tvar root = document.createElement(\"li\");\r\n\t\troot.className = \"ltreeitem\";\r\n\t\tvar that = this;\r\n\r\n\t\t//ids are not used because they could collide, classes instead\r\n\t\tif(data.id)\r\n\t\t{\r\n\t\t\tvar safe_id = data.id.replace(/\\s/g,\"_\");\r\n\t\t\troot.className += \" ltreeitem-\" + safe_id;\r\n\t\t\troot.dataset[\"item_id\"] = data.id;\r\n\t\t}\r\n\r\n\t\tif(data.dataset)\r\n\t\t\tfor(var i in data.dataset)\r\n\t\t\t\troot.dataset[i] = data.dataset[i];\r\n\r\n\t\tdata.DOM = root; //double link\r\n\t\troot.data = data;\r\n\r\n\t\tif(level !== undefined)\r\n\t\t{\r\n\t\t\troot.dataset[\"level\"] = level;\r\n\t\t\troot.classList.add(\"ltree-level-\" + level);\r\n\t\t}\r\n\r\n\t\tvar title_element = document.createElement(\"div\");\r\n\t\ttitle_element.className = \"ltreeitemtitle\";\r\n\t\tif(data.className)\r\n\t\t\ttitle_element.className += \" \" + data.className;\r\n\r\n\t\ttitle_element.innerHTML = \"<span class='precontent'></span><span class='indentblock'></span><span class='collapsebox'></span><span class='incontent'></span><span class='postcontent'></span>\";\r\n\r\n\t\tvar content = data.content || data.id || \"\";\r\n\t\ttitle_element.querySelector(\".incontent\").innerHTML = content;\r\n\r\n\t\tif(data.precontent)\r\n\t\t\ttitle_element.querySelector(\".precontent\").innerHTML = data.precontent;\r\n\r\n\t\tif(data.postcontent)\r\n\t\t\ttitle_element.querySelector(\".postcontent\").innerHTML = data.postcontent;\r\n\r\n\t\tif(data.dataset)\r\n\t\t\tfor(var i in data.dataset)\r\n\t\t\t\troot.dataset[i] = data.dataset[i];\r\n\r\n\t\troot.appendChild( title_element );\r\n\t\troot.title_element = title_element;\r\n\r\n\t\tif(data.visible === false)\r\n\t\t\troot.style.display = \"none\";\r\n\r\n\t\t//var row = root.querySelector(\".ltreeitemtitle .incontent\");\r\n\t\tvar row = root;\r\n\t\trow.addEventListener(\"click\", onNodeSelected );\r\n\t\trow.addEventListener(\"dblclick\",onNodeDblClicked );\r\n\t\trow.addEventListener(\"contextmenu\", function(e) { \r\n\t\t\tvar item = this;\r\n\t\t\te.preventDefault(); \r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\tif(e.button != 2) //right button\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(that.onItemContextMenu)\r\n\t\t\t\treturn that.onItemContextMenu(e, { item: item, data: item.data} );\r\n\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\tfunction onNodeSelected(e)\r\n\t\t{\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\t//var title = this.parentNode;\r\n\t\t\t//var item = title.parentNode;\r\n\t\t\tvar node = this;\r\n\t\t\tvar title = node.title_element;\r\n\r\n\t\t\tif(title._editing) \r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(e.ctrlKey && that.options.allow_multiselection)\r\n\t\t\t{\r\n\t\t\t\t//check if selected\r\n\t\t\t\tif( that.isNodeSelected( node ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tnode.classList.remove(\"selected\");\r\n\t\t\t\t\tLiteGUI.trigger(that, \"item_remove_from_selection\", { item: node, data: node.data} );\r\n\t\t\t\t\tLiteGUI.trigger(that.root, \"item_remove_from_selection\", { item: node, data: node.data} ); //LEGACY\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//mark as selected\r\n\t\t\t\tthat.markAsSelected( node, true );\r\n\t\t\t\tLiteGUI.trigger(that, \"item_add_to_selection\", { item: node, data: node.data} );\r\n\t\t\t\tLiteGUI.trigger(that.root, \"item_add_to_selection\", { item: node, data: node.data} ); //LEGACY\r\n\t\t\t\tvar r = false;\r\n\t\t\t\tif(data.callback) \r\n\t\t\t\t\tr = data.callback.call(that,node);\r\n\r\n\t\t\t\tif(!r && that.onItemAddToSelection)\r\n\t\t\t\t\tthat.onItemAddToSelection(node.data, node);\r\n\t\t\t}\r\n\t\t\tif(e.shiftKey && that.options.allow_multiselection)\r\n\t\t\t{\r\n\t\t\t\t//select from current selection till here\r\n\t\t\t\t//current\r\n\t\t\t\tvar last_item = that.getSelectedItem();\r\n\t\t\t\tif(!last_item)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tif(last_item === node)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tvar nodeList = Array.prototype.slice.call( last_item.parentNode.children );\r\n\t\t\t\tvar last_index = nodeList.indexOf( last_item );\r\n\t\t\t\tvar current_index = nodeList.indexOf( node );\r\n\r\n\t\t\t\tvar items = current_index > last_index ? nodeList.slice( last_index, current_index ) : nodeList.slice( current_index, last_index );\r\n\t\t\t\tfor( var i = 0; i < items.length; ++i )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar item = items[i];\r\n\t\t\t\t\t//console.log(item);\r\n\t\t\t\t\t//mark as selected\r\n\t\t\t\t\tthat.markAsSelected( item, true );\r\n\t\t\t\t\tLiteGUI.trigger( that, \"item_add_to_selection\", { item: item, data: item.data } );\r\n\t\t\t\t\tLiteGUI.trigger( that.root, \"item_add_to_selection\", { item: item, data: item.data } ); //LEGACY\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//mark as selected\r\n\t\t\t\tthat.markAsSelected( node );\r\n\r\n\t\t\t\tthat._skip_scroll = true; //avoid scrolling while user clicks something\r\n\t\t\t\tLiteGUI.trigger( that, \"item_selected\", { item: node, data: node.data } );\r\n\t\t\t\tLiteGUI.trigger( that.root, \"item_selected\", { item: node, data: node.data } ); //LEGACY\r\n\t\t\t\tvar r = false;\r\n\t\t\t\tif(data.callback) \r\n\t\t\t\t\tr = data.callback.call(that,node);\r\n\r\n\t\t\t\tif(!r && that.onItemSelected)\r\n\t\t\t\t\tthat.onItemSelected(node.data, node);\r\n\t\t\t\tthat._skip_scroll = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction onNodeDblClicked(e)\r\n\t\t{\r\n\t\t\tvar node = this; //this.parentNode;\r\n\t\t\tvar title = node.title_element.querySelector(\".incontent\");\r\n\r\n\t\t\tLiteGUI.trigger( that, \"item_dblclicked\", node );\r\n\t\t\tLiteGUI.trigger( that.root, \"item_dblclicked\", node ); //LEGACY\r\n\r\n\t\t\tif(!title._editing && that.options.allow_rename)\r\n\t\t\t{\r\n\t\t\t\ttitle._editing = true;\r\n\t\t\t\ttitle._old_name = title.innerHTML;\r\n\t\t\t\tvar that2 = title;\r\n\t\t\t\ttitle.innerHTML = \"<input type='text' value='\" + title.innerHTML + \"' />\";\r\n\t\t\t\tvar input = title.querySelector(\"input\");\r\n\r\n\t\t\t\t//loose focus when renaming\r\n\t\t\t\tinput.addEventListener(\"blur\",function(e) { \r\n\t\t\t\t\tvar new_name = e.target.value;\r\n\t\t\t\t\tsetTimeout(function() { that2.innerHTML = new_name; },1); //bug fix, if I destroy input inside the event, it produce a NotFoundError\r\n\t\t\t\t\t//item.node_name = new_name;\r\n\t\t\t\t\tdelete that2._editing;\r\n\t\t\t\t\tLiteGUI.trigger( that.root, \"item_renamed\", { old_name: that2._old_name, new_name: new_name, item: node, data: node.data } );\r\n\t\t\t\t\tdelete that2._old_name;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//finishes renaming\r\n\t\t\t\tinput.addEventListener(\"keydown\", function(e) {\r\n\t\t\t\t\tif(e.keyCode != 13)\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//set on focus\r\n\t\t\t\tinput.focus();\r\n\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\r\n\t\t//dragging element on tree\r\n\t\tvar draggable_element = title_element;\r\n\t\tif(this.options.allow_drag)\r\n\t\t{\r\n\t\t\tdraggable_element.draggable = true;\r\n\r\n\t\t\t//starts dragging this element\r\n\t\t\tdraggable_element.addEventListener(\"dragstart\", function(ev) {\r\n\t\t\t\t//this.removeEventListener(\"dragover\", on_drag_over ); //avoid being drag on top of himself\r\n\t\t\t\t//ev.dataTransfer.setData(\"node-id\", this.parentNode.id);\r\n\t\t\t\tev.dataTransfer.setData(\"item_id\", this.parentNode.dataset[\"item_id\"]);\r\n\t\t\t\tif(!data.onDragData)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tvar drag_data =\tdata.onDragData();\r\n\t\t\t\tif(drag_data)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i in drag_data)\r\n\t\t\t\t\t\tev.dataTransfer.setData(i,drag_data[i]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar count = 0;\r\n\r\n\t\t//something being dragged entered\r\n\t\tdraggable_element.addEventListener(\"dragenter\", function (ev)\r\n\t\t{\r\n\t\t\tev.preventDefault();\r\n\t\t\tif(data.skipdrag)\r\n\t\t\t\treturn false;\r\n\t\t\t\r\n\t\t\tif(count == 0)\r\n\t\t\t\ttitle_element.classList.add(\"dragover\");\r\n\t\t\tcount++;\r\n\t\t});\r\n\r\n\t\tdraggable_element.addEventListener(\"dragleave\", function (ev)\r\n\t\t{\r\n\t\t\tev.preventDefault();\r\n\t\t\t//console.log(data.id);\r\n\t\t\tcount--;\r\n\t\t\tif(count == 0)\r\n\t\t\t\ttitle_element.classList.remove(\"dragover\");\r\n\t\t\t//if(ev.srcElement == this) return;\r\n\t\t});\r\n\r\n\t\t//test if allows to drag stuff on top?\r\n\t\tdraggable_element.addEventListener(\"dragover\", on_drag_over );\r\n\t\tfunction on_drag_over(ev)\r\n\t\t{\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\r\n\t\tdraggable_element.addEventListener(\"drop\", function (ev)\r\n\t\t{\r\n\t\t\ttitle_element.classList.remove(\"dragover\");\r\n\t\t\tev.preventDefault();\r\n\t\t\tif(data.skipdrag)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar item_id = ev.dataTransfer.getData(\"item_id\");\r\n\r\n\t\t\t//var data = ev.dataTransfer.getData(\"Text\");\r\n\t\t\tif(!item_id)\r\n\t\t\t{\r\n\t\t\t\tLiteGUI.trigger( that.root, \"drop_on_item\", { item: this, event: ev });\r\n\t\t\t\tif( that.onDropItem )\r\n\t\t\t\t\tthat.onDropItem( ev, this.parentNode.data );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//try\r\n\t\t\t{\r\n\t\t\t\tvar parent_id = this.parentNode.dataset[\"item_id\"];\r\n\r\n\t\t\t\tif( !that.onMoveItem || (that.onMoveItem && that.onMoveItem( that.getItem( item_id ), that.getItem( parent_id ) ) != false))\r\n\t\t\t\t{\r\n\t\t\t\t\tif( that.moveItem( item_id, parent_id ) )\r\n\t\t\t\t\t\tLiteGUI.trigger( that.root, \"item_moved\", { item: that.getItem( item_id ), parent_item: that.getItem( parent_id ) } );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tcatch (err)\r\n\t\t\t{\r\n\t\t\t\tconsole.error(\"Error: \" + err );\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tif( that.onDropItem )\r\n\t\t\t\tthat.onDropItem( ev, this.parentNode.data );\r\n\t\t});\r\n\r\n\t\treturn root;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* remove from the tree the items that do not have a name that matches the string\r\n\t* @method filterByName\r\n\t* @param {string} name\r\n\t*/\r\n\tTree.prototype.filterByName = function(name)\r\n\t{\r\n\t\tfor(var i = 0; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i]; //ltreeitem\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar content = childNode.querySelector(\".incontent\");\r\n\t\t\tif(!content)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar str = content.innerHTML.toLowerCase();\r\n\r\n\t\t\tif(!name || str.indexOf( name.toLowerCase() ) != -1)\r\n\t\t\t{\r\n\t\t\t\tif( childNode.data && childNode.data.visible !== false )\r\n\t\t\t\t\tchildNode.classList.remove(\"filtered\");\r\n\t\t\t\tvar indent = childNode.querySelector(\".indentblock\");\r\n\t\t\t\tif(indent)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(name)\r\n\t\t\t\t\t\tindent.style.paddingLeft = 0;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tindent.style.paddingLeft = paddingLeft = ( (parseInt(childNode.dataset[\"level\"]) + this.indent_offset) * Tree.INDENT) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tchildNode.classList.add(\"filtered\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t* remove from the tree the items that do not have a name that matches the string\r\n\t* @method filterByName\r\n\t* @param {string} name\r\n\t*/\r\n\tTree.prototype.filterByRule = function( callback_to_filter, param )\r\n\t{\r\n\t\tif(!callback_to_filter)\r\n\t\t\tthrow(\"filterByRule requires a callback\");\r\n\t\tfor(var i = 0; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i]; //ltreeitem\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tvar content = childNode.querySelector(\".incontent\");\r\n\t\t\tif(!content)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif( callback_to_filter( childNode.data, content, param ) )\r\n\t\t\t{\r\n\t\t\t\tif( childNode.data && childNode.data.visible !== false )\r\n\t\t\t\t\tchildNode.classList.remove(\"filtered\");\r\n\t\t\t\tvar indent = childNode.querySelector(\".indentblock\");\r\n\t\t\t\tif(indent)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(name)\r\n\t\t\t\t\t\tindent.style.paddingLeft = 0;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tindent.style.paddingLeft = paddingLeft = ( (parseInt(childNode.dataset[\"level\"]) + this.indent_offset) * LiteGUI.Tree.INDENT) + \"px\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tchildNode.classList.add(\"filtered\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\r\n\r\n\t/**\r\n\t* get the item with that id, returns the HTML element\r\n\t* @method getItem\r\n\t* @param {string} id\r\n\t* @return {Object}\r\n\t*/\r\n\tTree.prototype.getItem = function( id )\r\n\t{\r\n\t\tif(!id)\r\n\t\t\treturn null;\r\n\r\n\t\tif( id.classList ) //if it is already a node\r\n\t\t\treturn id;\r\n\r\n\t\tfor(var i = 0; i < this.root.childNodes.length; ++i)\r\n\t\t{\r\n\t\t\tvar childNode = this.root.childNodes[i];\r\n\t\t\tif( !childNode.classList || !childNode.classList.contains(\"ltreeitem\") )\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif(childNode.dataset[\"item_id\"] === id)\r\n\t\t\t\treturn childNode;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\tvar safe_id = id.replace(/\\s/g,\"_\");\r\n\t\tvar node = this.root.querySelector(\".ltreeitem-\"+safe_id);\r\n\t\tif(!node) \r\n\t\t\treturn null;\r\n\t\tif( !node.classList.contains(\"ltreeitem\") )\r\n\t\t\tthrow(\"this node is not a tree item\");\r\n\t\treturn node;\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t* in case an item is collapsed, it expands it to show children\r\n\t* @method expandItem\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.expandItem = function(id, parents)\r\n\t{\r\n\t\tvar item = this.getItem(id);\r\n\t\tif(!item)\r\n\t\t\treturn;\r\n\r\n\t\tif(!item.listbox)\r\n\t\t\treturn;\r\n\r\n\t\titem.listbox.setValue(true); //this propagates changes\r\n\r\n\t\tif(!parents)\r\n\t\t\treturn;\r\n\r\n\t\tvar parent = this.getParent( item );\r\n\t\tif(parent)\r\n\t\t\tthis.expandItem(parent,parents);\r\n\t}\r\n\r\n\t/**\r\n\t* in case an item is expanded, it collapses it to hide children\r\n\t* @method collapseItem\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.collapseItem = function(id)\r\n\t{\r\n\t\tvar item = this.getItem(id);\r\n\t\tif(!item)\r\n\t\t\treturn;\r\n\r\n\t\tif(!item.listbox)\r\n\t\t\treturn;\r\n\r\n\t\tlistbox.setValue(false);  //this propagates changes\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* Tells you if the item its out of the view due to the scrolling\r\n\t* @method isInsideArea\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.isInsideArea = function( id )\r\n\t{\r\n\t\tvar item = id.constructor === String ? this.getItem(id) : id;\r\n\t\tif(!item)\r\n\t\t\treturn false;\r\n\r\n\t\tvar rects = this.root.getClientRects();\r\n\t\tif(!rects.length)\r\n\t\t\treturn false;\r\n\t\tvar r = rects[0];\r\n\t\tvar h = r.height;\r\n\t\tvar y = item.offsetTop;\r\n\r\n\t\tif( this.root.scrollTop < y && y < (this.root.scrollTop + h) )\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Scrolls to center this item\r\n\t* @method scrollToItem\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.scrollToItem = function(id)\r\n\t{\r\n\t\tvar item = id.constructor === String ? this.getItem(id) : id;\r\n\t\tif(!item)\r\n\t\t\treturn;\r\n\r\n\t\tvar container = this.root.parentNode;\r\n\r\n\t\tif(!container)\r\n\t\t\treturn;\r\n\r\n\t\tvar rect = container.getBoundingClientRect();\r\n\t\tif(!rect)\r\n\t\t\treturn;\r\n\t\tvar h = rect.height;\r\n\t\tvar x = ( parseInt( item.dataset[\"level\"] ) + this.indent_offset) * Tree.INDENT + 50;\r\n\r\n\t\tcontainer.scrollTop = item.offsetTop - (h * 0.5)|0;\r\n\t\tif( rect.width * 0.75 < x )\r\n\t\t\tcontainer.scrollLeft = x;\r\n\t\telse\r\n\t\t\tcontainer.scrollLeft = 0;\r\n\t}\r\n\r\n\t/**\r\n\t* mark item as selected\r\n\t* @method setSelectedItem\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.setSelectedItem = function( id, scroll, send_event )\r\n\t{\r\n\t\tif(!id)\r\n\t\t{\r\n\t\t\t//clear selection\r\n\t\t\tthis.unmarkAllAsSelected();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar node = this.getItem(id);\r\n\t\tif(!node) //not found\r\n\t\t\treturn null;\r\n\r\n\t\t//already selected\r\n\t\tif( node.classList.contains(\"selected\") ) \r\n\t\t\treturn;\r\n\r\n\t\tthis.markAsSelected(node);\r\n\t\tif( scroll && !this._skip_scroll )\r\n\t\t\tthis.scrollToItem(node);\r\n\r\n\t\t//expand parents\r\n\t\tthis.expandItem( node, true );\r\n\r\n\t\tif(send_event)\r\n\t\t\tLiteGUI.trigger( node, \"click\" );\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t* adds item to selection (multiple selection)\r\n\t* @method addItemToSelection\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.addItemToSelection = function( id )\r\n\t{\r\n\t\tif(!id)\r\n\t\t\treturn;\r\n\r\n\t\tvar node = this.getItem(id);\r\n\t\tif(!node) //not found\r\n\t\t\treturn null;\r\n\r\n\t\tthis.markAsSelected(node, true);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t* remove item from selection (multiple selection)\r\n\t* @method removeItemFromSelection\r\n\t* @param {string} id\r\n\t*/\r\n\tTree.prototype.removeItemFromSelection = function( id )\r\n\t{\r\n\t\tif(!id)\r\n\t\t\treturn;\r\n\t\tvar node = this.getItem(id);\r\n\t\tif(!node) //not found\r\n\t\t\treturn null;\r\n\t\tnode.classList.remove(\"selected\");\r\n\t}\r\n\r\n\t/**\r\n\t* returns the first selected item (its HTML element)\r\n\t* @method getSelectedItem\r\n\t* @return {HTML}\r\n\t*/\r\n\tTree.prototype.getSelectedItem = function()\r\n\t{\r\n\t\treturn this.root.querySelector(\".ltreeitem.selected\");\r\n\t}\r\n\r\n\t/**\r\n\t* returns an array with the selected items (its HTML elements)\r\n\t* @method getSelectedItems\r\n\t* @return {HTML}\r\n\t*/\r\n\tTree.prototype.getSelectedItems = function()\r\n\t{\r\n\t\treturn this.root.querySelectorAll(\".ltreeitem.selected\");\r\n\t}\r\n\r\n\t/**\r\n\t* returns if an item is selected\r\n\t* @method isItemSelected\r\n\t* @param {string} id\r\n\t* @return {bool}\r\n\t*/\r\n\tTree.prototype.isItemSelected = function(id)\r\n\t{\r\n\t\tvar node = this.getItem( id );\r\n\t\tif(!node)\r\n\t\t\treturn false;\r\n\t\treturn this.isNodeSelected(node);\r\n\t}\r\n\r\n\t/**\r\n\t* returns the children of an item\r\n\t* @method getChildren\r\n\t* @param {string} id could be string or node directly\r\n\t* @param {bool} [only_direct=false] to get only direct children\r\n\t* @return {Array}\r\n\t*/\r\n\tTree.prototype.getChildren = function(id, only_direct )\r\n\t{\r\n\t\tif( id && id.constructor !== String && id.dataset )\r\n\t\t\tid = id.dataset[\"item_id\"];\r\n\t\treturn this._findChildElements( id, only_direct );\r\n\t}\r\n\r\n\t/**\r\n\t* returns the parent of a item\r\n\t* @method getParent\r\n\t* @param {string} id\r\n\t* @return {HTML}\r\n\t*/\r\n\tTree.prototype.getParent = function(id_or_node)\r\n\t{\r\n\t\tvar element = this.getItem( id_or_node );\r\n\t\tif(element)\r\n\t\t\treturn this.getItem( element.parent_id );\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t* returns an array with all the ancestors\r\n\t* @method getAncestors\r\n\t* @param {string} id\r\n\t* @return {Array}\r\n\t*/\r\n\tTree.prototype.getAncestors = function( id_or_node, result )\r\n\t{\r\n\t\tresult = result || [];\r\n\t\tvar element = this.getItem( id_or_node );\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\tresult.push( element );\r\n\t\t\treturn this.getAncestors( element.parent_id, result );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t* returns an array with all the ancestors\r\n\t* @method getAncestors\r\n\t* @param {string} id\r\n\t* @return {Array}\r\n\t*/\r\n\tTree.prototype.isAncestor = function( child, node )\r\n\t{\r\n\t\tvar element = this.getItem( child );\r\n\t\tif(!element)\r\n\t\t\treturn false;\r\n\t\tvar dest = this.getItem( node );\r\n\t\tvar parent = this.getItem( element.parent_id );\r\n\t\tif(!parent)\r\n\t\t\treturn false;\r\n\t\tif(parent == dest)\r\n\t\t\treturn true;\r\n\t\treturn this.isAncestor( parent, node );\r\n\t}\r\n\r\n\t/**\r\n\t* move item with id to be child of parent_id\r\n\t* @method moveItem\r\n\t* @param {string} id\r\n\t* @param {string} parent_id\r\n\t* @return {bool}\r\n\t*/\r\n\tTree.prototype.moveItem = function( id, parent_id )\r\n\t{\r\n\t\tif(id === parent_id)\r\n\t\t\treturn false;\r\n\r\n\t\tvar node = this.getItem( id );\r\n\t\tvar parent = this.getItem( parent_id );\r\n\r\n\t\tif( this.isAncestor( parent, node ) )\r\n\t\t\treturn false;\r\n\r\n\t\tvar parent_index = this._findElementIndex( parent );\r\n\t\tvar parent_level = parseInt( parent.dataset[\"level\"] );\r\n\t\tvar old_parent = this.getParent( node );\r\n\t\tif(!old_parent)\r\n\t\t{\r\n\t\t\tconsole.error(\"node parent not found by id, maybe id has changed\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar old_parent_level = parseInt( old_parent.dataset[\"level\"] );\r\n\t\tvar level_offset = parent_level - old_parent_level;\r\n\r\n\t\tif(!parent || !node)\r\n\t\t\treturn false;\r\n\r\n\t\tif(parent == old_parent)\r\n\t\t\treturn false;\r\n\r\n\t\t//replace parent info\r\n\t\tnode.parent_id = parent_id;\r\n\r\n\t\t//get all children and subchildren and reinsert them in the new level\r\n\t\tvar children = this.getChildren( node );\r\n\t\tif(children)\r\n\t\t{\r\n\t\t\tchildren.unshift( node ); //add the node at the beginning\r\n\r\n\t\t\t//remove all children\r\n\t\t\tfor(var i = 0; i < children.length; i++)\r\n\t\t\t\tchildren[i].parentNode.removeChild( children[i] );\r\n\r\n\t\t\t//update levels\r\n\t\t\tfor(var i = 0; i < children.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar child = children[i];\r\n\t\t\t\tvar new_level = parseInt(child.dataset[\"level\"]) + level_offset;\r\n\t\t\t\tchild.dataset[\"level\"] = new_level;\r\n\t\t\t}\r\n\r\n\t\t\t//reinsert\r\n\t\t\tparent_index = this._findElementIndex( parent ); //update parent index\r\n\t\t\tvar last_index = this._findElementLastChildIndex( parent_index );\r\n\t\t\tif(last_index == -1)\r\n\t\t\t\tlast_index = 0;\r\n\t\t\tfor(var i = 0; i < children.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar child = children[i];\r\n\t\t\t\tthis._insertInside( child, parent_index, last_index + i - 1, parseInt( child.dataset[\"level\"] ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//update collapse button\r\n\t\tthis._updateListBox( parent );\r\n\t\tif(old_parent)\r\n\t\t\tthis._updateListBox( old_parent );\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* remove item with given id\r\n\t* @method removeItem\r\n\t* @param {string} id\r\n\t* @return {bool}\r\n\t*/\r\n\tTree.prototype.removeItem = function( id_or_node, remove_children )\r\n\t{\r\n\t\tvar node = id_or_node;\r\n\t\tif(typeof(id_or_node) == \"string\")\r\n\t\t\tnode = this.getItem( id_or_node );\r\n\t\tif(!node)\r\n\t\t\treturn false;\r\n\r\n\t\t//get parent\r\n\t\tvar parent = this.getParent( node );\r\n\r\n\t\t//get all descendants\r\n\t\tvar child_nodes = null;\r\n\t\tif(remove_children)\r\n\t\t\tchild_nodes = this.getChildren( node );\r\n\r\n\t\t//remove html element\r\n\t\tthis.root.removeChild( node );\r\n\r\n\t\t//remove all children\r\n\t\tif( child_nodes )\r\n\t\t{\r\n\t\t\tfor( var i = 0; i < child_nodes.length; i++ )\r\n\t\t\t\tthis.root.removeChild( child_nodes[i] );\r\n\t\t}\r\n\r\n\t\t//update parent collapse button\r\n\t\tif(parent)\r\n\t\t\tthis._updateListBox( parent );\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* update a given item with new data\r\n\t* @method updateItem\r\n\t* @param {string} id\r\n\t* @param {object} data\r\n\t*/\r\n\tTree.prototype.updateItem = function(id, data)\r\n\t{\r\n\t\tvar node = this.getItem(id);\r\n\t\tif(!node)\r\n\t\t\treturn false;\r\n\r\n\t\tnode.data = data;\r\n\t\tif(data.id)\r\n\t\t\tnode.id = data.id; //this updateItemId ?\r\n\t\tif(data.content)\r\n\t\t{\r\n\t\t\t//node.title_element.innerHTML = \"<span class='precontent'></span><span class='incontent'>\" +  + \"</span><span class='postcontent'></span>\";\r\n\t\t\tvar incontent = node.title_element.querySelector(\".incontent\");\r\n\t\t\tincontent.innerHTML = data.content;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* update a given item id and the link with its children\r\n\t* @method updateItemId\r\n\t* @param {string} old_id\r\n\t* @param {string} new_id\r\n\t*/\r\n\tTree.prototype.updateItemId = function(old_id, new_id)\r\n\t{\r\n\t\tvar node = this.getItem(old_id);\r\n\t\tif(!node)\r\n\t\t\treturn false;\r\n\r\n\t\tvar children = this.getChildren( old_id, true );\r\n\t\tnode.id = new_id;\r\n\r\n\t\tfor(var i = 0; i < children.length; ++i)\r\n\t\t{\r\n\t\t\tvar child = children[i];\r\n\t\t\tchild.parent_id = new_id;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t* clears all the items\r\n\t* @method clear\r\n\t* @param {bool} keep_root if you want to keep the root item\r\n\t*/\r\n\tTree.prototype.clear = function(keep_root)\r\n\t{\r\n\t\tif(!keep_root)\r\n\t\t{\r\n\t\t\tthis.root.innerHTML = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar items = this.root.querySelectorAll(\".ltreeitem\");\r\n\t\tfor(var i = 1; i < items.length; i++)\r\n\t\t{\r\n\t\t\tvar item = items[i];\r\n\t\t\tthis.root.removeChild( item );\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tTree.prototype.getNodeByIndex = function(index)\r\n\t{\r\n\t\tvar items = this.root.querySelectorAll(\".ltreeitem\");\r\n\t\treturn items[index];\r\n\t}\r\n\r\n\t//private ********************************\r\n\r\n\tTree.prototype.unmarkAllAsSelected = function()\r\n\t{\r\n\t\tthis.root.classList.remove(\"selected\");\r\n\t\tvar selected_array = this.root.querySelectorAll(\".ltreeitem.selected\");\r\n\t\tif(selected_array)\r\n\t\t{\r\n\t\t\tfor(var i = 0; i < selected_array.length; i++)\r\n\t\t\t\tselected_array[i].classList.remove(\"selected\");\r\n\t\t}\r\n\t\tvar semiselected = this.root.querySelectorAll(\".ltreeitem.semiselected\");\r\n\t\tfor(var i = 0; i < semiselected.length; i++)\r\n\t\t\tsemiselected[i].classList.remove(\"semiselected\");\r\n\t}\r\n\r\n\tTree.prototype.isNodeSelected = function( node )\r\n\t{\r\n\t\t//already selected\r\n\t\tif( node.classList.contains(\"selected\") ) \r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tTree.prototype.markAsSelected = function( node, add_to_existing_selection )\r\n\t{\r\n\t\t//already selected\r\n\t\tif( node.classList.contains(\"selected\") ) \r\n\t\t\treturn;\r\n\r\n\t\t//clear old selection\r\n\t\tif(!add_to_existing_selection)\r\n\t\t\tthis.unmarkAllAsSelected();\r\n\r\n\t\t//mark as selected (it was node.title_element?)\r\n\t\tnode.classList.add(\"selected\");\r\n\r\n\t\t//go up and semiselect\r\n\t\tvar parent = this.getParent( node );\r\n\t\tvar visited = [];\r\n\t\twhile(parent && visited.indexOf(parent) == -1)\r\n\t\t{\r\n\t\t\tparent.classList.add(\"semiselected\");\r\n\t\t\tvisited.push( parent );\r\n\t\t\tparent = this.getParent( parent );\r\n\t\t}\r\n\t\t/*\r\n\t\tvar parent = node.parentNode.parentNode; //two elements per level\r\n\t\twhile(parent && parent.classList.contains(\"ltreeitem\"))\r\n\t\t{\r\n\t\t\tparent.title_element.classList.add(\"semiselected\");\r\n\t\t\tparent = parent.parentNode.parentNode;\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\t//updates the widget to collapse\r\n\tTree.prototype._updateListBox = function( node, options, current_level )\r\n\t{\r\n\t\tif(!node)\r\n\t\t\treturn;\r\n\r\n\t\tvar that = this;\r\n\r\n\t\tif(!node.listbox)\r\n\t\t{\r\n\t\t\tvar pre = node.title_element.querySelector(\".collapsebox\");\r\n\t\t\tvar box = LiteGUI.createLitebox(true, function(e) { \r\n\t\t\t\tthat.onClickBox(e, node);\r\n\t\t\t\tLiteGUI.trigger( that.root, \"item_collapse_change\", { item: node, data: box.getValue() } );\r\n\t\t\t});\r\n\t\t\tbox.stopPropagation = true;\r\n\t\t\tbox.setEmpty(true);\r\n\t\t\tpre.appendChild(box);\r\n\t\t\tnode.listbox = box;\r\n\t\t}\r\n\r\n\t\tif( (options && options.collapsed) || current_level >= this.collapsed_depth )\r\n\t\t\tnode.listbox.collapse();\r\n\r\n\t\tvar child_elements = this.getChildren( node.dataset[\"item_id\"] );\r\n\t\tif(!child_elements)\r\n\t\t\treturn; //null\r\n\r\n\t\tif(child_elements.length)\r\n\t\t\tnode.listbox.setEmpty(false);\r\n\t\telse\r\n\t\t\tnode.listbox.setEmpty(true);\r\n\t}\r\n\r\n\tTree.prototype.onClickBox = function(e, node)\r\n\t{\r\n\t\tvar children = this.getChildren( node );\r\n\r\n\t\tif(!children)\r\n\t\t\treturn;\r\n\r\n\t\t//update children visibility\r\n\t\tfor(var i = 0; i < children.length; ++i)\r\n\t\t{\r\n\t\t\tvar child = children[i];\r\n\t\t\t\r\n\t\t\tvar child_parent = this.getParent( child );\r\n\t\t\tvar visible = true;\r\n\t\t\tif( child_parent )\r\n\t\t\t\tvisible = this._isNodeChildrenVisible(child_parent);\r\n\t\t\tif(visible)\r\n\t\t\t\tchild.classList.remove(\"hidden\");\r\n\t\t\telse\r\n\t\t\t\tchild.classList.add(\"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn LiteGUI.Tree = Tree;\r\n});\n//enclose in a scope\r\ndefine('skylark-litegui/widgets',[\r\n\t\"./litegui\"\r\n],function(LiteGUI){\r\n\r\n\r\n\r\n\tfunction Button( value, options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tif(typeof(options) === \"function\")\r\n\t\t\toptions = { callback: options };\r\n\r\n\t\tvar that = this;\r\n\t\tvar element = document.createElement(\"div\");\r\n\t\telement.className = \"litegui button\";\r\n\r\n\t\tthis.root = element;\r\n\t\tvar button = document.createElement(\"button\");\r\n\t\tbutton.className = \"litebutton\";\r\n\t\tthis.content = button;\r\n\t\telement.appendChild(button);\r\n\r\n\t\tbutton.innerHTML = value;\t\t\r\n\t\tbutton.addEventListener(\"click\", function(e) { \r\n\t\t\tthat.click();\r\n\t\t});\r\n\r\n\t\tthis.click = function()\r\n\t\t{\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call(that);\r\n\t\t}\r\n\t}\r\n\r\n\tLiteGUI.Button = Button;\r\n\r\n\t/**\r\n\t* SearchBox \r\n\t*\r\n\t* @class SearchBox\r\n\t* @constructor\r\n\t* @param {*} value\r\n\t* @param {Object} options\r\n\t*/\r\n\r\n\tfunction SearchBox( value, options )\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tvalue = value || \"\";\r\n\t\tvar element = document.createElement(\"div\");\r\n\t\telement.className = \"litegui searchbox\";\r\n\t\tvar placeholder = (options.placeholder != null ? options.placeholder : \"Search\");\r\n\t\telement.innerHTML = \"<input value='\"+value+\"' placeholder='\"+ placeholder +\"'/>\";\r\n\t\tthis.input = element.querySelector(\"input\");\r\n\t\tthis.root = element;\r\n\t\tvar that = this;\r\n\r\n\t\tthis.input.onchange = function(e) { \r\n\t\t\tvar value = e.target.value;\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call(that,value);\r\n\t\t};\r\n\t}\r\n\r\n\tSearchBox.prototype.setValue = function(v) { this.input.value = v; this.input.onchange(); };\r\n\tSearchBox.prototype.getValue = function() { return this.input.value; };\r\n\r\n\tLiteGUI.SearchBox = SearchBox;\r\n\r\n\r\n\t/**\r\n\t* ContextMenu \r\n\t*\r\n\t* @class ContextMenu \r\n\t* @constructor\r\n\t* @param {Array} values (allows object { title: \"Nice text\", callback: function ... })\r\n\t* @param {Object} options [optional] Some options:\\\r\n\t* - title: title to show on top of the menu\r\n\t* - callback: function to call when an option is clicked, it receives the item information\r\n\t* - ignore_item_callbacks: ignores the callback inside the item, it just calls the options.callback \r\n\t* - event: you can pass a MouseEvent, this way the ContextMenu appears in that position\r\n\t*/\r\n\tfunction ContextMenu( values, options )\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tthis.options = options;\r\n\t\tvar that = this;\r\n\r\n\t\t//to link a menu with its parent\r\n\t\tif(options.parentMenu)\r\n\t\t{\r\n\t\t\tif( options.parentMenu.constructor !== this.constructor )\r\n\t\t\t{\r\n\t\t\t\tconsole.error(\"parentMenu must be of class ContextMenu, ignoring it\");\r\n\t\t\t\toptions.parentMenu = null;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.parentMenu = options.parentMenu;\r\n\t\t\t\tthis.parentMenu.lock = true;\r\n\t\t\t\tthis.parentMenu.current_submenu = this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( options.event && options.event.constructor.name !== \"MouseEvent\" && options.event.constructor.name !== \"PointerEvent\" && options.event.constructor.name !== \"CustomEvent\" )\r\n\t\t{\r\n\t\t\tconsole.error(\"Event passed to ContextMenu is not of type MouseEvent or CustomEvent. Ignoring it.\");\r\n\t\t\toptions.event = null;\r\n\t\t}\r\n\r\n\t\tvar root = document.createElement(\"div\");\r\n\t\troot.className = \"litecontextmenu litemenubar-panel\";\r\n\t\troot.style.minWidth = 100;\r\n\t\troot.style.minHeight = 100;\r\n\t\troot.style.pointerEvents = \"none\";\r\n\t\tsetTimeout( function() { root.style.pointerEvents = \"auto\"; },100); //delay so the mouse up event is not caugh by this element\r\n\r\n\t\t//this prevents the default context browser menu to open in case this menu was created when pressing right button \r\n\t\troot.addEventListener(\"mouseup\", function(e){ \r\n\t\t\te.preventDefault(); return true; \r\n\t\t}, true);\r\n\t\troot.addEventListener(\"contextmenu\", function(e) { \r\n\t\t\tif(e.button != 2) //right button\r\n\t\t\t\treturn false;\r\n\t\t\te.preventDefault(); \r\n\t\t\treturn false;\r\n\t\t},true);\r\n\r\n\t\troot.addEventListener(\"mousedown\", function(e){ \r\n\t\t\tif(e.button == 2)\r\n\t\t\t{\r\n\t\t\t\tthat.close();\r\n\t\t\t\te.preventDefault(); return true; \r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\r\n\t\tthis.root = root;\r\n\r\n\t\t//title\r\n\t\tif(options.title)\r\n\t\t{\r\n\t\t\tvar element = document.createElement(\"div\");\r\n\t\t\telement.className = \"litemenu-title\";\r\n\t\t\telement.innerHTML = options.title;\r\n\t\t\troot.appendChild(element);\r\n\t\t}\r\n\r\n\t\t//entries\r\n\t\tvar num = 0;\r\n\t\tfor(var i in values)\r\n\t\t{\r\n\t\t\tvar name = values.constructor == Array ? values[i] : i;\r\n\t\t\tif( name != null && name.constructor !== String )\r\n\t\t\t\tname = name.content === undefined ? String(name) : name.content;\r\n\t\t\tvar value = values[i];\r\n\t\t\tthis.addItem( name, value, options );\r\n\t\t\tnum++;\r\n\t\t}\r\n\r\n\t\t//close on leave\r\n\t\troot.addEventListener(\"mouseleave\", function(e) {\r\n\t\t\tif(that.lock)\r\n\t\t\t\treturn;\r\n\t\t\tif(root.closing_timer)\r\n\t\t\t\tclearTimeout( root.closing_timer );\r\n\t\t\troot.closing_timer = setTimeout( that.close.bind(that, e), 500 );\r\n\t\t\t//that.close(e);\r\n\t\t});\r\n\r\n\t\troot.addEventListener(\"mouseenter\", function(e) {\r\n\t\t\tif(root.closing_timer)\r\n\t\t\t\tclearTimeout( root.closing_timer );\r\n\t\t});\r\n\r\n\t\tfunction on_mouse_wheel(e)\r\n\t\t{\r\n\t\t\tvar pos = parseInt( root.style.top );\r\n\t\t\troot.style.top = (pos + e.deltaY * 0.1).toFixed() + \"px\";\r\n\t\t\te.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\troot.addEventListener(\"wheel\", on_mouse_wheel, true);\r\n\t\troot.addEventListener(\"mousewheel\", on_mouse_wheel, true);\r\n\r\n\r\n\t\t//insert before checking position\r\n\t\tvar root_document = document;\r\n\t\tif(options.event)\r\n\t\t\troot_document = options.event.target.ownerDocument; \r\n\r\n\t\tif(!root_document)\r\n\t\t\troot_document = document;\r\n\t\troot_document.body.appendChild(root);\r\n\r\n\t\t//compute best position\r\n\t\tvar left = options.left || 0;\r\n\t\tvar top = options.top || 0;\r\n\t\tif(options.event)\r\n\t\t{\r\n\t\t\tif( options.event.constructor.name !== \"MouseEvent\" && options.event.constructor.name !== \"PointerEvent\" && options.event.constructor.name !== \"CustomEvent\" )\r\n\t\t\t{\r\n\t\t\t\tconsole.warn(\"Event passed to ContextMenu is not of type MouseEvent\");\r\n\t\t\t\toptions.event = null;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tleft = (options.event.pageX - 10);\r\n\t\t\t\ttop = (options.event.pageY - 10);\r\n\t\t\t\tif(options.title)\r\n\t\t\t\t\ttop -= 20;\r\n\r\n\t\t\t\tif(options.parentMenu)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar rect = options.parentMenu.root.getBoundingClientRect();\r\n\t\t\t\t\tleft = rect.left + rect.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar body_rect = document.body.getBoundingClientRect();\r\n\t\t\t\tvar root_rect = root.getBoundingClientRect();\r\n\r\n\t\t\t\tif(left > (body_rect.width - root_rect.width - 10))\r\n\t\t\t\t\tleft = (body_rect.width - root_rect.width - 10);\r\n\t\t\t\tif(top > (body_rect.height - root_rect.height - 10))\r\n\t\t\t\t\ttop = (body_rect.height - root_rect.height - 10);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\troot.style.left = left + \"px\";\r\n\t\troot.style.top = top  + \"px\";\r\n\t}\r\n\r\n\tContextMenu.prototype.addItem = function( name, value, options )\r\n\t{\r\n\t\tvar that = this;\r\n\t\toptions = options || {};\r\n\r\n\t\tvar element = document.createElement(\"div\");\r\n\t\telement.className = \"litemenu-entry submenu\";\r\n\r\n\t\tvar disabled = false;\r\n\r\n\t\tif(value === null)\r\n\t\t{\r\n\t\t\telement.classList.add(\"separator\");\r\n\t\t\t//element.innerHTML = \"<hr/>\"\r\n\t\t\t//continue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\telement.innerHTML = value && value.title ? value.title : name;\r\n\t\t\telement.value = value;\r\n\r\n\t\t\tif(value)\r\n\t\t\t{\r\n\t\t\t\tif(value.disabled)\r\n\t\t\t\t{\r\n\t\t\t\t\tdisabled = true;\r\n\t\t\t\t\telement.classList.add(\"disabled\");\r\n\t\t\t\t}\r\n\t\t\t\tif(value.submenu || value.has_submenu)\r\n\t\t\t\t\telement.classList.add(\"has_submenu\");\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof(value) == \"function\")\r\n\t\t\t{\r\n\t\t\t\telement.dataset[\"value\"] = name;\r\n\t\t\t\telement.onclick_callback = value;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telement.dataset[\"value\"] = value;\r\n\t\t}\r\n\r\n\t\tthis.root.appendChild(element);\r\n\t\tif(!disabled)\r\n\t\t\telement.addEventListener(\"click\", inner_onclick);\r\n\t\tif(options.autoopen)\r\n\t\t\telement.addEventListener(\"mouseenter\", inner_over);\r\n\r\n\t\tfunction inner_over(e)\r\n\t\t{\r\n\t\t\tvar value = this.value;\r\n\t\t\tif(!value || !value.has_submenu)\r\n\t\t\t\treturn;\r\n\t\t\tinner_onclick.call(this,e);\r\n\t\t}\r\n\r\n\t\t//menu option clicked\r\n\t\tfunction inner_onclick(e) {\r\n\t\t\tvar value = this.value;\r\n\t\t\tvar close_parent = true;\r\n\r\n\t\t\tif(that.current_submenu)\r\n\t\t\t\tthat.current_submenu.close(e);\r\n\r\n\t\t\t//global callback\r\n\t\t\tif(options.callback) \r\n\t\t\t{\r\n\t\t\t\tvar r = options.callback.call(that, value, options, e );\r\n\t\t\t\tif(r === true)\r\n\t\t\t\t\tclose_parent = false;\r\n\t\t\t}\r\n\r\n\t\t\t//special cases\r\n\t\t\tif(value)\r\n\t\t\t{\r\n\t\t\t\tif (value.callback && !options.ignore_item_callbacks && value.disabled !== true )  //item callback\r\n\t\t\t\t{\r\n\t\t\t\t\tvar r = value.callback.call( this, value, options, e, that );\r\n\t\t\t\t\tif(r === true)\r\n\t\t\t\t\t\tclose_parent = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(value.submenu)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!value.submenu.options)\r\n\t\t\t\t\t\tthrow(\"ContextMenu submenu needs options\");\r\n\t\t\t\t\tvar submenu = new LiteGUI.ContextMenu( value.submenu.options, {\r\n\t\t\t\t\t\tcallback: value.submenu.callback,\r\n\t\t\t\t\t\tevent: e,\r\n\t\t\t\t\t\tparentMenu: that,\r\n\t\t\t\t\t\tignore_item_callbacks: value.submenu.ignore_item_callbacks,\r\n\t\t\t\t\t\ttitle: value.submenu.title,\r\n\t\t\t\t\t\tautoopen: options.autoopen\r\n\t\t\t\t\t});\r\n\t\t\t\t\tclose_parent = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(close_parent && !that.lock)\r\n\t\t\t\tthat.close();\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\tContextMenu.prototype.close = function(e, ignore_parent_menu)\r\n\t{\r\n\t\tif(this.root.parentNode)\r\n\t\t\tthis.root.parentNode.removeChild( this.root );\r\n\t\tif(this.parentMenu && !ignore_parent_menu)\r\n\t\t{\r\n\t\t\tthis.parentMenu.lock = false;\r\n\t\t\tthis.parentMenu.current_submenu = null;\r\n\t\t\tif( e === undefined )\r\n\t\t\t\tthis.parentMenu.close();\r\n\t\t\telse if( e && !LiteGUI.isCursorOverElement( e, this.parentMenu.root) )\r\n\t\t\t\tLiteGUI.trigger( this.parentMenu.root, \"mouseleave\", e );\r\n\t\t}\r\n\t\tif(this.current_submenu)\r\n\t\t\tthis.current_submenu.close(e, true);\r\n\t\tif(this.root.closing_timer)\r\n\t\t\tclearTimeout( this.root.closing_timer );\r\n\t}\r\n\r\n\t//returns the top most menu\r\n\tContextMenu.prototype.getTopMenu = function()\r\n\t{\r\n\t\tif( this.options.parentMenu )\r\n\t\t\treturn this.options.parentMenu.getTopMenu();\r\n\t\treturn this;\r\n\t}\r\n\r\n\tContextMenu.prototype.getFirstEvent = function()\r\n\t{\r\n\t\tif( this.options.parentMenu )\r\n\t\t\treturn this.options.parentMenu.getFirstEvent();\r\n\t\treturn this.options.event;\r\n\t}\r\n\r\n\tLiteGUI.ContextMenu = ContextMenu;\r\n\tLiteGUI.ContextualMenu = ContextMenu; //LEGACY: REMOVE\r\n\r\n\r\n\tfunction Checkbox( value, on_change)\r\n\t{\r\n\t\tvar that = this;\r\n\t\tthis.value = value;\r\n\r\n\t\tvar root = this.root = document.createElement(\"span\");\r\n\t\troot.className = \"litecheckbox inputfield\";\r\n\t\troot.dataset[\"value\"] = value;\r\n\r\n\t\tvar element = this.element = document.createElement(\"span\");\r\n\t\telement.className = \"fixed flag checkbox \"+(value ? \"on\" : \"off\");\r\n\t\troot.appendChild( element );\r\n\t\t\r\n\t\troot.addEventListener(\"click\", onClick.bind(this) );\r\n\r\n\t\tfunction onClick(e) {\r\n\t\t\tthis.setValue( this.root.dataset[\"value\"] != \"true\" );\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\r\n\t\tthis.setValue = function(v)\r\n\t\t{\r\n\t\t\tif(this.value === v)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif( this.root.dataset[\"value\"] == v.toString())\r\n\t\t\t\treturn;\r\n\r\n\t\t\tthis.root.dataset[\"value\"] = v;\r\n\t\t\tif(v)\r\n\t\t\t{\r\n\t\t\t\tthis.element.classList.remove(\"off\");\r\n\t\t\t\tthis.element.classList.add(\"on\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.element.classList.remove(\"on\");\r\n\t\t\t\tthis.element.classList.add(\"off\");\r\n\t\t\t}\r\n\t\t\tvar old_value = this.value;\r\n\t\t\tthis.value = v;\r\n\r\n\t\t\tif(on_change)\r\n\t\t\t\ton_change( v, old_value );\r\n\t\t}\r\n\r\n\t\tthis.getValue = function()\r\n\t\t{\r\n\t\t\treturn this.value;\r\n\t\t\t//return this.root.dataset[\"value\"] == \"true\";\r\n\t\t}\r\n\t}\t\r\n\r\n\tLiteGUI.Checkbox = Checkbox;\r\n\r\n\r\n\t//the tiny box to expand the children of a node\r\n\tfunction createLitebox(state, on_change)\r\n\t{\r\n\t\tvar element = document.createElement(\"span\");\r\n\t\telement.className = \"listbox \" + (state ? \"listopen\" : \"listclosed\");\r\n\t\telement.innerHTML = state ? \"&#9660;\" : \"&#9658;\";\r\n\t\telement.dataset[\"value\"] = state ? \"open\" : \"closed\";\r\n\t\telement.addEventListener(\"click\", onClick );\r\n\t\telement.on_change_callback = on_change;\r\n\r\n\t\telement.setEmpty = function(v)\r\n\t\t{\r\n\t\t\tif(v)\r\n\t\t\t\tthis.classList.add(\"empty\");\r\n\t\t\telse\r\n\t\t\t\tthis.classList.remove(\"empty\");\r\n\t\t}\r\n\r\n\t\telement.expand = function()\r\n\t\t{\r\n\t\t\tthis.setValue(true);\r\n\t\t}\r\n\r\n\t\telement.collapse = function()\r\n\t\t{\r\n\t\t\tthis.setValue(false);\r\n\t\t}\r\n\r\n\t\telement.setValue = function(v)\r\n\t\t{\r\n\t\t\tif(this.dataset[\"value\"] == (v ? \"open\" : \"closed\"))\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(!v)\r\n\t\t\t{\r\n\t\t\t\tthis.dataset[\"value\"] = \"closed\";\r\n\t\t\t\tthis.innerHTML = \"&#9658;\";\r\n\t\t\t\tthis.classList.remove(\"listopen\");\r\n\t\t\t\tthis.classList.add(\"listclosed\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.dataset[\"value\"] = \"open\";\r\n\t\t\t\tthis.innerHTML = \"&#9660;\";\r\n\t\t\t\tthis.classList.add(\"listopen\");\r\n\t\t\t\tthis.classList.remove(\"listclosed\");\r\n\t\t\t}\r\n\r\n\t\t\tif(on_change)\r\n\t\t\t\ton_change( this.dataset[\"value\"] );\r\n\t\t}\r\n\r\n\t\telement.getValue = function()\r\n\t\t{\r\n\t\t\treturn this.dataset[\"value\"];\r\n\t\t}\r\n\r\n\t\tfunction onClick(e) {\r\n\t\t\t//console.log(\"CLICK\");\r\n\t\t\tvar box = e.target;\r\n\t\t\tbox.setValue( this.dataset[\"value\"] == \"open\" ? false : true );\r\n\t\t\tif(this.stopPropagation)\r\n\t\t\t\te.stopPropagation();\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\t\r\n\r\n\tLiteGUI.createLitebox = createLitebox;\r\n\r\n\t/**\r\n\t* List \r\n\t*\r\n\t* @class List\r\n\t* @constructor\r\n\t* @param {String} id\r\n\t* @param {Array} values\r\n\t* @param {Object} options\r\n\t*/\r\n\tfunction List( id, items, options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tvar root = this.root = document.createElement(\"ul\");\r\n\t\troot.id = id;\r\n\t\troot.className = \"litelist\";\r\n\t\tthis.items = [];\r\n\t\tvar that = this;\r\n\r\n\t\tthis.callback = options.callback;\r\n\r\n\t\t//walk over every item in the list\r\n\t\tfor(var i in items)\r\n\t\t{\r\n\t\t\tvar item = document.createElement(\"li\");\r\n\t\t\titem.className = \"list-item\";\r\n\t\t\titem.data = items[i];\r\n\t\t\titem.dataset[\"value\"] = items[i];\r\n\r\n\t\t\tvar content = \"\";\r\n\t\t\tif(typeof(items[i]) == \"string\")\r\n\t\t\t\tcontent = items[i] + \"<span class='arrow'></span>\";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tcontent = (items[i].name || items[i].title || \"\") + \"<span class='arrow'></span>\";\r\n\t\t\t\tif(items[i].id)\r\n\t\t\t\t\titem.id = items[i].id;\r\n\t\t\t}\r\n\t\t\titem.innerHTML = content;\r\n\r\n\t\t\titem.addEventListener(\"click\", function() {\r\n\r\n\t\t\t\tvar list = root.querySelectorAll(\".list-item.selected\");\r\n\t\t\t\tfor(var j = 0; j < list.length; ++j)\r\n\t\t\t\t\tlist[j].classList.remove(\"selected\");\r\n\t\t\t\tthis.classList.add(\"selected\");\r\n\t\t\t\tLiteGUI.trigger( that.root, \"wchanged\", this );\r\n\t\t\t\tif(that.callback)\r\n\t\t\t\t\tthat.callback( this.data  );\r\n\t\t\t});\r\n\r\n\t\t\troot.appendChild(item);\r\n\t\t}\r\n\r\n\r\n\t\tif(options.parent)\r\n\t\t{\r\n\t\t\tif(options.parent.root)\r\n\t\t\t\toptions.parent.root.appendChild( root );\r\n\t\t\telse\r\n\t\t\t\toptions.parent.appendChild( root );\r\n\t\t}\r\n\t}\r\n\r\n\tList.prototype.getSelectedItem = function()\r\n\t{\r\n\t\treturn this.root.querySelector(\".list-item.selected\");\r\n\t}\r\n\r\n\tList.prototype.setSelectedItem = function( name )\r\n\t{\r\n\t\tvar items = this.root.querySelectorAll(\".list-item\");\r\n\t\tfor(var i = 0; i < items.length; i++)\r\n\t\t{\r\n\t\t\tvar item = items[i];\r\n\t\t\tif(item.data == name)\r\n\t\t\t{\r\n\t\t\t\tLiteGUI.trigger( item, \"click\" );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tLiteGUI.List = List;\r\n\r\n\t/**\r\n\t* Slider \r\n\t*\r\n\t* @class Slider\r\n\t* @constructor\r\n\t* @param {Number} value\r\n\t* @param {Object} options\r\n\t*/\r\n\tfunction Slider(value, options)\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tvar root = this.root = document.createElement(\"div\");\r\n\t\tvar that = this;\r\n\t\tthis.value = value;\r\n\t\troot.className = \"liteslider\";\r\n\r\n\t\tthis.setValue = function(value, skip_event)\r\n\t\t{\r\n\t\t\t//var width = canvas.getClientRects()[0].width;\r\n\t\t\tvar min = options.min || 0.0;\r\n\t\t\tvar max = options.max || 1.0;\r\n\t\t\tif(value < min) value = min;\r\n\t\t\telse if(value > max) value = max;\r\n\t\t\tvar range = max - min;\r\n\t\t\tvar norm = (value - min) / range;\r\n\t\t\tvar percentage = (norm*100).toFixed(1) + \"%\";\r\n\t\t\tvar percentage2 = (norm*100+2).toFixed(1) + \"%\";\r\n\t\t\troot.style.background = \"linear-gradient(to right, #999 \" + percentage + \", #FC0 \"+percentage2+\", #333 \" + percentage2 + \")\";\r\n\r\n\t\t\tif(value != this.value)\r\n\t\t\t{\r\n\t\t\t\tthis.value = value;\r\n\t\t\t\tif(!skip_event)\r\n\t\t\t\t{\r\n\t\t\t\t\tLiteGUI.trigger(this.root, \"change\", value );\r\n\t\t\t\t\tif(this.onChange)\r\n\t\t\t\t\t\tthis.onChange( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setFromX(x)\r\n\t\t{\r\n\t\t\tvar rect = root.getBoundingClientRect();\r\n\t\t\tif(!rect)\r\n\t\t\t\treturn;\r\n\t\t\tvar width = rect.width;\r\n\t\t\tvar norm = x / width;\r\n\t\t\tvar min = options.min || 0.0;\r\n\t\t\tvar max = options.max || 1.0;\r\n\t\t\tvar range = max - min;\r\n\t\t\tthat.setValue( range * norm + min );\r\n\t\t}\r\n\r\n\t\tvar doc_binded = null;\r\n\r\n\t\troot.addEventListener(\"mousedown\", function(e) {\r\n\t\t\tvar mouseX, mouseY;\r\n\t\t\tif(e.offsetX) { mouseX = e.offsetX; mouseY = e.offsetY; }\r\n\t\t\telse if(e.layerX) { mouseX = e.layerX; mouseY = e.layerY; }\t\r\n\t\t\tsetFromX(mouseX);\r\n\t\t\tdoc_binded = root.ownerDocument;\r\n\t\t\tdoc_binded.addEventListener(\"mousemove\", onMouseMove );\r\n\t\t\tdoc_binded.addEventListener(\"mouseup\", onMouseUp );\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t});\r\n\r\n\t\tfunction onMouseMove(e)\r\n\t\t{\r\n\t\t\tvar rect = root.getBoundingClientRect();\r\n\t\t\tif(!rect)\r\n\t\t\t\treturn;\r\n\t\t\tvar x = e.x === undefined ? e.pageX : e.x;\r\n\t\t\tvar mouseX = x - rect.left;\r\n\t\t\tsetFromX(mouseX);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction onMouseUp(e)\r\n\t\t{\r\n\t\t\tvar doc = doc_binded || document;\r\n\t\t\tdoc_binded = null;\r\n\t\t\tdoc.removeEventListener(\"mousemove\", onMouseMove );\r\n\t\t\tdoc.removeEventListener(\"mouseup\", onMouseUp );\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tthis.setValue(value);\r\n\t}\r\n\r\n\tLiteGUI.Slider = Slider;\r\n\r\n\t/**\r\n\t* LineEditor \r\n\t*\r\n\t* @class LineEditor\r\n\t* @constructor\r\n\t* @param {Number} value\r\n\t* @param {Object} options\r\n\t*/\r\n\r\n\tfunction LineEditor(value, options)\r\n\t{\r\n\t\toptions = options || {};\r\n\t\tvar element = document.createElement(\"div\");\r\n\t\telement.className = \"curve \" + (options.extraclass ? options.extraclass : \"\");\r\n\t\telement.style.minHeight = \"50px\";\r\n\t\telement.style.width = options.width || \"100%\";\r\n\r\n\t\telement.bgcolor = options.bgcolor || \"#222\";\r\n\t\telement.pointscolor = options.pointscolor || \"#5AF\";\r\n\t\telement.linecolor = options.linecolor || \"#444\";\r\n\r\n\t\telement.value = value || [];\r\n\t\telement.xrange = options.xrange || [0,1]; //min,max\r\n\t\telement.yrange = options.yrange || [0,1]; //min,max\r\n\t\telement.defaulty = options.defaulty != null ? options.defaulty : 0.5;\r\n\t\telement.no_trespassing = options.no_trespassing || false;\r\n\t\telement.show_samples = options.show_samples || 0;\r\n\t\telement.options = options;\r\n\t\telement.style.minWidth = \"50px\";\r\n\t\telement.style.minHeight = \"20px\";\r\n\r\n\t\tvar canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.width = options.width || 200;\r\n\t\tcanvas.height = options.height || 50;\r\n\t\telement.appendChild( canvas );\r\n\t\telement.canvas = canvas;\r\n\r\n\t\telement.addEventListener(\"mousedown\",onmousedown);\r\n\r\n\t\telement.getValueAt = function(x)\r\n\t\t{\r\n\t\t\tif(x < element.xrange[0] || x > element.xrange[1])\r\n\t\t\t\treturn element.defaulty;\r\n\r\n\t\t\tvar last = [ element.xrange[0], element.defaulty ];\r\n\t\t\tvar f = 0;\r\n\t\t\tfor(var i = 0; i < element.value.length; i += 1)\r\n\t\t\t{\r\n\t\t\t\tvar v = element.value[i];\r\n\t\t\t\tif(x == v[0]) return v[1];\r\n\t\t\t\tif(x < v[0])\r\n\t\t\t\t{\r\n\t\t\t\t\tf = (x - last[0]) / (v[0] - last[0]);\r\n\t\t\t\t\treturn last[1] * (1-f) + v[1] * f;\r\n\t\t\t\t}\r\n\t\t\t\tlast = v;\r\n\t\t\t}\r\n\r\n\t\t\tv = [ element.xrange[1], element.defaulty ];\r\n\t\t\tf = (x - last[0]) / (v[0] - last[0]);\r\n\t\t\treturn last[1] * (1-f) + v[1] * f;\r\n\t\t}\r\n\r\n\t\telement.resample = function(samples)\r\n\t\t{\r\n\t\t\tvar r = [];\r\n\t\t\tvar dx = (element.xrange[1] - element.xrange[0]) / samples;\r\n\t\t\tfor(var i = element.xrange[0]; i <= element.xrange[1]; i += dx)\r\n\t\t\t{\r\n\t\t\t\tr.push( element.getValueAt(i) );\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t}\r\n\r\n\t\telement.addValue = function(v)\r\n\t\t{\r\n\t\t\tfor(var i = 0; i < element.value; i++)\r\n\t\t\t{\r\n\t\t\t\tvar value = element.value[i];\r\n\t\t\t\tif(value[0] < v[0]) continue;\r\n\t\t\t\telement.value.splice(i,0,v);\r\n\t\t\t\tredraw();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\telement.value.push(v);\r\n\t\t\tredraw();\r\n\t\t}\r\n\r\n\t\t//value to canvas\r\n\t\tfunction convert(v)\r\n\t\t{\r\n\t\t\treturn [ canvas.width * ( (element.xrange[1] - element.xrange[0]) * v[0] + element.xrange[0]),\r\n\t\t\t\tcanvas.height * ((element.yrange[1] - element.yrange[0]) * v[1] + element.yrange[0])];\r\n\t\t}\r\n\r\n\t\t//canvas to value\r\n\t\tfunction unconvert(v)\r\n\t\t{\r\n\t\t\treturn [(v[0] / canvas.width - element.xrange[0]) / (element.xrange[1] - element.xrange[0]),\r\n\t\t\t\t\t(v[1] / canvas.height - element.yrange[0]) / (element.yrange[1] - element.yrange[0])];\r\n\t\t}\r\n\r\n\t\tvar selected = -1;\r\n\r\n\t\telement.redraw = function()\r\n\t\t{\r\n\t\t\tvar rect = canvas.parentNode.getBoundingClientRect();\r\n\t\t\tif(rect && canvas.width != rect.width && rect.width && rect.width < 1000)\r\n\t\t\t\tcanvas.width = rect.width;\r\n\t\t\tif(rect && canvas.height != rect.height && rect.height && rect.height < 1000)\r\n\t\t\t\tcanvas.height = rect.height;\r\n\r\n\t\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\tctx.translate(0,canvas.height);\r\n\t\t\tctx.scale(1,-1);\r\n\r\n\t\t\tctx.fillStyle = element.bgcolor;\r\n\t\t\tctx.fillRect(0,0,canvas.width,canvas.height);\r\n\r\n\t\t\tctx.strokeStyle = element.linecolor;\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\t//draw line\r\n\t\t\tvar pos = convert([element.xrange[0],element.defaulty]);\r\n\t\t\tctx.moveTo( pos[0], pos[1] );\r\n\r\n\t\t\tfor(var i in element.value)\r\n\t\t\t{\r\n\t\t\t\tvar value = element.value[i];\r\n\t\t\t\tpos = convert(value);\r\n\t\t\t\tctx.lineTo( pos[0], pos[1] );\r\n\t\t\t}\r\n\r\n\t\t\tpos = convert([element.xrange[1],element.defaulty]);\r\n\t\t\tctx.lineTo( pos[0], pos[1] );\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\t//draw points\r\n\t\t\tfor(var i = 0; i < element.value.length; i += 1)\r\n\t\t\t{\r\n\t\t\t\tvar value = element.value[i];\r\n\t\t\t\tpos = convert(value);\r\n\t\t\t\tif(selected == i)\r\n\t\t\t\t\tctx.fillStyle = \"white\";\r\n\t\t\t\telse\r\n\t\t\t\t\tctx.fillStyle = element.pointscolor;\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.arc( pos[0], pos[1], selected == i ? 4 : 2, 0, Math.PI * 2);\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\tif(element.show_samples)\r\n\t\t\t{\r\n\t\t\t\tvar samples = element.resample(element.show_samples);\r\n\t\t\t\tctx.fillStyle = \"#888\";\r\n\t\t\t\tfor(var i = 0; i < samples.length; i += 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar value = [ i * ((element.xrange[1] - element.xrange[0]) / element.show_samples) + element.xrange[0], samples[i] ];\r\n\t\t\t\t\tpos = convert(value);\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.arc( pos[0], pos[1], 2, 0, Math.PI * 2);\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar last_mouse = [0,0];\r\n\t\tfunction onmousedown(evt)\r\n\t\t{\r\n\t\t\tdocument.addEventListener(\"mousemove\",onmousemove);\r\n\t\t\tdocument.addEventListener(\"mouseup\",onmouseup);\r\n\r\n\t\t\tvar rect = canvas.getBoundingClientRect();\r\n\t\t\tvar mousex = evt.clientX - rect.left;\r\n\t\t\tvar mousey = evt.clientY - rect.top;\r\n\r\n\t\t\tselected = computeSelected(mousex,canvas.height-mousey);\r\n\r\n\t\t\tif(selected == -1)\r\n\t\t\t{\r\n\t\t\t\tvar v = unconvert([mousex,canvas.height-mousey]);\r\n\t\t\t\telement.value.push(v);\r\n\t\t\t\tsortValues();\r\n\t\t\t\tselected = element.value.indexOf(v);\r\n\t\t\t}\r\n\r\n\t\t\tlast_mouse = [mousex,mousey];\r\n\t\t\telement.redraw();\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\r\n\t\tfunction onmousemove(evt)\r\n\t\t{\r\n\t\t\tvar rect = canvas.getBoundingClientRect();\r\n\t\t\tvar mousex = evt.clientX - rect.left;\r\n\t\t\tvar mousey = evt.clientY - rect.top;\r\n\r\n\t\t\tif(mousex < 0) mousex = 0;\r\n\t\t\telse if(mousex > canvas.width) mousex = canvas.width;\r\n\t\t\tif(mousey < 0) mousey = 0;\r\n\t\t\telse if(mousey > canvas.height) mousey = canvas.height;\r\n\r\n\t\t\t//dragging to remove\r\n\t\t\tif( selected != -1 && distance( [evt.clientX - rect.left, evt.clientY - rect.top], [mousex,mousey] ) > canvas.height * 0.5 )\r\n\t\t\t{\r\n\t\t\t\telement.value.splice(selected,1);\r\n\t\t\t\tonmouseup(evt);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar dx = last_mouse[0] - mousex;\r\n\t\t\tvar dy = last_mouse[1] - mousey;\r\n\t\t\tvar delta = unconvert([-dx,dy]);\r\n\t\t\tif(selected != -1)\r\n\t\t\t{\r\n\t\t\t\tvar minx = element.xrange[0];\r\n\t\t\t\tvar maxx = element.xrange[1];\r\n\r\n\t\t\t\tif(element.no_trespassing)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(selected > 0) minx = element.value[selected-1][0];\r\n\t\t\t\t\tif(selected < (element.value.length-1) ) maxx = element.value[selected+1][0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar v = element.value[selected];\r\n\t\t\t\tv[0] += delta[0];\r\n\t\t\t\tv[1] += delta[1];\r\n\t\t\t\tif(v[0] < minx) v[0] = minx;\r\n\t\t\t\telse if(v[0] > maxx) v[0] = maxx;\r\n\t\t\t\tif(v[1] < element.yrange[0]) v[1] = element.yrange[0];\r\n\t\t\t\telse if(v[1] > element.yrange[1]) v[1] = element.yrange[1];\r\n\t\t\t}\r\n\r\n\t\t\tsortValues();\r\n\t\t\telement.redraw();\r\n\t\t\tlast_mouse[0] = mousex;\r\n\t\t\tlast_mouse[1] = mousey;\r\n\t\t\tonchange();\r\n\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\r\n\t\tfunction onmouseup(evt)\r\n\t\t{\r\n\t\t\tselected = -1;\r\n\t\t\telement.redraw();\r\n\t\t\tdocument.removeEventListener(\"mousemove\",onmousemove);\r\n\t\t\tdocument.removeEventListener(\"mouseup\",onmouseup);\r\n\t\t\tonchange();\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\r\n\t\tfunction onresize(e)\r\n\t\t{\r\n\t\t\telement.redraw();\r\n\t\t}\r\n\t\t\r\n\t\tfunction onchange()\r\n\t\t{\r\n\t\t\tif(options.callback)\r\n\t\t\t\toptions.callback.call(element,element.value);\r\n\t\t\telse\r\n\t\t\t\tLiteGUI.trigger(element,\"change\");\r\n\t\t}\r\n\r\n\t\tfunction distance(a,b) { return Math.sqrt( Math.pow(b[0]-a[0],2) + Math.pow(b[1]-a[1],2) ); };\r\n\r\n\t\tfunction computeSelected(x,y)\r\n\t\t{\r\n\t\t\tvar min_dist = 100000;\r\n\t\t\tvar max_dist = 8; //pixels\r\n\t\t\tvar selected = -1;\r\n\t\t\tfor(var i=0; i < element.value.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar value = element.value[i];\r\n\t\t\t\tvar pos = convert(value);\r\n\t\t\t\tvar dist = distance([x,y],pos);\r\n\t\t\t\tif(dist < min_dist && dist < max_dist)\r\n\t\t\t\t{\r\n\t\t\t\t\tmin_dist = dist;\r\n\t\t\t\t\tselected = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn selected;\r\n\t\t}\r\n\r\n\t\tfunction sortValues()\r\n\t\t{\r\n\t\t\tvar v = null;\r\n\t\t\tif(selected != -1)\r\n\t\t\t\tv = element.value[selected];\r\n\t\t\telement.value.sort(function(a,b) { return a[0] - b[0]; });\r\n\t\t\tif(v)\r\n\t\t\t\tselected = element.value.indexOf(v);\r\n\t\t}\r\n\t\t\r\n\t\telement.redraw();\r\n\t\treturn element;\r\n\t}\r\n\r\n\tLiteGUI.LineEditor = LineEditor;\r\n\r\n\r\n\tfunction ComplexList( options )\r\n\t{\r\n\t\toptions = options || {};\r\n\r\n\t\tthis.root = document.createElement(\"div\");\r\n\t\tthis.root.className = \"litecomplexlist\";\r\n\r\n\t\tthis.item_code = options.item_code || \"<div class='listitem'><span class='tick'><span>\"+LiteGUI.special_codes.tick+\"</span></span><span class='title'></span><button class='trash'>\"+LiteGUI.special_codes.close+\"</button></div>\";\r\n\r\n\t\tif(options.height)\r\n\t\t\tthis.root.style.height = LiteGUI.sizeToCSS( options.height );\r\n\r\n\t\tthis.selected = null;\r\n\t\tthis.onItemSelected = null;\r\n\t\tthis.onItemToggled = null;\r\n\t\tthis.onItemRemoved = null;\r\n\t}\r\n\r\n\tComplexList.prototype.addTitle = function( text )\r\n\t{\r\n\t\tvar elem = LiteGUI.createElement(\"div\",\".listtitle\",text);\r\n\t\tthis.root.appendChild( elem );\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tComplexList.prototype.addHTML = function( html, on_click )\r\n\t{\r\n\t\tvar elem = LiteGUI.createElement(\"div\",\".listtext\", html );\r\n\t\tif(on_click)\r\n\t\t\telem.addEventListener(\"mousedown\", on_click);\r\n\t\tthis.root.appendChild( elem );\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tComplexList.prototype.clear = function()\r\n\t{\r\n\t\tthis.root.innerHTML = \"\";\r\n\t}\r\n\r\n\tComplexList.prototype.addItem = function( item, text, is_enabled, can_be_removed )\r\n\t{\r\n\t\tvar title = text || item.content || item.name;\r\n\t\tvar elem = LiteGUI.createListItem( this.item_code, { \".title\": title } );\r\n\t\telem.item = item;\r\n\r\n\t\tif(is_enabled)\r\n\t\t\telem.classList.add(\"enabled\");\r\n\r\n\t\tif(!can_be_removed)\r\n\t\t\telem.querySelector(\".trash\").style.display = \"none\";\r\n\r\n\t\tvar that = this;\r\n\t\telem.addEventListener(\"mousedown\", function(e){\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.setSelected(true);\r\n\t\t\tif(that.onItemSelected)\r\n\t\t\t\tthat.onItemSelected( item, elem );\r\n\t\t});\r\n\t\telem.querySelector(\".tick\").addEventListener(\"mousedown\",  function(e){\r\n\t\t\te.preventDefault();\r\n\t\t\telem.classList.toggle(\"enabled\");\r\n\t\t\tif(that.onItemToggled)\r\n\t\t\t\tthat.onItemToggled( item, elem, elem.classList.contains(\"enabled\"));\r\n\t\t});\r\n\r\n\t\telem.querySelector(\".trash\").addEventListener(\"mousedown\",function(e){\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\tif(that.onItemRemoved)\r\n\t\t\t\tthat.onItemRemoved( item, elem );\r\n\t\t});\r\n\r\n\t\telem.setContent = function(v, is_html){\r\n\t\t\tif(is_html)\r\n\t\t\t\telem.querySelector(\".title\").innerHTML = v;\r\n\t\t\telse\r\n\t\t\t\telem.querySelector(\".title\").innerText = v;\r\n\t\t}\r\n\r\n\t\telem.toggleEnabled = function(v){\r\n\t\t\telem.classList.toggle(\"enabled\");\r\n\t\t}\r\n\r\n\t\telem.setSelected = function(v)\r\n\t\t{\r\n\t\t\tLiteGUI.removeClass( that.root, \"selected\" );\r\n\t\t\tif(v)\r\n\t\t\t\tthis.classList.add(\"selected\");\r\n\t\t\telse\r\n\t\t\t\tthis.classList.remove(\"selected\");\r\n\t\t\tthat.selected = elem.item;\r\n\t\t}\r\n\r\n\t\telem.show = function() { this.style.display = \"\"; }\r\n\t\telem.hide = function() { this.style.display = \"none\"; }\r\n\r\n\t\tthis.root.appendChild( elem );\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tLiteGUI.ComplexList = ComplexList;\r\n\r\n\treturn LiteGUI;\r\n});\ndefine('skylark-litegui/main',[\r\n\t\"./litegui\",\r\n\t\"./Area\",\r\n\t\"./Console\",\r\n\t\"./Dialog\",\r\n\t\"./Dragger\",\r\n\t\"./Inspector\",\r\n\t\"./Menubar\",\r\n\t\"./Panel\",\r\n\t\"./Split\",\r\n\t\"./Table\",\r\n\t\"./Tabs\",\r\n\t\"./Tree\",\r\n\t\"./widgets\"\r\n],function(LiteGUI){\r\n\treturn LiteGUI;\r\n});\ndefine('skylark-litegui', ['skylark-litegui/main'], function (main) { return main; });\n\n"]}